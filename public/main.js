'use strict';window.app = angular.module('FullstackGeneratedApp',['fsaPreBuilt','ui.router','ui.bootstrap','ngAnimate','ngCookies','yaru22.angular-timeago','satellizer','angularMoment','luegg.directives','ui-rangeSlider','ngSanitize']);app.config(function($urlRouterProvider,$locationProvider,$uiViewScrollProvider,$httpProvider){ // This turns off hashbang urls (/#about) and changes it to something normal (/about)
$locationProvider.html5Mode(true); // If we go to a URL that ui-router doesn't have registered, go to the "/" url.
$urlRouterProvider.otherwise('/'); // $uiViewScrollProvider.useAnchorScroll();
});app.config(function($authProvider){$authProvider.facebook({clientId:'Facebook App ID'}); // Optional: For client-side use (Implicit Grant), set responseType to 'token'
$authProvider.facebook({clientId:'Facebook App ID',responseType:'token'});$authProvider.google({optionalUrlParams:['access_type'],accessType:'offline',url:'/api/login/google/',clientId:'923811958466-kthtaatodor5mqq0pf5ub6km9msii82g.apps.googleusercontent.com',scope:['https://www.googleapis.com/auth/youtubepartner-channel-audit','https://www.googleapis.com/auth/youtube'],redirectUri:window.location.origin + '/analytics'}); // redirectUri: window.location.origin+'/analytics'
//    responseType: 'token'
$authProvider.github({clientId:'GitHub Client ID'});$authProvider.linkedin({clientId:'LinkedIn Client ID'});$authProvider.instagram({clientId:'ae84968993fc4adf9b2cd246b763bf6b',responseType:'token'});$authProvider.yahoo({clientId:'Yahoo Client ID / Consumer Key'});$authProvider.live({clientId:'Microsoft Client ID'});$authProvider.twitch({clientId:'727419002511745024'});$authProvider.bitbucket({clientId:'Bitbucket Client ID'}); // No additional setup required for Twitter
$authProvider.oauth2({name:'foursquare',url:'/auth/foursquare',clientId:'Foursquare Client ID',redirectUri:window.location.origin,authorizationEndpoint:'https://foursquare.com/oauth2/authenticate'});}); // This app.run is for controlling access to specific states.
app.run(function($rootScope,$window,$http,AuthService,$state,$uiViewScroll,SessionService,AppConfig){ // The given state requires an authenticated user.
// var destinationStateRequiresAuth = function (state) {
//     return state.data && state.data.authenticate;
// };
AppConfig.fetchConfig().then(function(res){ // console.log(res);
AppConfig.setConfig(res.data); // console.log(AppConfig.isConfigParamsvailable);
}); // $stateChangeStart is an event fired
// whenever the process of changing a state begins.
$rootScope.$on('$stateChangeStart',function(event,toState,toParams){if(toState.name == 'reForReInteraction'){$rootScope.state = false;}else {$rootScope.state = true;} // if(toState = 'artistTools') {
//     var user = SessionService.getUser();
//     console.log(user);
// }
// console.log('reached here');
// if (!destinationStateRequiresAuth(toState)) {
//     // The destination state does not require authentication
//     // Short circuit with return.
//     return;
// }
// if (AuthService.isAuthenticated()) {
//     // The user is authenticated.
//     // Short circuit with return.
//     return;
// }
// // Cancel navigating to new state.
// event.preventDefault();
// AuthService.getLoggedInUser().then(function (user) {
//     // If a user is retrieved, then renavigate to the destination
//     // (the second time, AuthService.isAuthenticated() will work)
//     // otherwise, if no user is logged in, go to "login" state.
//     if (user) {
//         $state.go(toState.name, toParams);
//     } else {
//         $state.go('login');
//     }
// });
if($window.location.pathname.indexOf('artistTools') != -1){$http.get('/api/users/isUserAuthenticate').then(function(res){if(!res.data){$window.location.href = '/login';}});};});SessionService.refreshUser();});app.directive('fbLike',['$window','$rootScope',function($window,$rootScope){return {restrict:'A',scope:{fbLike:'=?'},link:function link(scope,element,attrs){if(!$window.FB){ // Load Facebook SDK if not already loaded
$.getScript('//connect.facebook.net/en_US/sdk.js',function(){$window.FB.init({appId:$rootScope.facebookAppId,xfbml:true,version:'v2.0'});renderLikeButton();});}else {renderLikeButton();}var watchAdded=false;function renderLikeButton(){if(!!attrs.fbLike && !scope.fbLike && !watchAdded){ // wait for data if it hasn't loaded yet
watchAdded = true;var unbindWatch=scope.$watch('fbLike',function(newValue,oldValue){if(newValue){renderLikeButton(); // only need to run once
unbindWatch();}});return;}else {element.html('<div class="fb-like"' + (!!scope.fbLike?' data-href="' + scope.fbLike + '"':'') + ' data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>');$window.FB.XFBML.parse(element.parent()[0]);}}}};}]);app.controller('FullstackGeneratedController',function($scope,$state,$http,mainService,SessionService){ /*Load More*/$scope.loadList = function(){$scope.$broadcast('loadTrades');};$scope.shownotification = false;$scope.logout = function(){mainService.logout();};$scope.checkNotification = function(){var user=SessionService.getUser();if(user){return $http.get('/api/trades/withUser/' + user._id).then(function(res){var trades=res.data;trades.forEach(function(trade){if(trade.p1.user._id == user._id){if(trade.p1.alert == "change"){$scope.shownotification = true;}}if(trade.p2.user._id == user._id){if(trade.p2.alert == "change"){$scope.shownotification = true;}}});});}};$scope.linkedUsersChange = function(linkedUsers){$scope.processing = true;$http.post('/api/logout').then(function(){SessionService.deleteUser();$http.post("/api/login/thirdPartylogin",{username:linkedUsers.username,password:linkedUsers.password}).then(function(res){if(res.data){SessionService.create(res.data.user);location.reload();}else {location.reload();}}).then(null,function(err){$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;});});};$scope.checkNotification();});app.directive('fbLike',['$window','$rootScope',function($window,$rootScope){return {restrict:'A',scope:{fbLike:'=?'},link:function link(scope,element,attrs){if(!$window.FB){ // Load Facebook SDK if not already loaded
$.getScript('//connect.facebook.net/en_US/sdk.js',function(){$window.FB.init({appId:$rootScope.facebookAppId,xfbml:true,version:'v2.0'});renderLikeButton();});}else {renderLikeButton();}var watchAdded=false;function renderLikeButton(){if(!!attrs.fbLike && !scope.fbLike && !watchAdded){ // wait for data if it hasn't loaded yet
watchAdded = true;var unbindWatch=scope.$watch('fbLike',function(newValue,oldValue){if(newValue){renderLikeButton(); // only need to run once
unbindWatch();}});return;}else {element.html('<div class="fb-like"' + (!!scope.fbLike?' data-href="' + scope.fbLike + '"':'') + ' data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>');$window.FB.XFBML.parse(element.parent()[0]);}}}};}]);app.directive('fileread',[function(){return {scope:{fileread:'=',message:'='},link:function link(scope,element,attributes){element.bind('change',function(changeEvent){scope.$apply(function(){scope.message = {visible:false,val:''};if(changeEvent.target.files[0].type != "audio/mpeg" && changeEvent.target.files[0].type != "audio/mp3"){scope.message = {visible:true,val:'Error: Please upload mp3 format file.'};element.val(null);return;}if(changeEvent.target.files[0].size > 20 * 1000 * 1000){scope.message = {visible:true,val:'Error: Please upload file upto 20 MB size.'};element.val(null);return;}scope.fileread = changeEvent.target.files[0];});});}};}]);app.service('mainService',function($http,SessionService){ // this.openHelpModal = function() {
//     var displayText = "Hey! Thanks for using artist tools! Please submit any questions you have by clicking 'Support' <br><br><a href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Support</a>";
//     $.Zebra_Dialog(displayText, {
//         width: 600
//     });
// }
this.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/login';});};}); /*Load more*/app.directive('whenScrolled',function(){return function(scope,elm,attr){var raw=elm[0];elm.bind('scroll',function(){if(raw.scrollTop + raw.offsetHeight >= raw.scrollHeight){scope.$apply(attr.whenScrolled);}});};});app.config(function($stateProvider){$stateProvider.state('database',{url:'/admin/database',templateUrl:'js/database/database.html',controller:'DatabaseController'});});app.directive('notificationBar',['socket',function(socket){return {restrict:'EA',scope:true,template:'<div style="margin: 0 auto;width:50%" ng-show="bar.visible">' + '<uib-progress><uib-bar value="bar.value" type="{{bar.type}}"><span>{{bar.value}}%</span></uib-bar></uib-progress>' + '</div>',link:function link($scope,iElm,iAttrs,controller){socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.bar.visible = false;$scope.bar.value = 0;}});}};}]);app.controller('DatabaseController',function($rootScope,$state,$scope,$http,AuthService,SessionService,socket){if(!SessionService.getUser()){$state.go('admin');}$scope.addUser = {};$scope.query = {};$scope.trdUsrQuery = {};$scope.queryCols = [{name:'username',value:'username'},{name:'genre',value:'genre'},{name:'name',value:'name'},{name:'URL',value:'scURL'},{name:'email',value:'email'},{name:'description',value:'description'},{name:'followers',value:'followers'},{name:'number of tracks',value:'numTracks'},{name:'facebook',value:'facebookURL'},{name:'instagram',value:'instagramURL'},{name:'twitter',value:'twitterURL'},{name:'youtube',value:'youtubeURL'},{name:'websites',value:'websites'},{name:'auto email day',value:'emailDayNum'},{name:'all emails',value:'allEmails'}];$scope.downloadButtonVisible = false;$scope.track = {trackUrl:'',downloadUrl:'',email:''};$scope.bar = {type:'success',value:0,visible:false};$scope.paidRepost = {soundCloudUrl:''};$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.saveAddUser = function(){$scope.processing = true;$scope.addUser.password = $rootScope.password;$http.post('/api/database/adduser',$scope.addUser).then(function(res){$.Zebra_Dialog("Success: Database is being populated. You will be emailed when it is complete.");$scope.processing = false;$scope.bar.visible = true;})['catch'](function(err){$.Zebra_Dialog('Bad submission');$scope.processing = false;});};$scope.createUserQueryDoc = function(){var query={};if($scope.query.artist == "artists"){query.artist = true;}else if($scope.query.artist == "non-artists"){query.artist = false;}var flwrQry={};if($scope.query.followersGT){flwrQry.$gt = $scope.query.followersGT;query.followers = flwrQry;}if($scope.query.followersLT){flwrQry.$lt = $scope.query.followersLT;query.followers = flwrQry;}if($scope.query.genre)query.genre = $scope.query.genre;if($scope.queryCols){query.columns = $scope.queryCols.filter(function(elm){return elm.value !== null;}).map(function(elm){return elm.value;});}if($scope.query.trackedUsersURL)query.trackedUsersURL = $scope.query.trackedUsersURL;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/followers',body).then(function(res){$scope.filename = res.data;$scope.downloadButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.createTrdUsrQueryDoc = function(){var query={};var flwrQry={};if($scope.trdUsrQuery.followersGT){flwrQry.$gt = $scope.trdUsrQuery.followersGT;query.followers = flwrQry;}if($scope.trdUsrQuery.followersLT){flwrQry.$lt = $scope.trdUsrQuery.followersLT;query.followers = flwrQry;}if($scope.trdUsrQuery.genre)query.genre = $scope.trdUsrQuery.genre;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/trackedUsers',body).then(function(res){$scope.trdUsrFilename = res.data;$scope.downloadTrdUsrButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.download = function(filename){var anchor=angular.element('<a/>');anchor.attr({href:filename,download:filename})[0].click();$scope.downloadButtonVisible = false;$scope.downloadTrdUsrButtonVisible = false;};$scope.savePaidRepostChannel = function(){$scope.processing = true;$http.post('/api/database/paidrepost',$scope.paidRepost).then(function(res){$scope.paidRepost = {soundCloudUrl:''};$.Zebra_Dialog("SUCCESS: Url saved successfully");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});}; /* Listen to socket events */socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.statusBarVisible = false;$scope.bar.value = 0;}});});(function(){'use strict'; // Hope you didn't forget Angular! Duh-doy.
if(!window.angular)throw new Error('I can\'t find Angular!');var app=angular.module('fsaPreBuilt',[]);app.factory('initSocket',function(){if(!window.io)throw new Error('socket.io not found!');return window.io(window.location.origin);});app.factory('socket',function($rootScope,initSocket){return {on:function on(eventName,callback){initSocket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(initSocket,args);});});},emit:function emit(eventName,data,callback){initSocket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(initSocket,args);}});});}};});app.factory('AppConfig',function($http){var _configParams=null;function fetchConfig(){return $http.get('/api/soundcloud/soundcloudConfig');}function setConfig(data){_configParams = data;SC.initialize({client_id:data.clientID,redirect_uri:data.callbackURL,scope:"non-expiring"});}function getConfig(){return _configParams;}return {fetchConfig:fetchConfig,getConfig:getConfig,setConfig:setConfig};}); // AUTH_EVENTS is used throughout our app to
// broadcast and listen from and to the $rootScope
// for important events about authentication flow.
// app.constant('AUTH_EVENTS', {
//     loginSuccess: 'auth-login-success',
//     loginFailed: 'auth-login-failed',
//     logoutSuccess: 'auth-logout-success',
//     sessionTimeout: 'auth-session-timeout',
//     notAuthenticated: 'auth-not-authenticated',
//     notAuthorized: 'auth-not-authorized'
// });
// app.factory('AuthInterceptor', function($rootScope, $q, AUTH_EVENTS) {
//     var statusDict = {
//         401: AUTH_EVENTS.notAuthenticated,
//         403: AUTH_EVENTS.notAuthorized,
//         419: AUTH_EVENTS.sessionTimeout,
//         440: AUTH_EVENTS.sessionTimeout
//     };
//     return {
//         responseError: function(response) {
//             $rootScope.$broadcast(statusDict[response.status], response);
//             return $q.reject(response)
//         }
//     };
// });
// app.config(function($httpProvider) {
//     $httpProvider.interceptors.push([
//         '$injector',
//         function($injector) {
//             return $injector.get('AuthInterceptor');
//         }
//     ]);
// });
// app.service('AuthService', function($http, Session, $rootScope, AUTH_EVENTS, $q) {
//     function onSuccessfulLogin(response) {
//         var data = response.data;
//         Session.create(data.id, data.user);
//         $rootScope.$broadcast(AUTH_EVENTS.loginSuccess);
//         return data.user;
//     }
//     // Uses the session factory to see if an
//     // authenticated user is currently registered.
//     this.isAuthenticated = function() {
//         return !!Session.user;
//     };
//     this.getLoggedInUser = function(fromServer) {
//         // If an authenticated session exists, we
//         // return the user attached to that session
//         // with a promise. This ensures that we can
//         // always interface with this method asynchronously.
//         // Optionally, if true is given as the fromServer parameter,
//         // then this cached value will not be used.
//         if (this.isAuthenticated() && fromServer !== true) {
//             return $q.when(Session.user);
//         }
//         // Make request GET /session.
//         // If it returns a user, call onSuccessfulLogin with the response.
//         // If it returns a 401 response, we catch it and instead resolve to null.
//         return $http.get('/session').then(onSuccessfulLogin).catch(function() {
//             return null;
//         });
//     };
//     this.login = function(credentials) {
//         return $http.post('/login', credentials)
//             .then(onSuccessfulLogin)
//             .catch(function() {
//                 return $q.reject({
//                     message: 'Invalid login credentials.'
//                 });
//             });
//     };
//     this.logout = function() {
//         return $http.get('/logout').then(function() {
//             Session.destroy();
//             $rootScope.$broadcast(AUTH_EVENTS.logoutSuccess);
//         });
//     };
// });
// app.service('Session', function($rootScope, AUTH_EVENTS) {
//     var self = this;
//     $rootScope.$on(AUTH_EVENTS.notAuthenticated, function() {
//         self.destroy();
//     });
//     $rootScope.$on(AUTH_EVENTS.sessionTimeout, function() {
//         self.destroy();
//     });
//     this.id = null;
//     this.user = null;
//     this.create = function(sessionId, user) {
//         this.id = sessionId;
//         this.user = user;
//     };
//     this.destroy = function() {
//         this.id = null;
//         this.user = null;
//     };
// });
})();app.config(function($stateProvider){$stateProvider.state('admin',{url:'/admin',templateUrl:'js/login/login.html',controller:'AdminLoginController'});});app.controller('AdminLoginController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$window){$scope.counter = 0;$scope.showingElements = [];$scope.submissions = [];$scope.loginObj = {};$scope.isLoggedIn = SessionService.getUser()?true:false;$scope.login = function(){$scope.message = {val:'',visible:false};AuthService.login($scope.loginObj).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){SessionService.create(res.data.user);$state.go('submissions');}else {$scope.message = {val:res.data.message,visible:true};}}function handleLoginError(res){$scope.message = {val:'Error in processing your request',visible:true};}};$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});}; // $scope.manage = function() {
//   $scope.processing = true;
//   SC.connect()
//     .then(function(res) {
//       $rootScope.accessToken = res.oauth_token;
//       return $http.post('/api/login/authenticated', {
//         token: res.oauth_token,
//         password: $rootScope.password,
//       })
//     })
//     .then(function(res) {
//       $scope.processing = false;
//       $rootScope.schedulerInfo = res.data;
//       $rootScope.schedulerInfo.events.forEach(function(ev) {
//         ev.day = new Date(ev.day);
//       });
//       $state.go('scheduler');
//     })
//     .then(null, function(err) {
//       $.Zebra_Dialog('Error: Could not log in');
//       $scope.processing = false;
//     });
// }
});app.config(function($stateProvider){$stateProvider.state('mixingMastering',{url:'/mixingMastering',templateUrl:'js/mixingMastering/mixingMastering.html',controller:'mixingMasteringController'});});app.controller('mixingMasteringController',function($rootScope,$state,$scope,$http,MixingMasteringService){$scope.mixingMastering = {};$scope.processing = false;$scope.saveMixingMastering = function(){if(!$scope.mixingMastering.file || !$scope.mixingMastering.email || !$scope.mixingMastering.name || !$scope.mixingMastering.comment){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.mixingMastering = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.mixingMastering) {data.append(prop,$scope.mixingMastering[prop]);}MixingMasteringService.saveMixingMastering(data).then(receiveResponse)['catch'](catchError);}};});app.config(function($stateProvider){$stateProvider.state('pay',{url:'/pay/:submissionID',templateUrl:'js/pay/pay.html',controller:'PayController',resolve:{channels:function channels($http){return $http.get('/api/channels').then(function(res){return res.data;});},submission:function submission($http,$stateParams){return $http.get('/api/submissions/withID/' + $stateParams.submissionID).then(function(res){return res.data;});},track:function track(submission){return SC.get('/tracks/' + submission.trackID).then(function(track){return track;});}}});});app.filter('calculateDiscount',function(){return function(input){return parseFloat(input * 0.90).toFixed(2);};});app.controller('PayController',function($scope,$rootScope,$http,channels,submission,track,$state,$uibModal){$rootScope.submission = submission;$scope.auDLLink = false;if(submission.paid)$state.go('home');$scope.track = track;SC.oEmbed(submission.trackURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.total = 0;$scope.showTotal = 0;console.log(channels);$scope.channels = channels.filter(function(ch){if(ch.soundcloud.followers)ch.price = parseFloat(ch.soundcloud.followers / 3000.0);return submission.channelIDS.indexOf(ch.soundcloud.id) != -1;});console.log(submission.channelIDS);console.log($scope.channels);$scope.auDLLink = $scope.track.purchase_url?$scope.track.purchase_url.indexOf("artistsunlimited.co") != -1:false;console.log($scope.auDLLink);$scope.goToLogin = function(){$state.go('login',{'submission':$rootScope.submission});};$scope.makePayment = function(){console.log('ay');if($scope.total != 0){if($scope.auDLLink){$scope.discountModalInstance = $uibModal.open({animation:true,templateUrl:'discountModal.html',controller:'discountModalController',scope:$scope});}else {$scope.continuePay(false);}}else {$.Zebra_Dialog('Please add a repost to your cart by clicking "Add To Cart".');}};$scope.continuePay = function(discounted){if($scope.discountedModal){$scope.discountModalInstance.close();}$scope.processing = true;if(discounted)$scope.showTotal = parseFloat($scope.total * 0.9).toFixed(2);else $scope.showTotal = parseFloat($scope.total).toFixed(2);var pricingObj={total:$scope.showTotal,submission:$rootScope.submission,channels:$scope.channels.filter(function(ch){return ch.addtocart;})};$http.post('/api/submissions/getPayment',pricingObj).then(function(res){window.location = res.data;});};$scope.addToCart = function(channel){if(channel.addtocart){$scope.total = $scope.total - channel.price;}else {$scope.total += channel.price;}console.log(typeof channel.price);channel.addtocart = channel.addtocart?false:true;if($scope.auDLLink)$scope.showTotal = parseFloat($scope.total * 0.9).toFixed(2);else $scope.showTotal = parseFloat($scope.total).toFixed(2);};});app.controller('discountModalController',function($scope){});app.config(function($stateProvider){$stateProvider.state('complete',{url:'/complete',templateUrl:'js/pay/thankyou.html',controller:'ThankyouController'});});app.controller('ThankyouController',function($http,$scope,$location){$scope.processing = true;$scope.notified = false;$http.put('/api/submissions/completedPayment',$location.search()).then(function(res){console.log(res.data);$scope.processing = false;$scope.submission = res.data.submission;if(res.data.status == 'notify'){$scope.notified = true;$scope.events = [];}else {$scope.events = res.data.events;$scope.events.forEach(function(ev){ev.date = new Date(ev.date);});}}).then(null,function(err){$.Zebra_Dialog('There was an error processing your request');});});app.config(function($stateProvider){$stateProvider.state('prPlans',{url:'/prPlans',templateUrl:'js/prPlans/prPlans.html',controller:'prPlansController'});});app.controller('prPlansController',function($rootScope,$state,$scope,$http,PrPlanService){$scope.prPlans = {};$scope.processing = false;$scope.openSocialDialog = function(type){var displayText="";if(type == 'Youtube')displayText = "Like SoundCloud, we premiere tracks to genre-specific  audiences. We work closely with an array of well-established YouTube channels for premieres. Approaches to promotion vary across different social media platforms and requires a nuanced understanding of each.";if(type == 'Blog Outreach')displayText = "When releasing a song, it is important to keep in mind  the manner in which  blogs can affect one's reach. The blogs we work with curate music with a specific audience in mind, tending to be committed readers. We have cultivated relationships with the faces behind various blogs, and we are fortunate to have their continued support of our content.";if(type == 'Spotify')displayText = 'The third and final platform in which we can assist with releasing music is Spotify. Spotify is an online music platform which pays artist per stream. Spotify at the core is also a substantial way for artists to be heard. There are over 100 Million users worldwide  and as one of the major online music platforms, we will do our best to get your track in as many playlists as possible.';if(type == 'Soundcloud')displayText = "We facilitate premieres over our network of over six SoundCloud channels, working closely with every artist to ensure that the network genre matches the feel of their track. Though we have had better results premiering content from our various network pages, we are also able to also make the track available on the artist's personal profile and promote the track from there. We remain flexible with many of these aspects and tailor each campaign to the respective goals of the artist.";$.Zebra_Dialog(displayText,{width:600});};$scope.savePrPlan = function(){if(!$scope.prPlans.file || !$scope.prPlans.email || !$scope.prPlans.name || !$scope.prPlans.budget){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.prPlans = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.prPlans) {data.append(prop,$scope.prPlans[prop]);}PrPlanService.savePrPlan(data).then(receiveResponse)['catch'](catchError);}};});app.config(function($stateProvider){$stateProvider.state('scheduler',{url:'/admin/scheduler',templateUrl:'js/scheduler/scheduler.html',controller:'SchedulerController'});});app.controller('SchedulerController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$window){if(!SessionService.getUser()){$state.go('admin');}$scope.makeEventURL = "";$scope.showOverlay = false;var info=$rootScope.schedulerInfo;if(!info){$state.go('admin');}$scope.channel = info.channel;if(!$scope.channel){$state.go('admin');}$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;});};$scope.submissions = info.submissions;$scope.dayIncr = 0;$scope.back = function(){window.location.reload();};$scope.saveChannel = function(){$scope.processing = true;$scope.channel.password = $rootScope.password;$http.put("/api/channels",$scope.channel).then(function(res){$.Zebra_Dialog("Saved");$scope.channel = res.data;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.incrDay = function(){if($scope.dayIncr < 14)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.clickedSlot = function(day,hour){var today=new Date();if(today.toLocaleDateString() == day.toLocaleDateString() && today.getHours() > hour)return;$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.makeEventURL = undefined;$scope.makeEvent = calendarDay.events[hour];console.log($scope.makeEvent);if($scope.makeEvent == "-"){var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent = {channelID:$scope.channel.channelID,day:makeDay,paid:false};$scope.newEvent = true;}else {$scope.makeEventURL = $scope.makeEvent.trackURL;SC.oEmbed($scope.makeEventURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.newEvent = false;}};$scope.changePaid = function(){$scope.makeEvent.title = undefined;$scope.makeEvent.trackURL = undefined;$scope.makeEvent.artistName = undefined;$scope.makeEvent.trackID = undefined;$scope.makeEventURL = undefined;};$scope.changeURL = function(){if($scope.makeEventURL != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEventURL}).then(function(res){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEventURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});}};$scope.deleteEvent = function(){if(!$scope.newEvent){$scope.processing = true;$http['delete']('/api/events/' + $scope.makeEvent._id).then(function(res){var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.day.getHours()] = "-";$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Deleted");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Delete.");});}else {var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.getHours()] = "-";var events;$scope.showOverlay = false;}};$scope.saveEvent = function(){if(!$scope.makeEvent.trackID && !$scope.makeEvent.paid){$.Zebra_Dialog("Enter a track URL");}else {if($scope.newEvent){$scope.makeEvent.password = $rootScope.password;$scope.processing = true;$http.post('/api/events',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Saved");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save.");});}else {$scope.newEvent.password = $rootScope.password;$scope.processing = true;$http.put('/api/events',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Saved");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save.");});}}};$scope.emailSlot = function(){var mailto_link="mailto:coayscue@gmail.com?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.channel.displayName + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.channel.displayName;location.href = encodeURI(mailto_link);}; // $scope.scEmailSlot = function() {
// }
$scope.backEvent = function(){$scope.makeEvent = null;$scope.showOverlay = false;};$scope.removeQueueSong = function(index){$scope.channel.queue.splice(index,1);$scope.saveChannel();};$scope.addSong = function(){if($scope.channel.queue.indexOf($scope.newQueueID) != -1)return;$scope.channel.queue.push($scope.newQueueID);$scope.saveChannel();$scope.newQueueSong = undefined;$scope.changeQueueSong();$scope.loadQueueSongs([$scope.newQueueID]);};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueueID = track.id;}).then(null,function(err){$.Zebra_Dialog("error getting song");$scope.processing = false;});}};$scope.moveUp = function(index){if(index == 0)return;var s=$scope.channel.queue[index];$scope.channel.queue[index] = $scope.channel.queue[index - 1];$scope.channel.queue[index - 1] = s;$scope.saveChannel();$scope.loadQueueSongs([$scope.channel.queue[index],$scope.channel.queue[index - 1]]);};$scope.moveDown = function(index){if(index == $scope.channel.queue.length - 1)return;var s=$scope.channel.queue[index];$scope.channel.queue[index] = $scope.channel.queue[index + 1];$scope.channel.queue[index + 1] = s;$scope.saveChannel();$scope.loadQueueSongs([$scope.channel.queue[index],$scope.channel.queue[index + 1]]);}; // $scope.canLowerOpenEvents = function() {
//   var waitingSubs = $scope.submissions.filter(function(sub) {
//     return sub.invoiceID;
//   });
//   var openSlots = [];
//   $scope.calendar.forEach(function(day) {
//     day.events.forEach(function(ev) {
//       if (ev.paid && !ev.trackID) openSlots.push(ev);
//     });
//   });
//   var openNum = openSlots.length - waitingSubs.length;
//   return openNum > 0;
// }
$scope.loadSubmissions = function(){setTimeout(function(){$scope.submissions.forEach(function(sub){SC.oEmbed("http://api.soundcloud.com/tracks/" + sub.trackID,{element:document.getElementById(sub.trackID + "player"),auto_play:false,maxheight:150});});},50);};$scope.loadQueueSongs = function(queue){setTimeout(function(){queue.forEach(function(songID){SC.oEmbed("http://api.soundcloud.com/tracks/" + songID,{element:document.getElementById(songID + "player"),auto_play:false,maxheight:150});});},50);};if($scope.channel && $scope.channel.queue){$scope.loadQueueSongs($scope.channel.queue);}$scope.loadSubmissions();$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};$scope.fillDateArrays = function(events){var calendar=[];var today=new Date();for(var i=0;i < 21;i++) {var calDay={};calDay.day = new Date();calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = "-";}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.calendar = $scope.fillDateArrays(info.events);});app.config(function($stateProvider){$stateProvider.state('submitSong',{url:'/submit',templateUrl:'js/submit/submit.view.html',controller:'SubmitSongController'});});app.controller('SubmitSongController',function($rootScope,$state,$scope,$http){$scope.submission = {};$scope.urlChange = function(){if($scope.url != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.url}).then(function(res){if(res.data.kind != "track")throw new Error('');$scope.submission.trackID = res.data.id;$scope.submission.title = res.data.title;$scope.submission.trackURL = res.data.trackURL;SC.oEmbed($scope.submission.trackURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.processing = false;$scope.notFound = false;}).then(null,function(err){if(err.status != 403){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.notFound = true;}else {$scope.submission.trackURL = $scope.url;SC.oEmbed($scope.submission.trackURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});}$scope.submission.trackID = null;$scope.processing = false;document.getElementById('scPlayer').style.visibility = "hidden";});}};$scope.submit = function(){if(!$scope.submission.email || !$scope.submission.name){$.Zebra_Dialog("Please fill in all fields");}else {$scope.processing = true;$http.post('/api/submissions',{email:$scope.submission.email,trackID:$scope.submission.trackID,name:$scope.submission.name,title:$scope.submission.title,trackURL:$scope.submission.trackURL,channelIDS:[],invoiceIDS:[]}).then(function(res){$.Zebra_Dialog("Your song has been submitted and will be reviewed soon.");$scope.processing = false;$scope.notFound = false;$scope.submission = {};document.getElementById('scPlayer').style.visibility = "hidden";$scope.url = "";}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("Error: Could not submit song.");});}};});app.config(function($stateProvider){$stateProvider.state('artistToolsAnalytics',{url:'/analytics',params:{submission:null},templateUrl:'js/artistTools/Analytics/analytics.html',controller:'artistToolsAnalytics'});});app.controller("artistToolsAnalytics",function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,$auth,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('tid');}$scope.authFacbook = function(id,days){if(id){ //calling for registration !
alert("registering Channel, please refresh after few moments to load analytics data");return $http({method:'POST',url:'/api/analytics/facebook',data:{pageid:id.id}}).then(function(success){$scope.showFacebookPages = false;delete $scope.facebookPages;console.log(success);$scope.authFacbook();},function(error){console.log(error);});}$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/facebook',data:{day_limit:days}}).success(function(success_http){$scope.displayError = false;$scope.daysCallbackFunction = 'authFacbook';$scope.showDayChanger = true;$scope.graph_data = success_http;$scope.enableGraph = true;}).error(function(){FB.login(function(response_token,success){if(!response_token.authResponse)return console.log("User did not authorize fully!");$http({method:'POST',url:'/api/analytics/facebook',data:{access_token:response_token.authResponse.accessToken}}).success(function(response){$scope.facebookPages = response.pages;$scope.showFacebookPages = true;}).error(function(error){alert("Error while registering page :" + error);}); //$scope.accessToken = response_token.accessToken;
},{scope:'pages_show_list,user_likes'});});};$scope.authTwitter = function(acccess_key,days){$scope.showDayChanger = false;$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/twitter',data:{day_limit:days}}).then(function(success){$scope.daysCallbackFunction = 'authTwitter';$scope.showDayChanger = true;$scope.graph_data = success.data;$scope.enableGraph = true;},function(failure){$auth.authenticate('twitter').then(function(success_twitter){$http({method:'POST',url:'/api/analytics/twitter',data:{access_token_key:success_twitter.data.oauth_token,access_token_secret:success_twitter.data.oauth_token_secret,screen_name:success_twitter.data.screen_name}}).then(function(success){$scope.showFollowers = false;$scope.authTwitter();},function(error){console.log(error);});});});};$scope.authInstagram = function(channelId,days){$scope.showDayChanger = false;$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/instagram',data:{day_limit:days}}).then(function(success){$scope.daysCallbackFunction = 'authInstagram';$scope.showDayChanger = true;$scope.graph_data = success.data;$scope.enableGraph = true;},function(failure){$auth.authenticate('instagram').then(function(success){$http({method:'POST',url:'/api/analytics/instagram',data:{access_token:success.access_token}}).then(function(success){$scope.authInstagram();},function(failure){return console.log("<authInstagram>failed when trying to register user" + JSON.stringify(failure));});},function(failure){console.log("failure while authentication of instagram" + JSON.stringify(failure));});});};$scope.authYoutube = function(channelId,days){$scope.showDayChanger = false;if(channelId){ //calling for registration !
alert("registering Channel, please refresh after few moments to load analytics data");return $http({method:'POST',url:'/api/analytics/youtube/stats',data:{register:true,channelId:channelId}}).then(function(success){$scope.showYoutubeChannel = false;delete $scope.youtubeChannel;console.log(success);$scope.authYoutube();},function(error){console.log(error);});}$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/youtube/stats',data:{day_limit:days}}).success(function(success_http){$scope.displayError = false;$scope.daysCallbackFunction = 'authYoutube';$scope.showDayChanger = true;$scope.graph_data = success_http;$scope.enableGraph = true;}).error(function(){$auth.authenticate('google').then(function(success){$scope.youtubeChannel = success.data;$scope.showYoutubeChannel = true;},function(failure){console.log("failed from authorization server>>>>" + JSON.stringify(failure));});});};$scope.alert = function(data){alert(data);};});app.controller('graphControler',function($scope){ // $scope.data = [{
//     key: "Cumulative Return",
//     values: value_array
// }];
$scope.options = {margin:{top:20},series:[{axis:"y",dataset:"timed",key:"val_0",label:"Analytics data",color:"hsla(88, 48%, 48%, 1)",type:["line"],id:"mySeries0"}],axes:{x:{key:"x",type:"date"}}};$scope.data = {timed:[]};for(var local_data in $scope.graph_data) {$scope.data.timed.push({x:local_data,val_0:$scope.graph_data[local_data]});}for(var i in $scope.data.timed) {$scope.data.timed[i].x = new Date($scope.data.timed[i].x);}});app.config(function($stateProvider){$stateProvider.state('artistTools',{url:'/artistTools',templateUrl:'js/artistTools/ArtistTools/artistTools.html',controller:'ArtistToolsController',abstract:true,resolve:{allowed:function allowed($q,$state,SessionService){var deferred=$q.defer();var user=SessionService.getUser();if(user){deferred.resolve();}else {deferred.reject();window.location.href = '/login';}return deferred.promise;}}}).state('artistToolsProfile',{url:'/artistTools/profile',templateUrl:'js/artistTools/ArtistTools/profile.html',controller:'ArtistToolsController'}).state('artistToolsDownloadGatewayList',{url:'/artistTools/downloadGateway',params:{submission:null},templateUrl:'js/artistTools/ArtistTools/downloadGateway.list.html',controller:'ArtistToolsController'});});app.controller('ArtistToolsController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();if(!SessionService.getUser()){var path=window.location.pathname;if(path == "/artistTools/profile"){$window.localStorage.setItem('returnstate','artistToolsProfile');}else if(path == "/artistTools/downloadGateway"){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayList');}$state.go('login');}else {$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$window.localStorage.removeItem('returnstate');}$scope.linkedAccountData = {};$scope.thirdPartyInfo = $scope.user.thirdPartyInfo?$scope.user.thirdPartyInfo:null;$scope.hasThirdPartyFields = $scope.user.thirdPartyInfo?true:false; /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL){$scope.modal.downloadURL = _downloadURL;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}}; //overlay autofill track start//
$scope.linkedAccounts = [];$scope.autoFillTracks = [];$scope.trackList = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.tracksQueue = [];$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.processing = true;$scope.changeQueueSong();};$scope.showThridPartyBox = function(){$scope.hasThirdPartyFields = true;};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;if($scope.tracksQueue.length > 0){for(var i=0;i < $scope.tracksQueue.length;i++) {if($scope.user.queue.indexOf($scope.tracksQueue[i]) == -1){$scope.user.queue.push($scope.tracksQueue[i]);}}}else {if($scope.newQueueID != null){$scope.user.queue.push($scope.newQueueID);}}$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.tracksQueue = [];};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;if(track.kind == "playlist"){var tracksArr=track.tracks;angular.forEach(tracksArr,function(t){$scope.newQueueID = t.id;$scope.tracksQueue.push($scope.newQueueID);});}else {$scope.newQueue = track;$scope.newQueueID = track.id;}$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;$scope.loadQueueSongs(); // $window.location.reload();
}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});$('#autoFillTrack').modal('hide');};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.removeQueueSong = function(index){$scope.user.queue.splice(index,1);$scope.saveUser(); //$scope.loadQueueSongs();
};$scope.loadQueueSongs = function(queue){$scope.autoFillTracks = [];$scope.user.queue.forEach(function(songID){SC.get('/tracks/' + songID).then(function(track){$scope.autoFillTracks.push(track);$scope.$digest();},console.log);});};if($scope.user && $scope.user.queue){$scope.loadQueueSongs();} //overlay autofill track end//
$scope.closeModal = function(){$scope.modalInstance.close();};$scope.openHelpModal = function(){if($state.current.url == '/artistTools/profile'){var displayText="<h3>Help</h3><span style='font-weight:bold'>Permanent Links:</span> Add artist soundcloud urls here to make the artists followed on every one of your download gates.<br><br><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";}else if($state.current.url == '/artistTools/downloadGateway'){var displayText="<h3>Help</h3><span style='font-weight:bold'>List of downloads gateways:</span> This is a list of your download gates. You can create a new one, edit, delete one or view a download gate in the list.<br><br><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";}$.Zebra_Dialog(displayText,{width:600});};$scope.editProfileModalInstance = {};$scope.editProfilemodal = {};$scope.openEditProfileModal = {editProfile:function editProfile(field){$scope.profile.field = field;$timeout(function(){$scope.editProfileModalInstance = $uibModal.open({animation:true,templateUrl:'editProfile.html',controller:'ArtistToolsController',scope:$scope});},0);}};$scope.closeEditProfileModal = function(){$scope.showProfileInfo();if($scope.editProfileModalInstance.close){$scope.editProfileModalInstance.close();}};$scope.thankYouModalInstance = {};$scope.thankYouModal = {};$scope.openThankYouModal = {thankYou:function thankYou(submissionID){$scope.thankYouModal.submissionID = submissionID;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'thankYou.html',controller:'OpenThankYouModalController',scope:$scope});}};$scope.closeThankYouModal = function(){$scope.thankYouModalInstance.close();}; /* Init profile */$scope.profile = {};if($stateParams.submission){$scope.openThankYouModal.thankYou($stateParams.submission._id);}$scope.showProfileInfo = function(){$scope.profile.data = SessionService.getUser();if($scope.profile.data.permanentLinks && $scope.profile.data.permanentLinks.length === 0 || !$scope.profile.data.permanentLinks){$scope.profile.data.permanentLinks = [{url:'',avatar:'',username:'',id:-1,permanentLink:true}];};$scope.profile.isAvailable = {};$scope.profile.isAvailable.email = $scope.profile.data.email?true:false;$scope.profile.isAvailable.password = $scope.profile.data.password?true:false;$scope.profile.isAvailable.soundcloud = $scope.profile.data.soundcloud?true:false;$scope.profile.data.password = '';};$scope.saveProfileInfo = function(){$scope.message = {value:'',visible:false};var permanentLinks=$scope.profile.data.permanentLinks.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var sendObj={name:'',password:'',email:'',permanentLinks:JSON.stringify(permanentLinks)};if($scope.profile.field === 'name'){sendObj.name = $scope.profile.data.name;}else if($scope.profile.field === 'password'){sendObj.password = $scope.profile.data.password;}else if($scope.profile.field === 'email'){sendObj.email = $scope.profile.data.email;}$scope.processing = true;ArtistToolsService.saveProfileInfo(sendObj).then(function(res){$scope.processing = false;if(res.data === 'Email Error'){$scope.message = {value:'Email already exists!',visible:true};return;}if(permanentLinks != ""){$scope.linkUrl = "";}SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.closeEditProfileModal();})['catch'](function(res){$scope.processing = false;$.Zebra_Dialog('error saving');});}; // Add third party credentials
$scope.addThirdPartyDetails = function(userdata){$scope.processing = true;$http.put("/api/database/thirdPartyDetails",{userid:$scope.user._id,data:userdata}).then(function(res){if(res.data){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;$.Zebra_Dialog("Changes saved succesfully");}else {$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;}}).then(null,function(err){$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;});}; // Remove third party access from user
$scope.removeThirdPartyAccess = function(){$scope.processing = true;$http.put("/api/database/deleteThirdPartyAccess",{userid:$scope.user._id}).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.thirdPartyInfo = $scope.user.thirdPartyInfo?$scope.user.thirdPartyInfo:null;$scope.hasThirdPartyFields = $scope.user.thirdPartyInfo?true:false;$scope.processing = false;$.Zebra_Dialog("Account removed succesfully");}).then(null,function(err){$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;});}; // Save linked accounts
$scope.saveLinkedAccount = function(data){if($scope.hasThirdPartyFields){$scope.processing = true;$http.put("/api/database/saveLinkedAccount",{userid:$scope.user._id,data:data}).then(function(res){if(res.data){SessionService.create(res.data);$scope.user = SessionService.getUser();$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$scope.processing = false;$scope.linkedAccountData = {};$.Zebra_Dialog("Account linked succesfully");}else {$scope.processing = false;$.Zebra_Dialog("No account found with given username and password.");}}).then(null,function(err){$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;});}else {$.Zebra_Dialog("You must add third party access to this account to link another account.");}}; // remove linked accounts
$scope.removeLinkedAccount = function(data){$scope.processing = true;$http.put("/api/database/deleteLinkedAccount",{userid:$scope.user._id,data:data}).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$scope.processing = false;$.Zebra_Dialog("Account removed succesfully");}).then(null,function(err){$.Zebra_Dialog("Error in processing the request. Please try again.");$scope.processing = false;});};$scope.removePermanentLink = function(index){$scope.profile.data.permanentLinks.splice(index,1);$scope.saveProfileInfo();};$scope.hidebutton = false;$scope.addPermanentLink = function(){if($scope.profile.data.permanentLinks.length >= 2 && !$scope.user.admin){$scope.hidebutton = true;}if($scope.profile.data.permanentLinks.length > 2 && !$scope.user.admin){return false;}$scope.profile.data.permanentLinks.push({url:'',avatar:'',username:'',id:-1,permanentLink:true});};$scope.permanentLinkURLChange = function(){var permanentLink={};$scope.processing = true;ArtistToolsService.resolveData({url:$scope.linkUrl}).then(function(res){$scope.profile.data.permanentLinks.push({url:res.data.permalink_url,avatar:res.data.avatar_url?res.data.avatar_url:'',username:res.data.username,id:res.data.id,permanentLink:true});$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.saveSoundCloudAccountInfo = function(){SC.connect().then(saveInfo).then(handleResponse)['catch'](handleError);function saveInfo(res){return ArtistToolsService.saveSoundCloudAccountInfo({token:res.oauth_token});}function handleResponse(res){$scope.processing = false;if(res.status === 200 && res.data.success === true){SessionService.create(res.data.data);$scope.profile.data = res.data.data;$scope.profile.isAvailable.soundcloud = true;}else {$scope.message = {value:'You already have an account with this soundcloud username',visible:true};}$scope.$apply();}function handleError(err){$scope.processing = false;}};$scope.getDownloadList = function(){ArtistToolsService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(err){console.log(err);}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;ArtistToolsService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.verifyBrowser();}).controller('OpenThankYouModalController',function($scope){});app.service('ArtistToolsService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}function saveProfileInfo(data){return $http.post('/api/database/profile/edit',data);}function saveSoundCloudAccountInfo(data){return $http.post('/api/database/profile/soundcloud',data);}function getTrackListFromSoundcloud(data){return $http.post('/api/database/tracks/list',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,saveProfileInfo:saveProfileInfo,deleteDownloadGateway:deleteDownloadGateway,saveSoundCloudAccountInfo:saveSoundCloudAccountInfo,getTrackListFromSoundcloud:getTrackListFromSoundcloud};}]);app.config(function($stateProvider){$stateProvider.state('SCResolve',{url:'/artistTools/scresolve',templateUrl:'js/artistTools/SCResolve/SCResolve.html',controller:'SCResolveController'});});app.controller('SCResolveController',function($scope,$http){$scope.response = {};$scope.resolve = function(){$http.post('/api/soundcloud/resolve',{url:$scope.url}).then(function(res){$scope.response = JSON.stringify(res.data,null,"\t");console.log($scope.response);}).then(null,function(err){$scope.response = JSON.stringify(err,null,"\t");});};});app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayEdit',{url:'/artistTools/downloadGateway/edit/:gatewayID',templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayEdit');$window.localStorage.setItem('tid',$stateParams.gatewayID);$window.location.href = '/login';}return true;}}}).state('artistToolsDownloadGatewayNew',{url:'/artistTools/downloadGateway/new',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayNew');$window.location.href = '/login';}return true;}}});});app.controller('ArtistToolsDownloadGatewayController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,AdminDLGateService){ /* Init Download Gateway form data */$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('tid');}$scope.showTitle = [];$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[],playlists:[],showDownloadTracks:'user',admin:$scope.user.admin,file:{}};$scope.profile = {}; /* Init track list and trackListObj*/$scope.trackList = [];$scope.trackListObj = null; /* Method for resetting Download Gateway form */$scope.trackListChange = function(index){ /* Set booleans */$scope.isTrackAvailable = false;$scope.processing = true; /* Set track data */var track=$scope.trackListObj;$scope.track.trackURL = track.permalink_url;$scope.track.trackTitle = track.title;$scope.track.trackID = track.id;$scope.track.artistID = track.user.id;$scope.track.description = track.description;$scope.track.trackArtworkURL = track.artwork_url?track.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = track.user.avatar_url?track.user.avatar_url:'';$scope.track.artistURL = track.user.permalink_url;$scope.track.artistUsername = track.user.username;$scope.track.SMLinks = [];SC.get('/users/' + $scope.track.artistID + '/web-profiles').then(handleWebProfiles)['catch'](handleError);function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;$scope.$apply();}function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;$scope.$apply();}};$scope.openHelpModal = function(){var displayText="<span style='font-weight:bold'>Song: </span>Choose or enter the url for the song you want to make the download gate for. If you make it for one of your tracks, the download link will be automatically added to your track on soundcloud.<br><br><span style='font-weight:bold'>Social Media Links: </span>The links that you add here will appear on the download gateway page.<br><br><span style='font-weight:bold'>Download File: </span>Either provide a link to a downloadable file or upload an mp3 file. If you upload an mp3, we format the file with the album artwork, title, and artist of your soundcloud track so that it will look good on a music player.<br><br><span style='font-weight:bold'>Artists to Follow and Actions: </span>The artists you add will be followed on this download gate. Under actions, you can make 'Liking', 'Reposting' and 'Commenting' mandatory on the download.<br><br><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";$.Zebra_Dialog(displayText,{width:600});};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.saveDownloadGate = function(){if(!($scope.track.downloadURL || $scope.track.file && $scope.track.file.name)){$.Zebra_Dialog('Enter a download file');return false;}if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData();for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);}var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists));var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks));if($scope.track.playlists){sendObj.append('playlists',JSON.stringify($scope.track.playlists));}var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($stateParams.submission){$state.go('artistToolsDownloadGatewayList',{'submission':$stateParams.submission});}else {if($scope.user.soundcloud.id == $scope.track.artistID){$.Zebra_Dialog('Download gateway was saved and added to the track.');}else {$.Zebra_Dialog('Download gateway saved.');}$state.go('artistToolsDownloadGatewayList');}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID);}};$scope.getTrackListFromSoundcloud = function(){var profile=SessionService.getUser();if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.checkIfSubmission = function(){if($stateParams.submission){if($state.includes('artistToolsDownloadGatewayNew')){$scope.track.trackURL = $rootScope.submission.trackURL;$scope.trackURLChange();return;}$scope.openThankYouModal.thankYou($stateParams.submission._id);$rootScope.submission = null;}};$scope.resolveYoutube = function(){if(!($scope.track.socialPlatformValue.includes('/channel/') || $scope.track.socialPlatformValue.includes('/user/'))){$.Zebra_Dialog('Enter a valid Youtube channel url.');return;}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.description = res.data.description;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.addSMLink = function(){$scope.track.SMLinks.push({key:'',value:''});};$scope.clearOrFile = function(){if($scope.track.downloadURL){angular.element("input[type='file']").val(null);}};$scope.artistURLChange = function(index){var artist={};if($scope.track.artists[index].url != ""){$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url?res.data.avatar_url:'';$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});}};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){$scope.track.artists.push({url:'',avatar:'',username:'',id:-1,permanentLink:false});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'',username:'',id:-1,permanentLink:false}],showDownloadTracks:'user'};angular.element("input[type='file']").val(null);} /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;ArtistToolsService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var permanentLinks=res.data.permanentLinks?res.data.permanentLinks:[''];var SMLinksArray=[];var permanentLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}permanentLinks.forEach(function(item){permanentLinksArray.push({url:item});});if(!$scope.track.showDownloadTracks){$scope.track.showDownloadTracks = 'user';}$scope.track.SMLinks = SMLinksArray;$scope.track.permanentLinks = permanentLinksArray;$scope.track.playlistIDS = []; // $scope.track.showDownloadTracks = ($scope.track.showDownloadTracks === 'user') ? true : false;
//console.log($scope.track);
$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.clearOrInput = function(){$scope.track.downloadURL = "";};$scope.preview = function(track){window.localStorage.setItem('trackPreviewData',JSON.stringify(track));var url=$state.href('artistToolsDownloadGatewayPreview');$window.open(url,'_blank');};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.verifyBrowser();});app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayPreview',{url:'/artistTools/downloadGateway/preview',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/preview.html',controller:'ArtistToolsPreviewController'});});app.controller("ArtistToolsPreviewController",function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();var track=JSON.parse(window.localStorage.getItem('trackPreviewData'));if(!track.trackTitle){$.Zebra_Dialog('Track Not Found');$state.go("artistToolsDownloadGatewayList");return false;}$scope.track = track;$scope.player = {};SC.stream('/tracks/' + $scope.track.trackID).then(function(p){$scope.player = p;});$scope.toggle = true;$scope.togglePlay = function(){$scope.toggle = !$scope.toggle;if($scope.toggle){$scope.player.pause();}else {$scope.player.play();}};$scope.nodl = function(){$.Zebra_Dialog('No download in preview mode.');};});app.config(function($stateProvider){$stateProvider.state('reForReInteraction',{url:'/artistTools/reForReInteraction/:tradeID',templateUrl:'js/artistTools/reForRe/reForReInteraction.html',controller:'ReForReInteractionController',resolve:{trade:function trade($http,$stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','reForReInteraction');$window.localStorage.setItem('tid',$stateParams.tradeID);$window.location.href = '/login';}return $http.get('/api/trades/byID/' + $stateParams.tradeID).then(function(res){return res.data;});},p1Events:function p1Events($http,trade){return $http.get('/api/events/forUser/' + trade.p1.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},p2Events:function p2Events($http,trade){return $http.get('/api/events/forUser/' + trade.p2.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting other's events events");return;});},currentTrades:function currentTrades($http,SessionService){var tradeType={Requests:true,Requested:true,TradePartners:true};var user=SessionService.getUser();return $http.get('/api/trades/withUser/' + user._id + '?tradeType=' + JSON.stringify(tradeType)).then(function(res){var trades=res.data;trades.forEach(function(trade){trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;});trades.sort(function(a,b){if(a.user.alert == "change"){return -1;}else if(a.user.alert == "placement"){return -1;}else {return 1;}});console.log(trades);return trades;});}},onExit:function onExit($http,$stateParams,SessionService,socket){$http.put('/api/trades/offline',{tradeID:$stateParams.tradeID});socket.disconnect();}});});app.controller("ReForReInteractionController",function($rootScope,$state,$scope,$http,AuthService,$window,SessionService,socket,$stateParams,trade,p1Events,p2Events,currentTrades){$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('tid');}$scope.showEmailModal = false;$scope.processing = false;socket.connect();$scope.msgHistory = [];$scope.makeEventURL = "";$scope.showOverlay = false;$scope.processiong = false;$scope.hideall = false;$scope.trade = trade;$scope.p1Events = p1Events;$scope.p2Events = p2Events;$scope.trackArtistID = 0;$scope.trackType = "";$scope.currentTrades = currentTrades;$scope.selectTrade = currentTrades.find(function(el){return el._id == $scope.trade._id;});var person=$scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1:$scope.trade.p2;$scope.user.accepted = person.accepted;$scope.p1dayIncr = 0;$scope.p2dayIncr = 0;$scope.trackList = [];$scope.trackListChangeEvent = function(index){$scope.makeEvent.URL = $scope.makeEvent.trackListObj.permalink_url;$scope.changeURL();};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.getSchedulerID = function(uid){return uid == $scope.user._id?"scheduler-left":"scheduler-right";};$scope.user.accepted = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1.accepted:$scope.trade.p2.accepted;$scope.curTrade = JSON.stringify($.grep($scope.currentTrades,function(e){return e._id == $scope.trade._id;}));$scope.refreshCalendar = function(){$scope.user = SessionService.getUser();$http.get('/api/trades/getTradeData/' + $stateParams.tradeID).then(function(res){$scope.trade = res.data.trade;$scope.p2Events = res.data.p2Events;$scope.p1Events = res.data.p1Events;var trds=res.data.userTrades;trds.forEach(function(trade){trade.other = trade.p1.user._id == $scope.user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == $scope.user._id?trade.p1:trade.p2;});$scope.currentTrades = trds;$scope.user.accepted = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1.accepted:$scope.trade.p2.accepted;$scope.tradeIndex = currentTrades.findIndex(function(el){return el._id == $scope.trade._id;});$scope.fillCalendar();$scope.updateAlerts();$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error getting data.');});};$scope.incrp1 = function(inc){if($scope.p1dayIncr < 21)$scope.p1dayIncr++;};$scope.decrp1 = function(inc){if($scope.p1dayIncr > 0)$scope.p1dayIncr--;};$scope.incrp2 = function(inc){if($scope.p2dayIncr < 21)$scope.p2dayIncr++;};$scope.decrp2 = function(inc){if($scope.p2dayIncr > 0)$scope.p2dayIncr--;};$scope.changeURL = function(){if($scope.makeEvent.URL != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEvent.URL}).then(function(res){$scope.trackArtistID = res.data.user.id;$scope.trackType = res.data.kind;if(res.data.kind != "playlist"){if(res.data.user.id === $scope.user.soundcloud.id){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEvent.URL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}else {$scope.notFound = false;$scope.processing = false;$.Zebra_Dialog("Sorry! We don't allow the track url of other artists. Please enter the track url your own.");}}else {$scope.notFound = false;$scope.processing = false;$.Zebra_Dialog("Sorry! We don't allow the playlist url here. Please enter the track url instead.");}}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});}};$scope.unrepostOverlap = function(){if(!$scope.makeEvent.trackID)return false;var events=$scope.makeEvent.person.user._id == $scope.trade.p1.user._id?$scope.p1Events:$scope.p2Events;var slots=$scope.makeEvent.person.slots;var blockEvents=events.filter(function(event){event.day = new Date(event.day);event.unrepostDate = new Date(event.unrepostDate);if(moment($scope.makeEvent.day).format('LLL') == moment(event.day).format('LLL') && $scope.makeEvent.trackID == event.trackID)return false;return $scope.makeEvent.trackID == event.trackID && event.unrepostDate.getTime() > $scope.makeEvent.day.getTime() - 24 * 3600000 && event.day.getTime() < $scope.makeEvent.unrepostDate.getTime() + 24 * 3600000;});var blockEvents2=slots.filter(function(slot){slot.day = new Date(slot.day);slot.unrepostDate = new Date(slot.unrepostDate);if(moment($scope.makeEvent.day).format('LLL') == moment(slot.day).format('LLL') && $scope.makeEvent.trackID == slot.trackID)return false;return $scope.makeEvent.trackID == slot.trackID && slot.unrepostDate.getTime() > $scope.makeEvent.day.getTime() - 24 * 3600000 && slot.day.getTime() < $scope.makeEvent.unrepostDate.getTime() + 24 * 3600000;});return blockEvents.length > 0 || blockEvents2.length > 0;};$scope.changeTrade = function(trade){$state.go('reForReInteraction',{tradeID:trade._id});};$scope.backEvent = function(){$scope.makeEvent = undefined;$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;};$scope.deleteEvent = function(){$scope.makeEvent.person.slots = $scope.makeEvent.person.slots.filter(function(slot,index){return !(moment(slot.day).format('LLL') == moment($scope.makeEvent.day).format('LLL'));});$scope.trade.p1.accepted = $scope.trade.p2.accepted = false;$scope.processing = true;$http.put('/api/trades',$scope.trade).then(function(res){$scope.showOverlay = false;$scope.trade = res.data;$scope.emitMessage("REMOVED SLOT from " + $scope.makeEvent.person.user.soundcloud.username + " for " + moment($scope.makeEvent.day).format('LLL'),'alert'); //$scope.processing = false;
}).then(null,function(err){$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog('Error deleting.');});};$scope.saveEvent = function(){if($scope.trackType == "track"){if($scope.trackArtistID === $scope.user.soundcloud.id){if(!$scope.unrepostOverlap()){$scope.processing = true;if($scope.makeEvent.type == 'traded'){var req=new Promise(function(resolve,reject){if($scope.makeEvent._id)$http.put('/api/events/repostEvents',$scope.makeEvent).then(resolve,reject);else $http.post('/api/events/repostEvents',$scope.makeEvent).then(resolve,reject);});req.then(function(res){ //$scope.processing = false;
$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;$scope.refreshCalendar();}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error saving.');});}else if($scope.makeEvent.type == 'trade'){$scope.makeEvent.person.slots = $scope.makeEvent.person.slots.filter(function(slot,index){return !(moment(slot.day).format('LLL') === moment($scope.makeEvent.day).format('LLL'));});$scope.makeEvent.person.slots.push($scope.makeEvent);var alertMessage="CHANGED SLOT on " + $scope.makeEvent.person.user.soundcloud.username + " on " + moment($scope.makeEvent.day).format('LLL');$scope.makeEvent.person = undefined;$scope.trade.p1.accepted = $scope.trade.p2.accepted = false;$http.put('/api/trades',$scope.trade).then(function(res){ //$scope.processing = false;
$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;$scope.trade = res.data;$scope.emitMessage(alertMessage,'alert');}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error with request');});}}else {$.Zebra_Dialog('Issue! This repost will cause the to be both unreposted and reposted within a 24 hour time period. If you are unreposting, please allow 48 hours between scheduled reposts.');}}else {$.Zebra_Dialog("Sorry! We don't allow the track url of other artists. Please enter the track url your own.");}}else {$.Zebra_Dialog("Sorry! We don't allow the playlist url here. Please enter the track url instead.");}};$scope.emailSlot = function(){var mailto_link="mailto:?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.makeEventAccount.username + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.setUpAndOpenMakeEvent = function(event,person){$scope.showOverlay = true;$scope.makeEvent = JSON.parse(JSON.stringify(event));$scope.makeEvent.trackListObj = null;$scope.makeEvent.day = new Date($scope.makeEvent.day);if($scope.makeEvent.unrepostDate)$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.unrepostDate);if($scope.makeEvent.unrepostDate > new Date()){$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.unrepostDate);$scope.makeEvent.unrepost = true;}else {$scope.makeEvent.unrepostDate = new Date(0);$scope.makeEvent.unrepost = false;}$scope.makeEvent.person = person;$scope.makeEvent.URL = $scope.makeEvent.trackURL;SC.oEmbed($scope.makeEvent.trackURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});};$scope.changeUnrepost = function(){if($scope.makeEvent.unrepost){$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + 24 * 60 * 60 * 1000);}else {$scope.makeEvent.unrepostDate = new Date(0);}};$scope.clickedSlot = function(day,dayOffset,hour,calendar,person,event){if($scope.user.accepted){$.Zebra_Dialog("You can't make changes to this trade because you already accepted it. You will be able to make changes if the other person makes a change.");return;}var makeDay=new Date(day);makeDay.setHours(hour,30,0,0);if(makeDay < new Date()){$.Zebra_Dialog('Timeslot has passed.');return;}switch(event.type){case 'queue':case 'track':case 'paid':$.Zebra_Dialog('Cannot manage this time slot.');return;break;case 'empty':var calEvent={type:"trade",day:makeDay,userID:person.user.soundcloud.id,unrepostDate:new Date(makeDay.getTime() + 24 * 60 * 60 * 1000)};$scope.setUpAndOpenMakeEvent(calEvent,person);break;case 'trade':$scope.setUpAndOpenMakeEvent(event,person);break;case 'traded': // if (event.owner == $scope.user._id) {
$scope.setUpAndOpenMakeEvent(event,person); // } else {
//   $.Zebra_Dialog('Cannot manage this time slot.');
//   return;
// }
break;}};$scope.email = function(){var otherUser=$scope.trade.p1.user._id == $scope.user._id?$scope.trade.p2.user:$scope.trade.p1.user;var mailto_link="mailto:" + otherUser.email + "?subject=Repost for repost with " + $scope.user.soundcloud.username + '&body=Hey ' + otherUser.soundcloud.username + ',\n\n Repost for repost? I scheduled a trade here! -> ArtistsUnlimited.co/login\n\nBest,\n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.accept = function(){if($scope.trade.p1.user._id == $scope.user._id){var accString=$scope.trade.p2.accepted?"If you accept, the trade will be made. You will have the right to schedule the slots you are trading for, and the other person will have rights to the slots you are trading with.":"If you click accept, you will not be able to make changes to the trade being negotiated. If the other person makes a change, you will then be given the right to make changes and accept those changes again. If the other person also accepts, the trade will be made.";}else {var accString=$scope.trade.p1.accepted?"If you accept, the trade will be made. You will have the right to schedule the slots you are trading for, and the other person will have rights to the slots you are trading with.":"If you click accept, you will not be able to make changes to the trade being negotiated. If the other person makes a change, you will then be given the right to make changes and accept those changes again. If the other person also accepts, the trade will be made.";}$.Zebra_Dialog(accString,{'type':'confirmation','buttons':[{caption:'Accept',callback:function callback(){if($scope.user.queue && $scope.user.queue.length == 0){$('#autoFillTrack').modal('show');}else {$scope.user.accepted = true;if($scope.trade.p1.user._id == $scope.user._id){$scope.trade.p1.accepted = true;}else {$scope.trade.p2.accepted = true;}$scope.processing = true;$http.put('/api/trades',$scope.trade).then(function(res){$scope.processing = false;$scope.trade = res.data;if($scope.trade.p1.accepted && $scope.trade.p2.accepted)$scope.completeTrade();else $scope.emitMessage('---- ' + $scope.user.soundcloud.username + " accepted the trade ----",'alert');}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error accepting');});}}},{caption:'Cancel',callback:function callback(){console.log('No was clicked');}}]});}; //overlay autofill track start//
$scope.autoFillTracks = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.processing = true;$scope.changeQueueSong();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;$scope.user.queue.push($scope.newQueueID);$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.accept();};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueue = track;$scope.newQueueID = track.id;}).then(null,function(err){$scope.newQueueSong = "";$('#autoFillTrack').modal('hide');$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});$('#autoFillTrack').modal('hide');}; //overlay autofill track end//
$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};socket.on('init',function(data){$scope.name = data.name;$scope.users = data.users;});socket.on('send:message',function(message){if(message.tradeID == $stateParams.tradeID){$scope.msgHistory.push(message);$scope.message = message.message;$scope.trade.messages.push(message);if(message.type == "alert"){$scope.refreshCalendar();}}});socket.on('get:message',function(data){if(data != ''){if(data._id == $stateParams.tradeID){$scope.msgHistory = data?data.messages:[];}}});$scope.emitMessage = function(message,type){ // if($scope.trade.p1.user._id == $scope.user._id && $scope.trade.p2.online == false){
//   $scope.trade.p2.alert = "change";
// } else if ($scope.trade.p2.user._id == $scope.user._id && $scope.trade.p1.online == false) {
//   $scope.trade.p1.alert = "change";
// }  
socket.emit('send:message',{message:message,type:type,id:$scope.user._id,tradeID:$stateParams.tradeID});$scope.message = '';};$scope.getMessage = function(){socket.emit('get:message',$stateParams.tradeID);};$scope.fillDateArrays = function(events,slots){var calendar=[];var today=new Date();for(var i=0;i < 29;i++) {var calDay={};calDay.day = new Date();calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});slots.forEach(function(slot){if(slot.day.toLocaleDateString() == calDay.day.toLocaleDateString())dayEvents.push(slot);});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.fillCalendar = function(){function setEventDays(arr){arr.forEach(function(ev){ev.day = new Date(ev.day);});}setEventDays($scope.p1Events);setEventDays($scope.p2Events);setEventDays($scope.trade.p1.slots);setEventDays($scope.trade.p2.slots);var now=new Date();now.setHours(now.getHours(),30,0,0);var change=false;var op1String=JSON.stringify($scope.trade.p1.slots);var lastString=op1String;do {lastString = op1String;$scope.trade.p1.slots.forEach(function(slot){if(slot.day < now){slot.day.setHours(now.getHours() + Math.floor(Math.random() * 10) + 14);change = true;}});$scope.p1Events.forEach(function(event){$scope.trade.p1.slots.forEach(function(slot){if(slot.day.toLocaleDateString() == event.day.toLocaleDateString() && slot.day.getHours() == event.day.getHours()){slot.day.setHours(slot.day.getHours() + Math.floor(Math.random() * 10) + 1);change = true;}});});op1String = JSON.stringify($scope.trade.p1.slots);}while(op1String != lastString);var op2String=JSON.stringify($scope.trade.p2.slots);do {lastString = op2String;$scope.trade.p2.slots.forEach(function(slot){if(slot.day < now){slot.day.setHours(now.getHours() + Math.floor(Math.random() * 10) + 14);change = true;}});$scope.p2Events.forEach(function(event){$scope.trade.p2.slots.forEach(function(slot){if(slot.day.toLocaleDateString() == event.day.toLocaleDateString() && slot.day.getHours() == event.day.getHours()){slot.day.setHours(slot.day.getHours() + Math.floor(Math.random() * 10) + 1);change = true;}});});op2String = JSON.stringify($scope.trade.p2.slots);}while(op2String != lastString);if(change){$scope.trade.p1.accepted = $scope.trade.p2.accepted = false;$scope.processing = true;$http.put('/api/trades',$scope.trade).then(function(res){$scope.processing = false;$scope.trade = res.data;$scope.fillCalendar();$scope.emitMessage("MOVED OVERLAPPED SLOTS",'alert');}).then(null,function(err){window.location.reload();});}else {$scope.calendarp1 = $scope.fillDateArrays($scope.p1Events,$scope.trade.p1.slots);$scope.calendarp2 = $scope.fillDateArrays($scope.p2Events,$scope.trade.p2.slots);}};$scope.fillCalendar();$scope.updateAlerts = function(){if($scope.trade.p1.user._id == $scope.user._id){$scope.trade.p1.alert = "none";$scope.trade.p1.online = true;}if($scope.trade.p2.user._id == $scope.user._id){$scope.trade.p2.alert = "none";$scope.trade.p2.online = true;}$scope.$parent.shownotification = false;$http.put('/api/trades',$scope.trade);};$scope.completeTrade = function(){$scope.processing = true;$scope.trade.p1.slots.forEach(function(slot){var event=slot;event.type = 'traded';event.owner = $scope.trade.p2.user._id;$http.post('/api/events/repostEvents',event);});$scope.trade.p2.slots.forEach(function(slot){var event=slot;event.type = 'traded';event.owner = $scope.trade.p1.user._id;$http.post('/api/events/repostEvents',event);});$scope.trade.p1.accepted = $scope.trade.p2.accepted = false;$scope.trade.p1.slots = $scope.trade.p2.slots = [];$http.put('/api/trades',$scope.trade).then(function(res){setTimeout(function(){$scope.emitMessage('---- ' + $scope.user.soundcloud.username + " accepted the trade ----",'alert');setTimeout(function(){$scope.processing = false;$scope.emitMessage("TRADE COMPLETED",'alert');},500);},1500);}).then(null,console.log);};$scope.getStyle = function(event){if(event.type == 'empty'){return {};}else if(event.type == 'trade'){return {'background-color':'#ADD8E6'};}else if(event.type == 'track' || event.type == 'queue' || event.type == 'paid'){return {'background-color':'#eeeeee','color':'rgba(0,0,0,0)'};}else if(event.type == 'traded'){if(event.owner == $scope.trade.p1.user._id || event.owner == $scope.trade.p2.user._id){return {'background-color':'#FFE1AB'};}else {return {'background-color':'#eeeeee','color':'rgba(0,0,0,0)'};}}};$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};$scope.unrepostSymbol = function(event){if(!event.unrepostDate)return;event.unrepostDate = new Date(event.unrepostDate);return event.unrepostDate > new Date();};$scope.showBoxInfo = function(event){return event.type == 'trade' || event.type == 'traded';};$scope.followerShow = function(){return screen.width > '436';};$scope.openHelpModal = function(){var displayText="This interface shows your scheduler and the scheduler for the user you are trading with, labeled on the top of each respective schedule. Your calendar will always be on the left.<br/><br/><img src='assets/images/grey-slot.png'/> Grey slots represents slots that are already taken.<br><br/><img src='assets/images/blue-slot.png'/>  Blue slots represent slots that are being bargained in the trade.<br/><br/><img src='assets/images/arrow-slot.png'/>  An Arrow within a slot means it will be unreposted after 24 hours.<br/><br>The chat window on the bottom allows you to chat with your Repost Partner about your trade.<br/>Email will automatically open a new email on your mailing app, allowing you to message your repost partner via email for your trade.<br/><br/>How to use AU's Repost for Repost System:<br/>1. Start by deciding how you would like to trade with your partner.<br/>2. Mark slots on your calendar and mark slots on your partners calendar.<br/>3. Click accept<br/><br/>When your partner returns to AU, he will be able to accept your trade. If accepted, you will be able to schedule reposts on the slots designated on your partner’s calendar; your partner will be able to schedule reposts on the slots designated on your calendar. If you are away from keyboard at the time of your trade, tracks that are in your 'auto-fill' queue (hyperlink to autofill queu) in the scheduler will automatically be scheduled for repost.<br/><br/>Tips:<br/>1. Make sure you are fair with your trades. If you have half as many followers as your partner, offer 2 reposts on your calendar in exchange for 1 repost on theirs.<br />2. Make sure you check your trades on a regular basis. People are much more likely to constantly trade reposts with you if you are reliable.<br />3. Try communicating with the user on Facebook, Email, SoundCloud messenger or any messaging app to make sure they take action on trades when it is their turn. A friendly 'Hey, let me know when you accept the trade on AU! Thanks again for trading with me :)' is enough to ensure a good flow of communication for your trades!";$.Zebra_Dialog(displayText,{width:900});};$scope.updateEmail = function(email){var answer=email;var myArray=answer.match(/[a-z\._\-!#$%&'+/=?^_`{}|~]+@[a-z0-9\-]+\.\S{2,3}/igm);if(myArray){$scope.user.email = answer;return $http.put('/api/database/profile',$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.hideall = false;$('#emailModal').modal('hide');$scope.showEmailModal = false;}).then(null,function(err){setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);});}else {setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);}};$scope.promptForEmail = function(){if(!$scope.user.email){$scope.showEmailModal = true;$('#emailModal').modal('show');}};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}else {$scope.promptForEmail();}}else {$scope.promptForEmail();}};$scope.updateAlerts();$scope.verifyBrowser();});app.directive('timeSlot',function(moment){return {restrict:'E',scope:{startDate:"@",eachDate:'@',previousDate:'@'},link:function link(scope,element,attrs){Date.prototype.addHours = function(h){this.setHours(this.getHours() + h);return this;};var dateObj={startDate:new Date(scope.startDate),eachDate:new Date(scope.eachDate),previousDate:scope.previousDate?new Date(scope.previousDate):null};var prevDate=dateObj.previousDate?dateObj.previousDate.toLocaleString().split(',')[0]:null;var eacDate=dateObj.eachDate?dateObj.eachDate.toLocaleString().split(',')[0]:null;var prvHours=dateObj.previousDate?dateObj.previousDate.getHours():0;var echHours=dateObj.eachDate?dateObj.eachDate.getHours():0;if(!prevDate){scope.slot = isTodayDate(dateObj.previousDate,dateObj.eachDate) + ' ' + formatAMPM(dateObj.eachDate);}else if(prevDate != eacDate && prvHours != echHours){scope.slot = isTodayDate(dateObj.previousDate,dateObj.eachDate) + ' ' + formatAMPM(dateObj.eachDate);}else if(prevDate == eacDate && prvHours != echHours){scope.slot = isTodayDate(dateObj.previousDate,dateObj.eachDate) + ' ' + formatAMPM(dateObj.eachDate);}else if(prevDate != eacDate && prvHours == echHours){scope.slot = isTodayDate(dateObj.previousDate,dateObj.eachDate) + ' ' + formatAMPM(dateObj.eachDate);}},replace:'true',template:'<p class="time">{{slot}}</p>'};function isTodayDate(prevDate,eacDate){if(moment().format('MM-DD-YYYY') == moment(prevDate).format('MM-DD-YYYY') || moment().format('MM-DD-YYYY') == moment(eacDate).format('MM-DD-YYYY')){return 'Today, ';}else {return moment(eacDate).format('MMMM DD YYYY, ');}}function formatAMPM(date){var hours=date.getHours();var minutes=date.getMinutes();var ampm=hours >= 12?'PM':'AM';hours = hours % 12;hours = hours?hours:12;minutes = minutes < 10?'0' + minutes:minutes;var strTime=hours + ':' + minutes + ' ' + ampm;return strTime;}});'use strict';app.factory('socket',function($rootScope){var socket;return {on:function on(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args);});});},emit:function emit(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},getMessage:function getMessage(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},connect:function connect(){socket = io.connect();},disconnect:function disconnect(){socket.disconnect();}};});app.config(function($stateProvider){$stateProvider.state('reForReLists',{url:'/artistTools/reForReLists',templateUrl:'js/artistTools/reForReLists/reForReLists.html',controller:'ReForReListsController',resolve:{currentTrades:function currentTrades($http,SessionService){var user=SessionService.getUser();if(user){var tradeType={Requests:true,Requested:true,TradePartners:true};return $http.get('/api/trades/withUser/' + user._id + '?tradeType=' + JSON.stringify(tradeType)).then(function(res){var trades=res.data;trades.forEach(function(trade){trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;});trades.sort(function(a,b){if(a.user.alert == "change"){return -1;}else if(a.user.alert == "placement"){return -1;}else {return 1;}});return trades;});}else {return [];}},openTrades:function openTrades($http,SessionService){var user=SessionService.getUser();if(user){var minFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers / 2):0;var maxFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers * 2):1000;return $http.post('/api/users/bySCURL/',{url:'',minFollower:minFollower,maxFollower:maxFollower,recordRange:{skip:0,limit:12}}).then(function(res){return res.data;});}else {return [];}}}});});app.controller("ReForReListsController",function($scope,$rootScope,currentTrades,openTrades,$http,SessionService,$state,$timeout){if(!SessionService.getUser()){$state.go('login');return;}$scope.state = 'reForReInteraction';$scope.user = SessionService.getUser();$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$scope.currentTrades = currentTrades;$scope.currentTradesCopy = currentTrades;$scope.otherUsers = [];$scope.searchUser = openTrades;$scope.currentTab = "SearchTrade";$scope.searchURL = "";$scope.sliderSearchMin = Math.log($scope.user.soundcloud.followers?parseInt($scope.user.soundcloud.followers / 2):0) / Math.log(1.1);$scope.sliderSearchMax = Math.log($scope.user.soundcloud.followers?parseInt($scope.user.soundcloud.followers * 2):200000000) / Math.log(1.1);$scope.minSearchTradefollowers = Math.pow(1.1,$scope.sliderSearchMin);$scope.maxSearchTradefollowers = Math.pow(1.1,$scope.sliderSearchMax);$scope.sliderManageMin = 0;$scope.sliderManageMax = 200000000;$scope.minManageTradefollowers = Math.pow(1.1,$scope.sliderManageMin);$scope.maxManageTradefollowers = Math.pow(1.1,$scope.sliderManageMax);$scope.$watch(function(){return $scope.sliderSearchMin;},function(newVal,oldVal){$scope.minSearchTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderSearchMax;},function(newVal,oldVal){$scope.maxSearchTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderManageMin;},function(newVal,oldVal){$scope.minManageTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderManageMax;},function(newVal,oldVal){$scope.maxManageTradefollowers = Math.pow(1.1,newVal);});$scope.sortby = "Recent Alert";$scope.sort_order = "ascending";var searchTradeRange={skip:0,limit:12};$scope.searchByFollowers = function(){$scope.searchURL = "";$scope.sendSearch();};$scope.sendSearch = function(){$scope.processing = true;$scope.searchUser = [];$http.post('/api/users/bySCURL/',{url:$scope.searchURL,minFollower:$scope.minSearchTradefollowers,maxFollower:$scope.maxSearchTradefollowers,recordRange:{skip:0,limit:12}}).then(function(res){$scope.processing = false;$scope.searchUser = res.data;}).then(undefined,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Please enter Artist url.");}).then(null,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Did not find user.");});};$scope.hello = function(obj){$state.go('reForReInteraction',obj);};$scope.searchCurrentTrade = function(){var cTrades=[];$scope.currentTrades = [];angular.forEach($scope.currentTradesCopy,function(trade){if($scope.searchURL != ""){var url=$scope.searchURL;url = url.toString().replace('http://','').replace('https://','');if(trade.other.user.soundcloud.permalinkURL.indexOf(url) != -1){cTrades.push(trade);}}else if(parseInt($scope.maxManageTradefollowers) > 0){if(trade.other.user.soundcloud.followers >= $scope.minManageTradefollowers && trade.other.user.soundcloud.followers <= $scope.maxManageTradefollowers){cTrades.push(trade);}}});$scope.currentTrades = cTrades;$scope.$apply();};$scope.tradeType = {Requests:true,Requested:true,TradePartners:true};$scope.filterByTradeType = function(){$scope.processing = true;var tradeType=$scope.tradeType;tradeType = JSON.stringify(tradeType);$http.get('/api/trades/withUser/' + $scope.user._id + '?tradeType=' + tradeType).then(function(res){var trades=res.data;$scope.currentTrades = [];trades.forEach(function(trade){trade.other = trade.p1.user._id == $scope.user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == $scope.user._id?trade.p1:trade.p2;});$scope.currentTrades = trades;$scope.processing = false;});};$scope.sortResult = function(sortby){$scope.sortby = sortby;var sort_order=$scope.sort_order;if(sortby == "Followers"){if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return b.other.user.soundcloud.followers - a.other.user.soundcloud.followers;});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.other.user.soundcloud.followers - b.other.user.soundcloud.followers;});$scope.sort_order = "ascending";}}else if(sortby == "Unfilled Slots"){if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return b.unfilledTrackCount - a.unfilledTrackCount;});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.unfilledTrackCount - b.unfilledTrackCount;});$scope.sort_order = "ascending";}}else {if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return a.other.alert.toLowerCase() < b.other.alert.toLowerCase();});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.other.alert.toLowerCase() > b.other.alert.toLowerCase();});$scope.sort_order = "ascending";}}};$scope.$on('loadTrades',function(e){$scope.loadMore();});$scope.loadMore = function(){searchTradeRange.skip += 12;searchTradeRange.limit = 12;$http.post('/api/users/bySCURL/',{url:$scope.searchURL,minFollower:$scope.minSearchTradefollowers,maxFollower:$scope.maxSearchTradefollowers,recordRange:searchTradeRange}).then(function(res){$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){$scope.searchUser.push(d);});}}).then(undefined,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Please enter Artist url.");}).then(null,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Did not find user.");});};$scope.openTrade = function(user){var trade={messages:[{date:new Date(),senderId:SessionService.getUser()._id,text:SessionService.getUser().soundcloud.username + ' opened a trade.',type:'alert'}],tradeType:'one-time',p1:{user:SessionService.getUser()._id,alert:"none",slots:[],accepted:false},p2:{user:user._id,alert:"change",slots:[],accepted:false}};$scope.processing = true;$http.post('/api/trades/new',trade).then(function(res){$scope.processing = false;$state.go('reForReInteraction',{tradeID:res.data._id});}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("Error in creating trade");});};$scope.deleteTrade = function(tradeID,index){$.Zebra_Dialog('Are you sure? You want to delete this trade.',{'type':'confirmation','buttons':[{caption:'Yes',callback:function callback(){$scope.processing = true;$http.post('/api/trades/delete',{id:tradeID}).then(function(res){$scope.processing = false;$scope.currentTrades.splice(index,1);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error accepting');});}},{caption:'No',callback:function callback(){console.log('No was clicked');}}]});};$scope.checkNotification = function(){angular.forEach(currentTrades,function(trade){if(trade.p1.user._id == $scope.user._id){if(trade.p1.alert == "change"){$scope.$parent.shownotification = true;}}if(trade.p2.user._id == $scope.user._id){if(trade.p2.alert == "change"){$scope.$parent.shownotification = true;}}});};$scope.setCurrentTab = function(currentTab){$scope.currentTab = currentTab;};$scope.openHelpModal = function(){if($scope.currentTab == 'SearchTrade'){var displayText="<span style='font-weight:bold'>Search Trade:</span> Here you will be able to find people to trade reposts with. By entering a SoundCloud User’s URL into the Search, you will find that user and then be able to initiate a trade with that user.<br/><br/>By clicking open trade, you will be led to our repost for repost interface.<br/><br/><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";}else if($scope.currentTab == 'ManageTrade'){var displayText="<span style='font-weight:bold'>Manage Trade:</span> Here you will be able to find the users you have already initiated trades with in the past, or people who have initiated a trade with you. By hovering over user’s icon, you will be able to enter into your trade or delete the trade with that given user.<br/><br/>By clicking manage while hovering over a user’s icon, the repost for repost interface will open.<br/><br/><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";}$.Zebra_Dialog(displayText,{width:600});};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.verifyBrowser();$scope.checkNotification();$scope.sortResult($scope.sortby);});app.config(function($stateProvider){$stateProvider.state('artistToolsScheduler',{url:'/artistTools/scheduler',templateUrl:'js/artistTools/scheduler/scheduler.html',controller:'ATSchedulerController',resolve:{events:function events($http,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsScheduler');$window.location.href = '/login';}return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});}}});});app.controller('ATSchedulerController',function($rootScope,$state,$scope,$http,AuthService,$window,events,SessionService){if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');}$scope.user = SessionService.getUser();$scope.showEmailModal = false;$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$scope.makeEventURL = "";$scope.showOverlay = false;$scope.processiong = false;events.forEach(function(ev){ev.day = new Date(ev.day);});$scope.events = events;$scope.hideall = false;$scope.dayIncr = 0;$scope.autoFillTracks = [];$scope.trackList = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.trackArtistID = 0;$scope.trackType = "";$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.changeQueueSong();};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.openHelpModal = function(){var displayText="Schedule your reposts using the assigned slots, and indicate your preference for un-reposting after 24 hours. Keep in mind that the scheduler will not allow you to repost and un-repost within a period of 48 hours.Arrow icons pointing downwards indicate that you have marked the track to be un-reposted after 24 hours.Orange-colored slots are reserved for trades initiated using the repost-for-repost platform.<br><br><a style='text-align:center; margin:0 auto;' href='mailto:coayscue@artistsunlimited.co?subject=Artists Unlimited Help' target='_top'>Email Tech Support</a>";$.Zebra_Dialog(displayText,{width:600});};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.dayIncr = 0;$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.incrDay = function(){if($scope.dayIncr < 21)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.clickedSlot = function(day,hour){var today=new Date();if(today.toLocaleDateString() == day.toLocaleDateString() && today.getHours() > hour)return;$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.makeEventURL = undefined;$scope.trackListSlotObj = undefined;$scope.makeEvent = JSON.parse(JSON.stringify(calendarDay.events[hour])); // if ($scope.makeEvent.type == 'traded' || $scope.makeEvent.type == 'paid') {
//   $scope.showOverlay = false;
//   $scope.makeEvent = undefined;
//   $.Zebra_Dialog("Cannot manage a traded or paid slot.");
//   return;
// }
if($scope.makeEvent.type == "empty"){var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent = {userID:$scope.user.soundcloud.id,day:makeDay,type:"track"};$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + 24 * 60 * 60 * 1000);$scope.makeEvent.unrepost = true;$scope.newEvent = true;}else {$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.unrepostDate);$scope.makeEvent.unrepost = $scope.makeEvent.unrepostDate > new Date();$scope.makeEventURL = $scope.makeEvent.trackURL;SC.oEmbed('https://api.soundcloud.com/tracks/' + $scope.makeEvent.trackID,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.newEvent = false;}};$scope.changeQueueSlot = function(){$scope.makeEvent.title = null;$scope.makeEvent.trackURL = null;$scope.makeEvent.artistName = null;$scope.makeEvent.trackID = null;$scope.makeEventURL = null;};$scope.changeURL = function(){if($scope.makeEventURL){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEventURL}).then(function(res){$scope.trackArtistID = res.data.user.id;$scope.trackType = res.data.kind;if(res.data.kind != "playlist"){if(res.data.user.id === $scope.user.soundcloud.id){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEventURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}else {$scope.notFound = false;$scope.processing = false;$.Zebra_Dialog("Sorry! We don't allow the track url of other artists. Please enter the track url your own.");}}else {$scope.notFound = false;$scope.processing = false;$.Zebra_Dialog("Sorry! We don't allow the playlist url here. Please enter the track url instead.");}}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});}};$scope.deleteEvent = function(){if(!$scope.newEvent){$scope.processing = true;$http['delete']('/api/events/repostEvents/' + $scope.makeEvent._id).then(function(res){return $scope.refreshEvents();}).then(function(res){$scope.showOverlay = false;$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not delete.");});}else {var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.day.getHours()] = {type:"empty"};var events;$scope.showOverlay = false;}};$scope.setCalendarEvent = function(event){event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;};$scope.changeUnrepost = function(){if($scope.makeEvent.unrepost){$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + 24 * 60 * 60 * 1000);}else {$scope.makeEvent.unrepostDate = new Date(0);}};$scope.findUnrepostOverlap = function(){if(!$scope.makeEvent.trackID)return false;var blockEvents=$scope.events.filter(function(event){event.day = new Date(event.day);event.unrepostDate = new Date(event.unrepostDate);if(moment($scope.makeEvent.day).format('LLL') == moment(event.day).format('LLL') && $scope.makeEvent.trackID == event.trackID)return false;return $scope.makeEvent.trackID == event.trackID && event.unrepostDate.getTime() > $scope.makeEvent.day.getTime() - 24 * 3600000 && event.day.getTime() < $scope.makeEvent.unrepostDate.getTime() + 24 * 3600000;});return blockEvents.length > 0;};$scope.saveEvent = function(){if($scope.trackType == "track"){if($scope.trackArtistID === $scope.user.soundcloud.id){if(!$scope.findUnrepostOverlap()){if(!$scope.makeEvent.trackID && $scope.makeEvent.type == "track"){$.Zebra_Dialog("Enter a track URL");}else {$scope.processing = true;if($scope.newEvent){var req=$http.post('/api/events/repostEvents',$scope.makeEvent);}else {var req=$http.put('/api/events/repostEvents',$scope.makeEvent);}req.then(function(res){$scope.trackType = "";$scope.trackArtistID = 0;return $scope.refreshEvents();}).then(function(res){$scope.showOverlay = false;$scope.processing = false;$scope.trackType = "";$scope.trackArtistID = 0;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not save.");});}}else {$.Zebra_Dialog('Issue! This repost will cause this track to be both unreposted and reposted within a 24 hour time period. If you are unreposting, please allow 48 hours between scheduled reposts.');}}else {$.Zebra_Dialog("Sorry! We don't allow the track url of other artists. Please enter the track url your own.");}}else {$.Zebra_Dialog("Sorry! We don't allow the playlist url here. Please enter the track url instead.");}};$scope.emailSlot = function(){var mailto_link="mailto:?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.user.soundcloud.username + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.backEvent = function(){$scope.makeEvent = null;$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;};$scope.removeQueueSong = function(index){$scope.user.queue.splice(index,1);$scope.saveUser();$scope.loadQueueSongs();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;$scope.user.queue.push($scope.newQueueID);$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.loadQueueSongs();};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueue = track;$scope.newQueueID = track.id;}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.moveUp = function(index){if(index == 0)return;var s=$scope.user.queue[index];$scope.user.queue[index] = $scope.user.queue[index - 1];$scope.user.queue[index - 1] = s;$scope.saveUser();$scope.loadQueueSongs();};$scope.moveDown = function(index){if(index == $scope.user.queue.length - 1)return;var s=$scope.user.queue[index];$scope.user.queue[index] = $scope.user.queue[index + 1];$scope.user.queue[index + 1] = s;$scope.saveUser();$scope.loadQueueSongs();};$scope.loadQueueSongs = function(queue){$scope.autoFillTracks = [];$scope.user.queue.forEach(function(songID){SC.get('/tracks/' + songID).then(function(track){$scope.autoFillTracks.push(track);$scope.$digest();},console.log);});};if($scope.user && $scope.user.queue){$scope.loadQueueSongs();}$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();if(screen.width > '744'){return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];}return ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][dayIndex];};$scope.unrepostSymbol = function(event){if(!event.unrepostDate)return;event.unrepostDate = new Date(event.unrepostDate);return event.unrepostDate > new Date();};$scope.getStyle = function(event){if(event.type == 'empty'){return {};}else if(event.type == 'track' || event.type == 'queue'){return {'background-color':'#67f967'};}else if(event.type == 'traded'){return {'background-color':'#FFDA97'};}else if(event.type == 'paid'){return {'background-color':'#FFBBDD'};}};$scope.refreshEvents = function(){return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){var events=res.data;events.forEach(function(ev){ev.day = new Date(ev.day);});$scope.events = events;$scope.calendar = $scope.fillDateArrays(events);});};$scope.fillDateArrays = function(events){var calendar=[];var today=new Date();for(var i=0;i < 29;i++) {var calDay={};calDay.day = new Date();calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.calendar = $scope.fillDateArrays(events);$scope.updateEmail = function(email){var answer=email;var myArray=answer.match(/[a-z\._\-!#$%&'+/=?^_`{}|~]+@[a-z0-9\-]+\.\S{2,3}/igm);if(myArray){$scope.user.email = answer;return $http.put('/api/database/profile',$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.hideall = false;$('#emailModal').modal('hide');$scope.showEmailModal = false;}).then(null,function(err){setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);});}else {setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);}};$scope.promptForEmail = function(){if(!$scope.user.email){$scope.showEmailModal = true;$('#emailModal').modal('show');}};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}else {$scope.promptForEmail();}}else {$scope.promptForEmail();}};$scope.verifyBrowser();});app.factory('AuthService',['$http',function($http){function login(data){return $http.post('/api/login',data);}function signup(data){return $http.post('/api/signup',data);}function thirdPartylogin(data){return $http.post('/api/login/thirdPartylogin',data);}return {login:login,signup:signup,thirdPartylogin:thirdPartylogin};}]);app.factory('SessionService',function($cookies,$http,$window){function create(data){$window.localStorage.setItem('user',JSON.stringify(data));}function deleteUser(){$window.localStorage.removeItem('user');}function getUser(){var user=JSON.parse($window.localStorage.getItem('user'));if(user){return user;}}function refreshUser(){var curUser=getUser();if(curUser){$http.get('/api/users/byId/' + curUser._id).then(function(res){create(res.data);});}}return {create:create,deleteUser:deleteUser,getUser:getUser,refreshUser:refreshUser};});app.config(function($stateProvider){$stateProvider.state('login',{url:'/login',params:{submission:null},templateUrl:'js/auth/views/login.html',controller:'AuthController'}).state('signup',{url:'/signup',templateUrl:'js/auth/views/signup.html',controller:'AuthController'});});app.controller('AuthController',function($rootScope,$state,$stateParams,$scope,$http,$uibModal,$window,AuthService,SessionService,socket){$scope.loginObj = {};$scope.message = {val:'',visible:false};if(SessionService.getUser()){$state.go('reForReLists');}$scope.openModal = {signupConfirm:function signupConfirm(){$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'signupComplete.html',controller:'AuthController',scope:$scope});}};$scope.login = function(){$scope.message = {val:'',visible:false};AuthService.login($scope.loginObj).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){SessionService.create(res.data.user);$state.go('reForReLists');}else {$scope.message = {val:res.data.message,visible:true};}}function handleLoginError(res){$scope.message = {val:'Error in processing your request',visible:true};}};$scope.thirdPartyLogin = function(userdata){AuthService.thirdPartylogin(userdata).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){SessionService.create(res.data.user);$state.go('reForReLists');}else {$.Zebra_Dialog("Invalid Username OR Password.");}}function handleLoginError(res){$.Zebra_Dialog("Error in processing your request");}};$scope.checkIfSubmission = function(){if($stateParams.submission){$scope.soundcloudLogin();}};$scope.signup = function(){$scope.message = {val:'',visible:false};if($scope.signupObj.password != $scope.signupObj.confirmPassword){$scope.message = {val:'Password doesn\'t match with confirm password',visible:true};return;}AuthService.signup($scope.signupObj).then(handleSignupResponse)['catch'](handleSignupError);function handleSignupResponse(res){$state.go('login');}function handleSignupError(res){}};$scope.soundcloudLogin = function(){SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudLogin',{token:res.oauth_token,password:'test'});}).then(function(res){$scope.processing = false;SessionService.create(res.data.user);if($stateParams.submission){$state.go('artistToolsDownloadGatewayNew',{'submission':$stateParams.submission});return;}if($window.localStorage.getItem('returnstate') != undefined){if($window.localStorage.getItem('returnstate') == "reForReInteraction"){$state.go($window.localStorage.getItem('returnstate'),{tradeID:$window.localStorage.getItem('tid')});}else if($window.localStorage.getItem('returnstate') == "artistToolsDownloadGatewayEdit"){$state.go($window.localStorage.getItem('returnstate'),{gatewayID:$window.localStorage.getItem('tid')});}else {$state.go($window.localStorage.getItem('returnstate'));}}else {$state.go('reForReLists');}}).then(null,function(err){$.Zebra_Dialog('Error: Could not log in');$scope.processing = false;});};});app.config(function($stateProvider){$stateProvider.state('autoEmailsNew',{url:'/admin/database/autoEmails/new',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});});app.config(function($stateProvider){$stateProvider.state('autoEmailsEdit',{url:'/admin/database/autoEmails/edit/:templateId',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});}); // resolve: {
//   template: function($http) {
//     return $http.get('/api/database/autoEmails/biweekly?isArtist=true')
//       .then(function(res) {
//         var template = res.data;
//         if (template) {
//           return template;
//         } else {
//           return {
//             purpose: "Biweekly Email"
//           }
//         }
//       })
//       .then(null, function(err) {
//         $.Zebra_Dialog("ERROR: Something went wrong.");
//       })
//   }
// }
app.controller('AutoEmailsController',function($rootScope,$state,$scope,$http,$stateParams,AuthService){$scope.loggedIn = false;$scope.isStateParams = false;if($stateParams.templateId){$scope.isStateParams = true;} // $scope.template = template;
$scope.template = {isArtist:false};$scope.getTemplate = function(){if($stateParams.templateId){$scope.processing = true;$http.get('/api/database/autoEmails?templateId=' + $stateParams.templateId).then(function(res){var template=res.data;$scope.processing = false;if(template){$scope.template = template;}else {$scope.template = {};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}else {return false;}}; // console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails/',$scope.template).then(function(res){$.Zebra_Dialog("Saved email template.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('autoEmailsList',{url:'/admin/database/autoEmails',templateUrl:'js/database/autoEmails/autoEmailsList.html',controller:'AutoEmailsListController',resolve:{templates:function templates($http){return $http.get('/api/database/autoEmails').then(function(res){var template=res.data;if(template){return template;}else {return {purpose:"Biweekly Email"};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}}});});app.controller('AutoEmailsListController',function($rootScope,$state,$scope,$http,AuthService,templates){$scope.loggedIn = false;$scope.templates = templates; // $scope.getTemplate = function() {
//   $scope.processing = true;
//   $http.get('/api/database/autoEmails/biweekly?isArtist=' + String($scope.template.isArtist))
//     .then(function(res) {
//       var template = res.data;
//       $scope.processing = false;
//       if (template) {
//         $scope.template = template;
//       } else {
//         $scope.template = {
//           purpose: "Biweekly Email",
//           isArtist: false
//         };
//       }
//     })
//     .then(null, function(err) {
//       $.Zebra_Dialog("ERROR: Something went wrong.");
//     });
// };
// console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails',$scope.template).then(function(res){$.Zebra_Dialog("Saved email.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('downloadGate',{url:'/admin/downloadGate',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateList',{url:'/admin/downloadGate/list',templateUrl:'js/downloadTrack/views/adminDLGate.list.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateEdit',{url:'/admin/downloadGate/edit/:gatewayID',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.controller('AdminDLGateController',['$rootScope','$state','$stateParams','$scope','$http','$location','$window','$uibModal','SessionService','AdminDLGateService',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,SessionService,AdminDLGateService){if(!SessionService.getUser()){$state.go('admin');} /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Init Download Gateway form data */$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL2){$scope.modal.downloadURL = _downloadURL2;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}};$scope.closeModal = function(){$scope.modalInstance.close();}; /* Init profile */$scope.profile = {}; /* Method for resetting Download Gateway form */function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]};angular.element("input[type='file']").val(null);} /* Check if stateParams has gatewayID to initiate edit */$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID); // if(!$stateParams.downloadGateway) {
//   $scope.getDownloadGateway($stateParams.gatewayID);
// } else {
//   $scope.track = $stateParams.downloadGateway;
// }
}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url:'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.artistURLChange = function(index){var artist={};$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url;$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){if($scope.track.artists.length > 2){return false;}$scope.track.artists.push({url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1});};$scope.addSMLink = function(){ // externalSMLinks++;
// $scope.track.SMLinks['key' + externalSMLinks] = '';
$scope.track.SMLinks.push({key:'',value:''});};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.saveDownloadGate = function(){if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData(); /* Append data to sendObj start */ /* Track */for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);} /* artists */var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists)); /* playlists */var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('playlists',JSON.stringify(playlists)); /* SMLinks */var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks)); /* Append data to sendObj end */var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($scope.track._id){ // $scope.openModal.downloadURL(res.data.trackURL);
return;}resetDownloadGateway();$scope.openModal.downloadURL(res.data);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();$state.go('admin');});};$scope.showProfileInfo = function(){$scope.profile = SessionService.getUser();};$scope.getDownloadList = function(){AdminDLGateService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(res){}}; /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;AdminDLGateService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var SMLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}$scope.track.SMLinks = SMLinksArray;$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;AdminDLGateService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}else {return false;}};}]);app.config(function($stateProvider,$authProvider,$httpProvider){$stateProvider.state('download',{url:'/download',templateUrl:'js/downloadTrack/views/downloadTrack.view.html',controller:'DownloadTrackController'});$authProvider.instagram({clientId:'0b2ab47baa464c31bf6d8e9f301d4469'}); // Instagram
$authProvider.instagram({name:'instagram',url:'/api/download/auth/instagram',authorizationEndpoint:'https://api.instagram.com/oauth/authorize',redirectUri:'https://localhost:1443/download',requiredUrlParams:['scope'],scope:['basic','relationships','public_content','follower_list'],scopeDelimiter:'+',type:'2.0'});$authProvider.twitter({url:'/api/download/twitter/auth',authorizationEndpoint:'https://api.twitter.com/oauth/authenticate',redirectUri:'https://artistsunlimited.co/download', //must match website
type:'1.0',popupOptions:{width:495,height:645}});});app.controller('DownloadTrackController',['$rootScope','$state','$scope','$http','$location','$window','$q','DownloadTrackService','$sce','$auth','SessionService',function($rootScope,$state,$scope,$http,$location,$window,$q,DownloadTrackService,$sce,$auth,SessionService){$scope.user = SessionService.getUser(); /* Normal JS vars and functions not bound to scope */var playerObj=null; /* $scope bindings start */$scope.trackData = {trackName:'Mixing and Mastering',userName:'la tropical'};$scope.toggle = true;$scope.togglePlay = function(){$scope.toggle = !$scope.toggle;if($scope.toggle){playerObj.pause();}else {playerObj.play();}};$scope.processing = false;$scope.embedTrack = false;$scope.downloadURLNotFound = false;$scope.errorText = '';$scope.followBoxImageUrl = 'assets/images/who-we-are.png';$scope.recentTracks = [];$scope.initiateDownload = function(){$scope.processing = false;if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}}; /* Function for Instagram */$scope.authenticateInstagram = function(){$auth.authenticate('instagram').then(function(response){var userName=$scope.track.socialPlatformValue;$http({method:"POST",url:'/api/download/instagram/follow_user',data:{'access_token':response.data,'q':userName}}).then(function(user){if(user.data.succ){$scope.initiateDownload();}});});}; /* Function for Twitter */$scope.authenticateTwitter = function(){$auth.authenticate('twitter').then(function(response){var userName=$scope.track.socialPlatformValue;if($scope.track.socialPlatform == 'twitterFollow'){$http({method:"POST",url:'/api/download/twitter/follow',data:{screen_name:userName,accessToken:response.data}}).then(function(records){if(records.data && records.statusText === "OK"){if(records.data.screen_name === $scope.track.socialPlatformValue){window.location.replace($scope.track.downloadURL);}}else {$.Zebra_Dialog('Error in processing the request. Please try again.');}});}else if($scope.track.socialPlatform == 'twitterPost'){response.data.socialPlatformValue = $scope.track.socialPlatformValue;$http({method:"POST",url:'/api/download/twitter/post',data:response.data}).then(function(records){if(records.statusText === "OK"){window.location.replace($scope.track.downloadURL);}else {$.Zebra_Dialog('Error in processing the request. Please try again.');}});}});}; /* Function for Youtube */$scope.authenticateYoutube = function(track){$scope.processing = true;var idPromise=new Promise(function(resolve,reject){if($scope.track.socialPlatformValue.includes('/channel/')){resolve($scope.track.socialPlatformValue.substring($scope.track.socialPlatformValue.indexOf('/channel/') + 9,$scope.track.socialPlatformValue.length));}else {var username=$scope.track.socialPlatformValue.substring($scope.track.socialPlatformValue.indexOf('/user/') + 6,$scope.track.socialPlatformValue.length);$http.get('https://www.googleapis.com/youtube/v3/channels?key=AIzaSyBOuRHx25VQ69MrTEcvn-hIdkZ8NsZwsLw&forUsername=' + username + '&part=id').then(function(res){if(res.data.items[0])resolve(res.data.items[0].id);}).then(null,reject);}});idPromise.then(function(id){return $http({method:"GET",url:'/api/download/subscribe',params:{downloadURL:$scope.track.downloadURL,channelID:id}});}).then(function(response){$scope.processing = false;window.open(response.data.url,'_blank');window.focus();}).then(null,function(){$scope.processing = false;$.Zebra_Dialog('Youtube channel to subscribe to not found');});}; /* Default processing on page load */$scope.getDownloadTrack = function(){$scope.processing = true;var trackID=$location.search().trackid;DownloadTrackService.getDownloadTrack(trackID).then(receiveDownloadTrack).then(receiveRecentTracks).then(initPlay)['catch'](catchDownloadTrackError);function receiveDownloadTrack(result){$scope.track = result.data;$scope.backgroundStyle = function(){return {'background-image':'url(' + $scope.track.trackArtworkURL + ')','background-repeat':'no-repeat','background-size':'cover'};};$scope.embedTrack = true;$scope.processing = false;if($scope.track.showDownloadTracks === 'user'){return DownloadTrackService.getRecentTracks({userID:$scope.track.userid,trackID:$scope.track._id});}else {return $q.resolve('resolve');}}function receiveRecentTracks(res){if(typeof res === 'object' && res.data){$scope.recentTracks = res.data;}return SC.stream('/tracks/' + $scope.track.trackID);}function initPlay(player){playerObj = player;}function catchDownloadTrackError(){$.Zebra_Dialog('Song Not Found');$scope.processing = false;$scope.embedTrack = false;}}; /* On click download track button */$scope.authenticateSoundcloud = function(){if($scope.track.comment && !$scope.track.commentText){$.Zebra_Dialog('Please write a comment!');return false;}$scope.processing = true;$scope.errorText = '';SC.connect().then(performTasks).then(initDownload)['catch'](catchTasksError);function performTasks(res){$scope.track.token = res.oauth_token;return DownloadTrackService.performTasks($scope.track);}function initDownload(res){$scope.processing = false;if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}$scope.$apply();}function catchTasksError(err){$.Zebra_Dialog('Error in processing your request');$scope.processing = false;$scope.$apply();}};$scope.downloadTrackFacebookShare = function(shareURL){window.fbAsyncInit = function(){FB.init({appId:'1576897469267996',xfbml:true,version:'v2.6'});FB.ui({method:'share',href:shareURL},function(response){if(response && !response.error_code){if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}$scope.$apply();}else if(response && response.error_code === 4201){console.log("User cancelled: " + decodeURIComponent(response.error_message));}else {console.log("Not OK: " + JSON.stringify(response));alert("You have cancelled sharing on facebook.");}});};(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return;}js = d.createElement(s);js.id = id;js.src = "//connect.facebook.net/en_US/sdk.js";fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');};$scope.downloadTrackFacebookLike = function(fblikeid){window.fbAsyncInit = function(){FB.init({appId:'1576897469267996',xfbml:true,version:'v2.6'});FB.Event.subscribe('edge.create',function(href,widget){window.location = fblikeid.downloadURL;});};(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return;}js = d.createElement(s);js.id = id;js.src = "//connect.facebook.net/en_US/sdk.js";fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');};}]);window.twttr = (function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr || {};if(d.getElementById(id))return t;js = d.createElement(s);js.id = id;js.src = "https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);t._e = [];t.ready = function(f){t._e.push(f);};return t;})(document,"script","twitter-wjs");app.service('AdminDLGateService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl/admin');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,deleteDownloadGateway:deleteDownloadGateway};}]);app.service('DownloadTrackService',['$http',function($http){function getDownloadTrack(data){return $http.get('/api/download/track?trackID=' + data);}function getTrackData(data){return $http.post('/api/soundcloud/resolve',{url:data.trackURL});}function performTasks(data){return $http.post('api/download/tasks',data);}function getRecentTracks(data){return $http.get('/api/download/track/recent?userID=' + data.userID + '&trackID=' + data.trackID);}return {getDownloadTrack:getDownloadTrack,getTrackData:getTrackData,performTasks:performTasks,getRecentTracks:getRecentTracks};}]);app.config(function($stateProvider){$stateProvider.state('home',{url:'/',templateUrl:'js/home/views/home.html',controller:'HomeController'}).state('about',{url:'/about',templateUrl:'js/home/views/about.html',controller:'HomeController'}).state('services',{url:'/services',templateUrl:'js/home/views/services.html',controller:'HomeController'}).state('faqs',{url:'/faqs',templateUrl:'js/home/views/faqs.html',controller:'HomeController'}).state('apply',{url:'/apply',templateUrl:'js/home/views/apply.html',controller:'HomeController'}).state('contact',{url:'/contact',templateUrl:'js/home/views/contact.html',controller:'HomeController'});});app.controller('HomeController',['$rootScope','$state','$scope','$http','$location','$window','HomeService',function($rootScope,$state,$scope,$http,$location,$window,HomeService){$scope.applicationObj = {};$scope.artist = {};$scope.sent = {application:false,artistEmail:false};$scope.message = {application:{val:'',visible:false},artistEmail:{val:'',visible:false}}; /* Apply page start */$scope.toggleApplicationSent = function(){$scope.message = {application:{val:'',visible:false}};$scope.sent.application = !$scope.sent.application;};$scope.saveApplication = function(){$scope.message.application = {val:'',visible:false};HomeService.saveApplication($scope.applicationObj).then(saveApplicationResponse)['catch'](saveApplicationError);function saveApplicationResponse(res){if(res.status === 200){$scope.applicationObj = {};$scope.sent.application = true;}}function saveApplicationError(res){if(res.status === 400){$scope.message.application = {val:'Email already exists!',visible:true};return;}$scope.message.application = {val:'Error in processing your request',visible:true};}}; /* Apply page end */ /* Artist Tools page start */$scope.toggleArtistEmail = function(){$scope.message = {artistEmail:{val:'',visible:false}};$scope.sent.artistEmail = !$scope.sent.artistEmail;};$scope.saveArtistEmail = function(){HomeService.saveArtistEmail($scope.artist).then(artistEmailResponse)['catch'](artistEmailError);function artistEmailResponse(res){if(res.status === 200){$scope.artist = {};$scope.sent.artistEmail = true;}}function artistEmailError(res){if(res.status === 400){$scope.message.artistEmail = {val:'Email already exists!',visible:true};return;}$scope.message.artistEmail = {val:'Error in processing your request',visible:true};}}; /* Artist Tools page end */}]);app.directive('affixer',function($window){return {restrict:'EA',link:function link($scope,$element){var win=angular.element($window);var topOffset=$element[0].offsetTop;function affixElement(){if($window.pageYOffset > topOffset){$element.css('position','fixed');$element.css('top','3.5%');}else {$element.css('position','');$element.css('top','');}}$scope.$on('$routeChangeStart',function(){win.unbind('scroll',affixElement);});win.bind('scroll',affixElement);}};});app.service('HomeService',['$http',function($http){function saveApplication(data){return $http.post('/api/home/application',data);}function saveArtistEmail(data){return $http.post('/api/home/artistemail',data);}return {saveApplication:saveApplication,saveArtistEmail:saveArtistEmail};}]);app.service('MixingMasteringService',['$http',function($http){function saveMixingMastering(data){return $http({method:'POST',url:'/api/mixingmastering',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {saveMixingMastering:saveMixingMastering};}]);app.service('PrPlanService',['$http',function($http){function savePrPlan(data){return $http({method:'POST',url:'/api/prplan',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePrPlan:savePrPlan};}]);app.config(function($stateProvider){$stateProvider.state('premiersubmissions',{url:'/admin/premiersubmissions',templateUrl:'js/premierSubmissions/views/premierSubmissions.html',controller:'PremierSubmissionController'});});app.controller('PremierSubmissionController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$sce){if(!SessionService.getUser()){$state.go('admin');}$scope.counter = 0;$scope.channels = [];$scope.showingElements = [];$scope.submissions = [];$scope.genre = "";$scope.skip = 0;$scope.limit = 5;$scope.genreArray = ['Alternative Rock','Ambient','Creative','Chill','Classical','Country','Dance & EDM','Dancehall','Deep House','Disco','Drum & Bass','Dubstep','Electronic','Festival','Folk','Hip-Hop/RNB','House','Indie/Alternative','Latin','Trap','Vocalists/Singer-Songwriter','Saved'];$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.getSubmissionsByGenre = function(){$scope.showingElements = [];$scope.skip = 0;$scope.loadSubmissions();};$scope.loadSubmissions = function(){$scope.processing = true;$http.get('/api/premier/unaccepted?genre=' + $scope.genre + "&skip=" + $scope.skip + "&limit=" + $scope.limit).then(function(res){$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){d.channel = null;d.emailBody = "";$scope.showingElements.push(d);});}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: No premier submissions found.');console.log(err);});};$scope.loadMore = function(){$scope.skip += 10;$scope.loadSubmissions(); //var loadElements = [];
// for (let i = $scope.counter; i < $scope.counter + 15; i++) {
//   var sub = $scope.submissions[i];
//   if (sub) {
//     sub.channelName = null;
//     sub.emailBody = "";
//     $scope.showingElements.push(sub);
//     loadElements.push(sub);
//   }
// }
// $scope.counter += 15;
};$scope.accept = function(submi){$scope.processing = true;submi.status = "accepted";$http.put("/api/premier/accept",{submi:submi}).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submi),1);$.Zebra_Dialog("Accepted");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save");});};$scope.decline = function(submission){$scope.processing = true;submission.status = "declined";$http.put('/api/premier/decline',{submission:submission}).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Declined");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Decline");});};$scope.channelChange = function(submission){var channel=JSON.parse(submission.channel);var emailBody="";switch(channel.displayName){case 'The Plug':emailBody = "Hey " + submission.name + ",%0D%0A%0D%0AThank you for submitting your track to us here at Artists Unlimited. We are very interested in your submission and we think that it could really fit one of our SoundCloud channels, " + channel.displayName + ", " + channel.url + " %0D%0A%0D%0AMy name is Luiz Kupfer and I help curate the channel. I just have a couple of questions regarding your submission to help make me understand the record a bit more:%0D%0A%0D%0A1. Is it 100 percent original? Is there any copyright infringement in this track? (vocals that you do not have permission to use, etc)%0D%0A2. Do you own all of the rights to the track? (i.e. are you currently in engaged in a publishing  or master right contract that we would need permission to release your music?)%0D%0A3. Are you interested solely on releasing the track on SoundCloud (for Free Download) or are you interested in having us take care of uploading the track to Spotify, iTunes and promote the track on all platforms, rather than just Sound Cloud.%0D%0A%0D%0AAll best and looking forward to hearing from you soon,%0D%0A%0D%0ALuiz Kupfer%0D%0AAU Network%0D%0Aluiz@peninsulamgmt.com";break;case 'Royal X':emailBody = "Hey " + submission.name + ",%0D%0A%0D%0AThank you for submitting your track to us here at Artists Unlimited. We are very interested in your submission and we think that it could really fit one of our SoundCloud channels, " + channel.displayName + ", " + channel.url + " %0D%0A%0D%0AMy name is Rafael Rocha and I help curate the channel. I just have a couple of questions regarding your submission to help make me understand the record a bit more:%0D%0A%0D%0A1. Is it 100 percent original? Is there any copyright infringement in this track? (vocals that you do not have permission to use, etc)%0D%0A2. Do you own all of the rights to the track? (i.e. are you currently in engaged in a publishing  or master right contract that we would need permission to release your music?)%0D%0A3. Are you interested solely on releasing the track on SoundCloud (for Free Download) or are you interested in having us take care of uploading the track to Spotify, iTunes and promote the track on all platforms, rather than just Sound Cloud.%0D%0A%0D%0AAll best and looking forward to hearing from you soon,%0D%0A%0D%0ARafael Rocha%0D%0AAU Network%0D%0Aroyalxofficial@gmail.com";break;default:emailBody = "Hey " + submission.name + ",%0D%0A%0D%0AThank you for submitting your track to us here at Artists Unlimited. We are very interested in your submission and we think that it could really fit one of our SoundCloud channels, " + channel.displayName + ", " + channel.url + " %0D%0A%0D%0AMy name is Edward Sanchez and I help curate the channel. I just have a couple of questions regarding your submission to help make me understand the record a bit more:%0D%0A%0D%0A1. Is it 100 percent original? Is there any copyright infringement in this track? (vocals that you do not have permission to use, etc)%0D%0A2. Do you own all of the rights to the track? (i.e. are you currently in engaged in a publishing  or master right contract that we would need permission to release your music?)%0D%0A3. Are you interested solely on releasing the track on SoundCloud (for Free Download) or are you interested in having us take care of uploading the track to Spotify, iTunes and promote the track on all platforms, rather than just Sound Cloud.%0D%0A%0D%0AAll best and looking forward to hearing from you soon,%0D%0A%0D%0AEdward Sanchez%0D%0AAU Network%0D%0Aedward@peninsulamgmt.com";break;}submission.emailBody = emailBody;};$scope['delete'] = function(submission){$.Zebra_Dialog('Are you sure you really want to delete ?',{'buttons':[{caption:'Yes',callback:function callback(){$scope.processing = true;$http.post("/api/premier/delete",{id:submission._id}).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submission),1);$scope.processing = false;}).then(null,function(err){$scope.processing = false;});}},{caption:'Cancel',callback:function callback(){}}]});};$scope.getChannels = function(){$scope.channels = [{displayName:'La Tropical',url:'https://soundcloud.com/latropical'},{displayName:'La Tropical Mixes',url:'https://soundcloud.com/latropicalmixes'},{displayName:'Red Tag',url:'https://soundcloud.com/red-tag'},{displayName:'Etiquette Noir',url:'https://soundcloud.com/etiquettenoir'},{displayName:'Le Sol',url:'https://soundcloud.com/lesolmusique'},{displayName:'Classy Records',url:'https://soundcloud.com/onlyclassy'},{displayName:'A La Mer',url:'https://soundcloud.com/a-la-mer'},{displayName:'Royal X',url:'https://soundcloud.com/royalxx'},{displayName:'The Plug',url:'https://soundcloud.com/theplugmiami'},{displayName:'Electro Bounce',url:'http://soundcloud.com/electro-bounce'},{displayName:'Panel',url:'https://soundcloud.com/panel'},{displayName:'Air de Paris',url:'https://soundcloud.com/airxparis'},{displayName:'Lux Audio',url:'http://soundcloud.com/luxaudio'}];};});app.filter('trusted',['$sce',function($sce){return function(url){return $sce.trustAsResourceUrl(url);};}]);app.config(function($stateProvider){$stateProvider.state('premiere',{url:'/premiere',templateUrl:'js/premiere/views/premiere.html',controller:'PremierController'});});app.controller('PremierController',['$rootScope','$state','$scope','$http','$location','$window','PremierService',function($rootScope,$state,$scope,$http,$location,$window,PremierService){$scope.genreArray = ['Alternative Rock','Ambient','Creative','Chill','Classical','Country','Dance & EDM','Dancehall','Deep House','Disco','Drum & Bass','Dubstep','Electronic','Festival','Folk','Hip-Hop/RNB','House','Indie/Alternative','Latin','Trap','Vocalists/Singer-Songwriter'];$scope.premierObj = {};$scope.message = {val:'',visible:false};$scope.processing = false;$scope.savePremier = function(){ //$.Zebra_Dialog('This may take a little while.')
$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.premierObj) {data.append(prop,$scope.premierObj[prop]);}PremierService.savePremier(data).then(receiveResponse)['catch'](catchError);function receiveResponse(res){$scope.processing = false;if(res.status === 200){ //$scope.message.visible = true;
//$scope.message.val = 'Thank you! Your message has been sent successfully.';
$scope.premierObj = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog('Thank you! Your message has been sent successfully.');}else { //$scope.message.visible = true;
//$scope.message.val = 'Error processing. Please try again or send your track to edward@peninsulamgmt.com.';
$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.');}}function catchError(res){$scope.processing = false;$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.'); // if (res.status === 400) {
//   $scope.message = {
//     visible: true,
//     val: res.data
//   };
//   return;
// }
// $scope.message = {
//   visible: true,
//   val: 'Error in processing the request. Please try again or send the submissions to edward@peninsulamgmt.com.'
// };
}};}]);app.service('PremierService',['$http',function($http){function savePremier(data){return $http({method:'POST',url:'/api/premier',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePremier:savePremier};}]);app.config(function($stateProvider){$stateProvider.state('submissions',{url:'/admin/submissions',templateUrl:'js/submissions/views/submissions.html',controller:'SubmissionController'});});app.controller('SubmissionController',function($rootScope,$state,$scope,$http,AuthService,SessionService){$scope.counter = 0;$scope.showingElements = [];$scope.submissions = [];if(!SessionService.getUser()){$state.go('admin');}$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.loadSubmissions = function(){$scope.processing = true;$http.get('/api/submissions/unaccepted').then(function(res){$scope.submissions = res.data;$scope.loadMore();return $http.get('/api/channels');}).then(function(res){$scope.channels = res.data;$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: Could not get channels.');console.log(err);});};$scope.loadMore = function(){var loadElements=[];for(var i=$scope.counter;i < $scope.counter + 15;i++) {var sub=$scope.submissions[i];if(sub){$scope.showingElements.push(sub);loadElements.push(sub);}}setTimeout(function(){console.log(loadElements);loadElements.forEach(function(sub){SC.oEmbed(sub.trackURL,{element:document.getElementById(sub.trackID + "player"),auto_play:false,maxheight:150});},50);});$scope.counter += 15;};$scope.changeBox = function(sub,chan){var index=sub.channelIDS.indexOf(chan.channelID);if(index == -1){sub.channelIDS.push(chan.soundcloud.id);}else {sub.channelIDS.splice(index,1);}};$scope.save = function(submi){console.log(submi);if(submi.channelIDS.length == 0){$scope.decline(submi);}else {submi.password = $rootScope.password;$scope.processing = true;$http.put("/api/submissions/save",submi).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submi),1);$.Zebra_Dialog("Saved");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save");});}};$scope.ignore = function(submission){$scope.processing = true;$http['delete']('/api/submissions/ignore/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Ignored");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Ignore");});};$scope.decline = function(submission){$scope.processing = true;$http['delete']('/api/submissions/decline/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Declined");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Decline");});};$scope.youtube = function(submission){$scope.processing = true;$http.post('/api/submissions/youtubeInquiry',submission).then(function(res){$scope.processing = false;$.Zebra_Dialog('Sent to Zach');});};$scope.sendMore = function(submission){$scope.processing = true;$http.post('/api/submissions/sendMoreInquiry',submission).then(function(res){$scope.processing = false;$.Zebra_Dialog('Sent Email');});};});
//# sourceMappingURL=data:application/json;base64,
