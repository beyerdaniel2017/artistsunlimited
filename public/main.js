'use strict';window.app = angular.module('FullstackGeneratedApp',['fsaPreBuilt','ui.router','ui.bootstrap','ngAnimate','ngCookies','yaru22.angular-timeago']);app.config(function($urlRouterProvider,$locationProvider,$uiViewScrollProvider){ // This turns off hashbang urls (/#about) and changes it to something normal (/about)
$locationProvider.html5Mode(true); // If we go to a URL that ui-router doesn't have registered, go to the "/" url.
$urlRouterProvider.otherwise('/'); // $uiViewScrollProvider.useAnchorScroll();
}); // This app.run is for controlling access to specific states.
app.run(function($rootScope,AuthService,$state,$uiViewScroll,SessionService,AppConfig){ // The given state requires an authenticated user.
// var destinationStateRequiresAuth = function (state) {
//     return state.data && state.data.authenticate;
// };
AppConfig.fetchConfig().then(function(res){ // console.log(res);
AppConfig.setConfig(res.data); // console.log(AppConfig.isConfigParamsvailable);
}); // $stateChangeStart is an event fired
// whenever the process of changing a state begins.
$rootScope.$on('$stateChangeStart',function(event,toState,toParams){ // if(toState = 'artistTools') {
//     var user = SessionService.getUser();
//     console.log(user);
// }
// console.log('reached here');
// if (!destinationStateRequiresAuth(toState)) {
//     // The destination state does not require authentication
//     // Short circuit with return.
//     return;
// }
// if (AuthService.isAuthenticated()) {
//     // The user is authenticated.
//     // Short circuit with return.
//     return;
// }
// // Cancel navigating to new state.
// event.preventDefault();
// AuthService.getLoggedInUser().then(function (user) {
//     // If a user is retrieved, then renavigate to the destination
//     // (the second time, AuthService.isAuthenticated() will work)
//     // otherwise, if no user is logged in, go to "login" state.
//     if (user) {
//         $state.go(toState.name, toParams);
//     } else {
//         $state.go('login');
//     }
// });
});SessionService.refreshUser();});app.directive('fileread',[function(){return {scope:{fileread:'=',message:'='},link:function link(scope,element,attributes){element.bind('change',function(changeEvent){scope.$apply(function(){scope.message = {visible:false,val:''};if(changeEvent.target.files[0].type != "audio/mpeg" && changeEvent.target.files[0].type != "audio/mp3"){scope.message = {visible:true,val:'Error: Please upload mp3 format file.'};element.val(null);return;}if(changeEvent.target.files[0].size > 20 * 1000 * 1000){scope.message = {visible:true,val:'Error: Please upload file upto 20 MB size.'};element.val(null);return;}scope.fileread = changeEvent.target.files[0];});});}};}]);app.config(function($stateProvider){$stateProvider.state('database',{url:'/admin/database',templateUrl:'js/database/database.html',controller:'DatabaseController'});});app.directive('notificationBar',['socket',function(socket){return {restrict:'EA',scope:true,template:'<div style="margin: 0 auto;width:50%" ng-show="bar.visible">' + '<uib-progress><uib-bar value="bar.value" type="{{bar.type}}"><span>{{bar.value}}%</span></uib-bar></uib-progress>' + '</div>',link:function link($scope,iElm,iAttrs,controller){socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.bar.visible = false;$scope.bar.value = 0;}});}};}]);app.controller('DatabaseController',function($rootScope,$state,$scope,$http,AuthService,socket){$scope.addUser = {};$scope.query = {};$scope.trdUsrQuery = {};$scope.queryCols = [{name:'username',value:'username'},{name:'genre',value:'genre'},{name:'name',value:'name'},{name:'URL',value:'scURL'},{name:'email',value:'email'},{name:'description',value:'description'},{name:'followers',value:'followers'},{name:'number of tracks',value:'numTracks'},{name:'facebook',value:'facebookURL'},{name:'instagram',value:'instagramURL'},{name:'twitter',value:'twitterURL'},{name:'youtube',value:'youtubeURL'},{name:'websites',value:'websites'},{name:'auto email day',value:'emailDayNum'},{name:'all emails',value:'allEmails'}];$scope.downloadButtonVisible = false;$scope.track = {trackUrl:'',downloadUrl:'',email:''};$scope.bar = {type:'success',value:0,visible:false};$scope.paidRepost = {soundCloudUrl:''};$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.saveAddUser = function(){$scope.processing = true;$scope.addUser.password = $rootScope.password;$http.post('/api/database/adduser',$scope.addUser).then(function(res){$.Zebra_Dialog("Success: Database is being populated. You will be emailed when it is complete.");$scope.processing = false;$scope.bar.visible = true;})['catch'](function(err){$.Zebra_Dialog('Bad submission');$scope.processing = false;});};$scope.createUserQueryDoc = function(){var query={};if($scope.query.artist == "artists"){query.artist = true;}else if($scope.query.artist == "non-artists"){query.artist = false;}var flwrQry={};if($scope.query.followersGT){flwrQry.$gt = $scope.query.followersGT;query.followers = flwrQry;}if($scope.query.followersLT){flwrQry.$lt = $scope.query.followersLT;query.followers = flwrQry;}if($scope.query.genre)query.genre = $scope.query.genre;if($scope.queryCols){query.columns = $scope.queryCols.filter(function(elm){return elm.value !== null;}).map(function(elm){return elm.value;});}if($scope.query.trackedUsersURL)query.trackedUsersURL = $scope.query.trackedUsersURL;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/followers',body).then(function(res){$scope.filename = res.data;$scope.downloadButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.createTrdUsrQueryDoc = function(){var query={};var flwrQry={};if($scope.trdUsrQuery.followersGT){flwrQry.$gt = $scope.trdUsrQuery.followersGT;query.followers = flwrQry;}if($scope.trdUsrQuery.followersLT){flwrQry.$lt = $scope.trdUsrQuery.followersLT;query.followers = flwrQry;}if($scope.trdUsrQuery.genre)query.genre = $scope.trdUsrQuery.genre;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/trackedUsers',body).then(function(res){$scope.trdUsrFilename = res.data;$scope.downloadTrdUsrButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.download = function(filename){var anchor=angular.element('<a/>');anchor.attr({href:filename,download:filename})[0].click();$scope.downloadButtonVisible = false;$scope.downloadTrdUsrButtonVisible = false;};$scope.savePaidRepostChannel = function(){$scope.processing = true;$http.post('/api/database/paidrepost',$scope.paidRepost).then(function(res){$scope.paidRepost = {soundCloudUrl:''};$.Zebra_Dialog("SUCCESS: Url saved successfully");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});}; /* Listen to socket events */socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.statusBarVisible = false;$scope.bar.value = 0;}});});(function(){'use strict'; // Hope you didn't forget Angular! Duh-doy.
if(!window.angular)throw new Error('I can\'t find Angular!');var app=angular.module('fsaPreBuilt',[]);app.factory('initSocket',function(){if(!window.io)throw new Error('socket.io not found!');return window.io(window.location.origin);});app.factory('socket',function($rootScope,initSocket){return {on:function on(eventName,callback){initSocket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(initSocket,args);});});},emit:function emit(eventName,data,callback){initSocket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(initSocket,args);}});});}};});app.factory('AppConfig',function($http){var _configParams=null;function fetchConfig(){return $http.get('/api/soundcloud/soundcloudConfig');}function setConfig(data){_configParams = data;SC.initialize({client_id:data.clientID,redirect_uri:data.callbackURL,scope:"non-expiring"});}function getConfig(){return _configParams;}return {fetchConfig:fetchConfig,getConfig:getConfig,setConfig:setConfig};}); // AUTH_EVENTS is used throughout our app to
// broadcast and listen from and to the $rootScope
// for important events about authentication flow.
// app.constant('AUTH_EVENTS', {
//     loginSuccess: 'auth-login-success',
//     loginFailed: 'auth-login-failed',
//     logoutSuccess: 'auth-logout-success',
//     sessionTimeout: 'auth-session-timeout',
//     notAuthenticated: 'auth-not-authenticated',
//     notAuthorized: 'auth-not-authorized'
// });
// app.factory('AuthInterceptor', function($rootScope, $q, AUTH_EVENTS) {
//     var statusDict = {
//         401: AUTH_EVENTS.notAuthenticated,
//         403: AUTH_EVENTS.notAuthorized,
//         419: AUTH_EVENTS.sessionTimeout,
//         440: AUTH_EVENTS.sessionTimeout
//     };
//     return {
//         responseError: function(response) {
//             $rootScope.$broadcast(statusDict[response.status], response);
//             return $q.reject(response)
//         }
//     };
// });
// app.config(function($httpProvider) {
//     $httpProvider.interceptors.push([
//         '$injector',
//         function($injector) {
//             return $injector.get('AuthInterceptor');
//         }
//     ]);
// });
// app.service('AuthService', function($http, Session, $rootScope, AUTH_EVENTS, $q) {
//     function onSuccessfulLogin(response) {
//         var data = response.data;
//         Session.create(data.id, data.user);
//         $rootScope.$broadcast(AUTH_EVENTS.loginSuccess);
//         return data.user;
//     }
//     // Uses the session factory to see if an
//     // authenticated user is currently registered.
//     this.isAuthenticated = function() {
//         return !!Session.user;
//     };
//     this.getLoggedInUser = function(fromServer) {
//         // If an authenticated session exists, we
//         // return the user attached to that session
//         // with a promise. This ensures that we can
//         // always interface with this method asynchronously.
//         // Optionally, if true is given as the fromServer parameter,
//         // then this cached value will not be used.
//         if (this.isAuthenticated() && fromServer !== true) {
//             return $q.when(Session.user);
//         }
//         // Make request GET /session.
//         // If it returns a user, call onSuccessfulLogin with the response.
//         // If it returns a 401 response, we catch it and instead resolve to null.
//         return $http.get('/session').then(onSuccessfulLogin).catch(function() {
//             return null;
//         });
//     };
//     this.login = function(credentials) {
//         return $http.post('/login', credentials)
//             .then(onSuccessfulLogin)
//             .catch(function() {
//                 return $q.reject({
//                     message: 'Invalid login credentials.'
//                 });
//             });
//     };
//     this.logout = function() {
//         return $http.get('/logout').then(function() {
//             Session.destroy();
//             $rootScope.$broadcast(AUTH_EVENTS.logoutSuccess);
//         });
//     };
// });
// app.service('Session', function($rootScope, AUTH_EVENTS) {
//     var self = this;
//     $rootScope.$on(AUTH_EVENTS.notAuthenticated, function() {
//         self.destroy();
//     });
//     $rootScope.$on(AUTH_EVENTS.sessionTimeout, function() {
//         self.destroy();
//     });
//     this.id = null;
//     this.user = null;
//     this.create = function(sessionId, user) {
//         this.id = sessionId;
//         this.user = user;
//     };
//     this.destroy = function() {
//         this.id = null;
//         this.user = null;
//     };
// });
})();app.config(function($stateProvider){$stateProvider.state('admin',{url:'/admin',templateUrl:'js/login/login.html',controller:'AdminLoginController'});});app.controller('AdminLoginController',function($rootScope,$state,$scope,$http,AuthService){$scope.counter = 0;$scope.showingElements = [];$scope.submissions = [];$scope.login = function(){$scope.processing = true;$http.post('/api/login',{password:$scope.password}).then(function(){$rootScope.password = $scope.password;$scope.showSubmissions = true;$scope.loadSubmissions();$scope.processing = false;})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.manage = function(){$scope.processing = true;SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/authenticated',{token:res.oauth_token,password:$rootScope.password});}).then(function(res){$scope.processing = false;$rootScope.schedulerInfo = res.data;$rootScope.schedulerInfo.events.forEach(function(ev){ev.day = new Date(ev.day);});$state.go('scheduler');}).then(null,function(err){$.Zebra_Dialog('Error: Could not log in');$scope.processing = false;});};});app.config(function($stateProvider){$stateProvider.state('pay',{url:'/pay/:submissionID',templateUrl:'js/pay/pay.html',controller:'PayController',resolve:{channels:function channels($http){return $http.get('/api/channels').then(function(res){return res.data;});},submission:function submission($http,$stateParams){return $http.get('/api/submissions/withID/' + $stateParams.submissionID).then(function(res){return res.data;});},track:function track(submission){return SC.get('/tracks/' + submission.trackID).then(function(track){return track;});}}});});app.filter('calculateDiscount',function(){return function(input){return parseFloat(input * 0.90).toFixed(2);};});app.controller('PayController',function($scope,$rootScope,$http,channels,submission,track,$state,$uibModal){$rootScope.submission = submission;$scope.auDLLink = false;if(submission.paid)$state.go('home');$scope.track = track;SC.oEmbed(track.uri,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.total = 0;$scope.showTotal = 0;$scope.channels = channels.filter(function(ch){return submission.channelIDS.indexOf(ch.channelID) != -1;});$scope.auDLLink = $scope.track.purchase_url?$scope.track.purchase_url.indexOf("artistsunlimited.co") != -1:false;$scope.selectedChannels = {};$scope.channels.forEach(function(ch){$scope.selectedChannels[ch.displayName] = false;});$scope.goToLogin = function(){$state.go('login',{'submission':$rootScope.submission});};$scope.makePayment = function(){console.log('ay');if($scope.total != 0){if($scope.auDLLink){$scope.discountModalInstance = $uibModal.open({animation:true,templateUrl:'discountModal.html',controller:'discountModalController',scope:$scope});}else {$scope.continuePay(false);}}else {$.Zebra_Dialog('Please add a repost to your cart by clicking "Add To Cart".');}};$scope.continuePay = function(discounted){if($scope.discountedModal){$scope.discountModalInstance.close();}$scope.processing = true;var pricingObj={channels:[],discounted:discounted,submission:$rootScope.submission};for(var key in $scope.selectedChannels) {if($scope.selectedChannels[key]){var chan=$scope.channels.find(function(ch){return ch.displayName == key;});pricingObj.channels.push(chan.channelID);}}$http.post('/api/submissions/getPayment',pricingObj).then(function(res){window.location = res.data;});};$scope.addToCart = function(channel){console.log($scope.selectedChannels);if(channel.addtocart){$scope.total = $scope.total - channel.price;}else {$scope.total += channel.price;}if($scope.auDLLink)$scope.showTotal = parseFloat($scope.total * 0.9).toFixed(2);else $scope.showTotal = parseFloat($scope.total).toFixed(2);$scope.selectedChannels[channel.displayName] = $scope.selectedChannels[channel.displayName] == true?false:true;channel.addtocart = channel.addtocart?false:true;};});app.controller('discountModalController',function($scope){});app.config(function($stateProvider){$stateProvider.state('complete',{url:'/complete',templateUrl:'js/pay/thankyou.html',controller:'ThankyouController'});});app.controller('ThankyouController',function($http,$scope,$location){$scope.processing = true;$http.put('/api/submissions/completedPayment',$location.search()).then(function(res){$scope.processing = false;$scope.submission = res.data.submission;$scope.events = res.data.events;$scope.events.forEach(function(ev){ev.date = new Date(ev.date);});}).then(null,function(err){$.Zebra_Dialog('There was an error processing your request');});});app.config(function($stateProvider){$stateProvider.state('mixingMastering',{url:'/mixingMastering',templateUrl:'js/mixingMastering/mixingMastering.html',controller:'mixingMasteringController'});});app.controller('mixingMasteringController',function($rootScope,$state,$scope,$http,MixingMasteringService){$scope.mixingMastering = {};$scope.processing = false;$scope.saveMixingMastering = function(){if(!$scope.mixingMastering.file || !$scope.mixingMastering.email || !$scope.mixingMastering.name || !$scope.mixingMastering.comment){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.mixingMastering = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.mixingMastering) {data.append(prop,$scope.mixingMastering[prop]);}MixingMasteringService.saveMixingMastering(data).then(receiveResponse)['catch'](catchError);}};});app.config(function($stateProvider){$stateProvider.state('prPlans',{url:'/prPlans',templateUrl:'js/prPlans/prPlans.html',controller:'prPlansController'});});app.controller('prPlansController',function($rootScope,$state,$scope,$http,PrPlanService){$scope.prPlans = {};$scope.processing = false;$scope.openSocialDialog = function(type){var displayText="";if(type == 'Youtube')displayText = "Like SoundCloud, we premiere tracks to genre-specific  audiences. We work closely with an array of well-established YouTube channels for premieres. Approaches to promotion vary across different social media platforms and requires a nuanced understanding of each.";if(type == 'Blog Outreach')displayText = "When releasing a song, it is important to keep in mind  the manner in which  blogs can affect one's reach. The blogs we work with curate music with a specific audience in mind, tending to be committed readers. We have cultivated relationships with the faces behind various blogs, and we are fortunate to have their continued support of our content.";if(type == 'Spotify')displayText = 'The third and final platform in which we can assist with releasing music is Spotify. Spotify is an online music platform which pays artist per stream. Spotify at the core is also a substantial way for artists to be heard. There are over 100 Million users worldwide  and as one of the major online music platforms, we will do our best to get your track in as many playlists as possible.';if(type == 'Soundcloud')displayText = "We facilitate premieres over our network of over six SoundCloud channels, working closely with every artist to ensure that the network genre matches the feel of their track. Though we have had better results premiering content from our various network pages, we are also able to also make the track available on the artist's personal profile and promote the track from there. We remain flexible with many of these aspects and tailor each campaign to the respective goals of the artist.";$.Zebra_Dialog(displayText,{width:600});};$scope.savePrPlan = function(){if(!$scope.prPlans.file || !$scope.prPlans.email || !$scope.prPlans.name || !$scope.prPlans.budget){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.prPlans = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.prPlans) {data.append(prop,$scope.prPlans[prop]);}PrPlanService.savePrPlan(data).then(receiveResponse)['catch'](catchError);}};});app.config(function($stateProvider){$stateProvider.state('scheduler',{url:'/scheduler',templateUrl:'js/scheduler/scheduler.html',controller:'SchedulerController'});});app.controller('SchedulerController',function($rootScope,$state,$scope,$http,AuthService,$window){$scope.makeEventURL = "";$scope.showOverlay = false;var info=$rootScope.schedulerInfo;if(!info){$state.go('admin');}$scope.channel = info.channel;if(!$scope.channel){$state.go('admin');}$scope.submissions = info.submissions;$scope.calendar = fillDateArrays(info.events);$scope.dayIncr = 0;$scope.back = function(){window.location.reload();};$scope.saveChannel = function(){$scope.processing = true;$scope.channel.password = $rootScope.password;$http.put("/api/channels",$scope.channel).then(function(res){$.Zebra_Dialog("Saved");$scope.channel = res.data;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.incrDay = function(){if($scope.dayIncr < 14)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.clickedSlot = function(day,hour){var today=new Date();if(today.toLocaleDateString() == day.toLocaleDateString() && today.getHours() > hour)return;$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.makeEventURL = undefined;$scope.makeEvent = calendarDay.events[hour];if($scope.makeEvent == "-"){var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent = {channelID:$scope.channel.channelID,day:makeDay,paid:false};$scope.newEvent = true;}else {$scope.makeEventURL = 'https://api.soundcloud.com/tracks/' + $scope.makeEvent.trackID;SC.oEmbed('https://api.soundcloud.com/tracks/' + $scope.makeEvent.trackID,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.newEvent = false;}};$scope.changePaid = function(){$scope.makeEvent.title = undefined;$scope.makeEvent.trackURL = undefined;$scope.makeEvent.artistName = undefined;$scope.makeEvent.trackID = undefined;$scope.makeEventURL = undefined;};$scope.changeURL = function(){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEventURL}).then(function(res){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEventURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}).then(null,function(err){document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});};$scope.deleteEvent = function(){if(!$scope.newEvent){$scope.processing = true;$http['delete']('/api/events/' + $scope.makeEvent._id).then(function(res){var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.day.getHours()] = "-";$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Deleted");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Delete.");});}else {var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.getHours()] = "-";var events;$scope.showOverlay = false;}};$scope.saveEvent = function(){if(!$scope.makeEvent.trackID && !$scope.makeEvent.paid){$.Zebra_Dialog("Enter a track URL");}else {if($scope.newEvent){$scope.makeEvent.password = $rootScope.password;$scope.processing = true;$http.post('/api/events',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Saved");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save.");});}else {$scope.newEvent.password = $rootScope.password;$scope.processing = true;$http.put('/api/events',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Saved");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save.");});}}};$scope.emailSlot = function(){var mailto_link="mailto:coayscue@gmail.com?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.channel.displayName + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.channel.displayName;location.href = encodeURI(mailto_link);}; // $scope.scEmailSlot = function() {
// }
$scope.backEvent = function(){$scope.makeEvent = null;$scope.showOverlay = false;};$scope.removeQueueSong = function(index){$scope.channel.queue.splice(index,1);$scope.saveChannel();};$scope.addSong = function(){if($scope.channel.queue.indexOf($scope.newQueueID) != -1)return;$scope.channel.queue.push($scope.newQueueID);$scope.saveChannel();$scope.newQueueSong = undefined;$scope.changeQueueSong();$scope.loadQueueSongs([$scope.newQueueID]);};$scope.changeQueueSong = function(){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueueID = track.id;}).then(null,function(err){$.Zebra_Dialog("error getting song");$scope.processing = false;});};$scope.moveUp = function(index){if(index == 0)return;var s=$scope.channel.queue[index];$scope.channel.queue[index] = $scope.channel.queue[index - 1];$scope.channel.queue[index - 1] = s;$scope.saveChannel();$scope.loadQueueSongs([$scope.channel.queue[index],$scope.channel.queue[index - 1]]);};$scope.moveDown = function(index){if(index == $scope.channel.queue.length - 1)return;var s=$scope.channel.queue[index];$scope.channel.queue[index] = $scope.channel.queue[index + 1];$scope.channel.queue[index + 1] = s;$scope.saveChannel();$scope.loadQueueSongs([$scope.channel.queue[index],$scope.channel.queue[index + 1]]);}; // $scope.canLowerOpenEvents = function() {
//   var waitingSubs = $scope.submissions.filter(function(sub) {
//     return sub.invoiceID;
//   });
//   var openSlots = [];
//   $scope.calendar.forEach(function(day) {
//     day.events.forEach(function(ev) {
//       if (ev.paid && !ev.trackID) openSlots.push(ev);
//     });
//   });
//   var openNum = openSlots.length - waitingSubs.length;
//   return openNum > 0;
// }
$scope.loadSubmissions = function(){setTimeout(function(){$scope.submissions.forEach(function(sub){SC.oEmbed("http://api.soundcloud.com/tracks/" + sub.trackID,{element:document.getElementById(sub.trackID + "player"),auto_play:false,maxheight:150});});},50);};$scope.loadQueueSongs = function(queue){setTimeout(function(){queue.forEach(function(songID){SC.oEmbed("http://api.soundcloud.com/tracks/" + songID,{element:document.getElementById(songID + "player"),auto_play:false,maxheight:150});});},50);};if($scope.channel && $scope.channel.queue){$scope.loadQueueSongs($scope.channel.queue);}$scope.loadSubmissions();$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};});function fillDateArrays(events){var calendar=[];var today=new Date();for(var i=0;i < 21;i++) {var calDay={};calDay.day = new Date();calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = "-";}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;}app.config(function($stateProvider){$stateProvider.state('submitSong',{url:'/submit',templateUrl:'js/submit/submit.view.html',controller:'SubmitSongController'});});app.controller('SubmitSongController',function($rootScope,$state,$scope,$http){$scope.submission = {};$scope.urlChange = function(){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.url}).then(function(res){if(res.data.kind != "track")throw new Error('');$scope.submission.trackID = res.data.id;$scope.submission.title = res.data.title;$scope.submission.trackURL = res.data.trackURL;SC.oEmbed($scope.submission.trackURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.processing = false;$scope.notFound = false;}).then(null,function(err){$scope.submission.trackID = null;$scope.notFound = true;$scope.processing = false;document.getElementById('scPlayer').style.visibility = "hidden";});};$scope.submit = function(){if(!$scope.submission.email || !$scope.submission.name){$.Zebra_Dialog("Please fill in all fields");}else if(!$scope.submission.trackID){$.Zebra_Dialog("Track Not Found");}else {$scope.processing = true;$http.post('/api/submissions',{email:$scope.submission.email,trackID:$scope.submission.trackID,name:$scope.submission.name,title:$scope.submission.title,trackURL:$scope.submission.trackURL,channelIDS:[],invoiceIDS:[]}).then(function(res){$.Zebra_Dialog("Your song has been submitted and will be reviewed soon.");$scope.processing = false;$scope.notFound = false;$scope.submission = {};document.getElementById('scPlayer').style.visibility = "hidden";$scope.url = "";}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("Error: Could not submit song.");});}};});app.config(function($stateProvider){$stateProvider.state('SCResolve',{url:'/scresolve',templateUrl:'js/artistTools/SCResolve/SCResolve.html',controller:'SCResolveController'});});app.controller('SCResolveController',function($scope,$http){$scope.response = {};$scope.resolve = function(){$http.post('/api/soundcloud/resolve',{url:$scope.url}).then(function(res){$scope.response = JSON.stringify(res.data,null,"\t");console.log($scope.response);}).then(null,function(err){$scope.response = JSON.stringify(err,null,"\t");});};});app.config(function($stateProvider){$stateProvider.state('artistTools',{url:'/artist-tools',templateUrl:'js/artistTools/ArtistTools/artistTools.html',controller:'ArtistToolsController',abstract:true,resolve:{allowed:function allowed($q,$state,SessionService){var deferred=$q.defer();var user=SessionService.getUser();if(user){deferred.resolve();}else {deferred.reject();window.location.href = '/login';}return deferred.promise;}}}).state('artistToolsProfile',{url:'/profile',templateUrl:'js/artistTools/ArtistTools/profile.html',controller:'ArtistToolsController'}).state('artistToolsDownloadGatewayList',{url:'/download-gateway',params:{submission:null},templateUrl:'js/artistTools/ArtistTools/downloadGateway.list.html',controller:'ArtistToolsController'});});app.controller('ArtistToolsController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){$scope.user = SessionService.getUser(); /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL){$scope.modal.downloadURL = _downloadURL;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}};$scope.closeModal = function(){$scope.modalInstance.close();};$scope.editProfileModalInstance = {};$scope.editProfilemodal = {};$scope.openEditProfileModal = {editProfile:function editProfile(field){$scope.profile.field = field;$timeout(function(){$scope.editProfileModalInstance = $uibModal.open({animation:true,templateUrl:'editProfile.html',controller:'ArtistToolsController',scope:$scope});},0);}};$scope.closeEditProfileModal = function(){$scope.showProfileInfo();if($scope.editProfileModalInstance.close){$scope.editProfileModalInstance.close();}};$scope.thankYouModalInstance = {};$scope.thankYouModal = {};$scope.openThankYouModal = {thankYou:function thankYou(submissionID){$scope.thankYouModal.submissionID = submissionID;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'thankYou.html',controller:'OpenThankYouModalController',scope:$scope});}};$scope.closeThankYouModal = function(){$scope.thankYouModalInstance.close();}; /* Init profile */$scope.profile = {};$scope.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();$state.go('login');window.location.href = '/login';});};if($stateParams.submission){$scope.openThankYouModal.thankYou($stateParams.submission._id);}$scope.showProfileInfo = function(){$scope.profile.data = SessionService.getUser();if($scope.profile.data.permanentLinks && $scope.profile.data.permanentLinks.length === 0 || !$scope.profile.data.permanentLinks){$scope.profile.data.permanentLinks = [{url:'',avatar:'',username:'',id:-1,permanentLink:true}];};$scope.profile.isAvailable = {};$scope.profile.isAvailable.email = $scope.profile.data.email?true:false;$scope.profile.isAvailable.password = $scope.profile.data.password?true:false;$scope.profile.isAvailable.soundcloud = $scope.profile.data.soundcloud?true:false;$scope.profile.data.password = '';};$scope.saveProfileInfo = function(){$scope.message = {value:'',visible:false};var permanentLinks=$scope.profile.data.permanentLinks.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var sendObj={name:'',password:'',permanentLinks:JSON.stringify(permanentLinks)};if($scope.profile.field === 'name'){sendObj.name = $scope.profile.data.name;}else if($scope.profile.field === 'password'){sendObj.password = $scope.profile.data.password;}else if($scope.profile.field === 'email'){sendObj.email = $scope.profile.data.email;}$scope.processing = true;ArtistToolsService.saveProfileInfo(sendObj).then(function(res){$scope.processing = false;if(res.data === 'Email Error'){$scope.message = {value:'Email already exists!',visible:true};return;}SessionService.create(res.data);$scope.closeEditProfileModal();})['catch'](function(res){$scope.processing = false;$.Zebra_Dialog('error saving');});};$scope.removePermanentLink = function(index){$scope.profile.data.permanentLinks.splice(index,1);};$scope.hidebutton = false;$scope.addPermanentLink = function(){if($scope.profile.data.permanentLinks.length >= 2 && !$scope.user.admin){$scope.hidebutton = true;}if($scope.profile.data.permanentLinks.length > 2 && !$scope.user.admin){return false;}$scope.profile.data.permanentLinks.push({url:'',avatar:'',username:'',id:-1,permanentLink:true});};$scope.permanentLinkURLChange = function(index){var permanentLink={};$scope.processing = true;ArtistToolsService.resolveData({url:$scope.profile.data.permanentLinks[index].url}).then(function(res){$scope.profile.data.permanentLinks[index].avatar = res.data.avatar_url?res.data.avatar_url:'';$scope.profile.data.permanentLinks[index].username = res.data.permalink;$scope.profile.data.permanentLinks[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.saveSoundCloudAccountInfo = function(){SC.connect().then(saveInfo).then(handleResponse)['catch'](handleError);function saveInfo(res){return ArtistToolsService.saveSoundCloudAccountInfo({token:res.oauth_token});}function handleResponse(res){$scope.processing = false;if(res.status === 200 && res.data.success === true){SessionService.create(res.data.data);$scope.profile.data = res.data.data;$scope.profile.isAvailable.soundcloud = true;}else {$scope.message = {value:'You already have an account with this soundcloud username',visible:true};}$scope.$apply();}function handleError(err){$scope.processing = false;}};$scope.getDownloadList = function(){ArtistToolsService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(err){console.log(err);}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;ArtistToolsService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}};}).controller('OpenThankYouModalController',function($scope){});app.service('ArtistToolsService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}function saveProfileInfo(data){return $http.post('/api/database/profile/edit',data);}function saveSoundCloudAccountInfo(data){return $http.post('/api/database/profile/soundcloud',data);}function getTrackListFromSoundcloud(data){return $http.post('/api/database/tracks/list',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,saveProfileInfo:saveProfileInfo,deleteDownloadGateway:deleteDownloadGateway,saveSoundCloudAccountInfo:saveSoundCloudAccountInfo,getTrackListFromSoundcloud:getTrackListFromSoundcloud};}]);app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayEdit',{url:'/download-gateway/edit/:gatewayID',templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController'}).state('artistToolsDownloadGatewayNew',{url:'/download-gateway/new',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController'});});app.controller('ArtistToolsDownloadGatewayController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,AdminDLGateService){ /* Init Download Gateway form data */$scope.user = SessionService.getUser();$scope.showTitle = [];$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[],playlists:[],showDownloadTracks:'user',admin:$scope.user.admin,file:{}};$scope.profile = {}; /* Init track list and trackListObj*/$scope.trackList = [];$scope.trackListObj = null; /* Method for resetting Download Gateway form */$scope.trackListChange = function(index){ /* Set booleans */$scope.isTrackAvailable = false;$scope.processing = true; /* Set track data */var track=$scope.trackListObj;$scope.track.trackURL = track.permalink_url;$scope.track.trackTitle = track.title;$scope.track.trackID = track.id;$scope.track.artistID = track.user.id;$scope.track.description = track.description;$scope.track.trackArtworkURL = track.artwork_url?track.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = track.user.avatar_url?track.user.avatar_url:'';$scope.track.artistURL = track.user.permalink_url;$scope.track.artistUsername = track.user.username;$scope.track.SMLinks = [];SC.get('/users/' + $scope.track.artistID + '/web-profiles').then(handleWebProfiles)['catch'](handleError);function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;$scope.$apply();}function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;$scope.$apply();}};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.saveDownloadGate = function(){if(!($scope.track.downloadURL || $scope.track.file && $scope.track.file.name)){$.Zebra_Dialog('Enter a download file');return false;}if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData();for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);}var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists));var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks));if($scope.track.playlists){sendObj.append('playlists',JSON.stringify($scope.track.playlists));}var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($stateParams.submission){$state.go('artistToolsDownloadGatewayList',{'submission':$stateParams.submission});}else {if($scope.user.soundcloud.id == $scope.track.artistID){$.Zebra_Dialog('Download gateway was saved and added to the track.');}else {$.Zebra_Dialog('Download gateway saved.');}$state.go('artistToolsDownloadGatewayList');}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID);}};$scope.getTrackListFromSoundcloud = function(){var profile=SessionService.getUser();if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.checkIfSubmission = function(){if($stateParams.submission){if($state.includes('artistToolsDownloadGatewayNew')){$scope.track.trackURL = $rootScope.submission.trackURL;$scope.trackURLChange();return;}$scope.openThankYouModal.thankYou($stateParams.submission._id);$rootScope.submission = null;}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.description = res.data.description;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.addSMLink = function(){$scope.track.SMLinks.push({key:'',value:''});};$scope.clearOrFile = function(){if($scope.track.downloadURL){angular.element("input[type='file']").val(null);}};$scope.artistURLChange = function(index){var artist={};if($scope.track.artists[index].url != ""){$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url?res.data.avatar_url:'';$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});}};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){$scope.track.artists.push({url:'',avatar:'',username:'',id:-1,permanentLink:false});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'',username:'',id:-1,permanentLink:false}],showDownloadTracks:'user'};angular.element("input[type='file']").val(null);} /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;ArtistToolsService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var permanentLinks=res.data.permanentLinks?res.data.permanentLinks:[''];var SMLinksArray=[];var permanentLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}permanentLinks.forEach(function(item){permanentLinksArray.push({url:item});});if(!$scope.track.showDownloadTracks){$scope.track.showDownloadTracks = 'user';}$scope.track.SMLinks = SMLinksArray;$scope.track.permanentLinks = permanentLinksArray;$scope.track.playlistIDS = []; // $scope.track.showDownloadTracks = ($scope.track.showDownloadTracks === 'user') ? true : false;
//console.log($scope.track);
$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.clearOrInput = function(){$scope.track.downloadURL = "";};$scope.preview = function(track){window.localStorage.setItem('trackPreviewData',JSON.stringify(track));var url=$state.href('artistToolsDownloadGatewayPreview');$window.open(url,'_blank');}; // $scope.$watch('track', function(newVal, oldVal) {
//   console.log(newVal);
//   if (newVal.trackTitle)
//     //window.localStorage.setItem('trackPreviewData', JSON.stringify(newVal));
// }, true);
});app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayPreview',{url:'/download-gateway/preview',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/preview.html',controller:'ArtistToolsPreviewController'});});app.controller("ArtistToolsPreviewController",function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){var track=JSON.parse(window.localStorage.getItem('trackPreviewData'));console.log(track);if(!track.trackTitle){$.Zebra_Dialog('Track Not Found');$state.go("artistToolsDownloadGatewayList");return false;}$scope.track = track;$scope.player = {};SC.stream('/tracks/' + $scope.track.trackID).then(function(p){$scope.player = p;});$scope.toggle = true;$scope.togglePlay = function(){$scope.toggle = !$scope.toggle;if($scope.toggle){$scope.player.pause();}else {$scope.player.play();}};$scope.nodl = function(){$.Zebra_Dialog('No download in preview mode.');};});app.config(function($stateProvider){$stateProvider.state('reForReInteraction',{url:'/artistTools/reForReInteraction',params:{submission:null},templateUrl:'js/artistTools/reForRe/reForReInteraction.html',controller:'ReForReInteractionController'});});app.controller("ReForReInteractionController",function(){});app.config(function($stateProvider){$stateProvider.state('artistToolsScheduler',{url:'/artisttools/scheduler',templateUrl:'js/artistTools/scheduler/scheduler.html',controller:'ATSchedulerController',resolve:{events:function events($http,SessionService){return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});}}});});app.controller('ATSchedulerController',function($rootScope,$state,$scope,$http,AuthService,$window,events,SessionService){$scope.user = SessionService.getUser();$scope.makeEventURL = "";$scope.showOverlay = false;$scope.processiong = false;events.forEach(function(ev){ev.day = new Date(ev.day);});$scope.hideall = false;function promptForEmail(){if(!$scope.user.email){$scope.hideall = true;var answer=prompt('To use the scheduler, we need your email to alert you when your access token goes bad. What is your email?');if(!answer){$state.go('artistToolsDownloadGatewayList');}var myArray=answer.match(/[a-z\._\-!#$%&'+/=?^_`{}|~]+@[a-z0-9\-]+\.\S{2,3}/igm);if(myArray){$scope.user.email = answer;return $http.put('/api/database/profile',$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.hideall = false;}).then(null,function(err){$.Zebra_Dialog("Error saving.");promptForEmail();});}else {promptForEmail();}}}promptForEmail();$scope.calendar = fillDateArrays(events);$scope.dayIncr = 0;$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){$.Zebra_Dialog("Saved");SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.incrDay = function(){if($scope.dayIncr < 14)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.clickedSlot = function(day,hour){var today=new Date();if(today.toLocaleDateString() == day.toLocaleDateString() && today.getHours() > hour)return;$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.makeEventURL = undefined;$scope.makeEvent = calendarDay.events[hour];if($scope.makeEvent == "-"){var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent = {userID:$scope.user.soundcloud.id,day:makeDay,queueSlot:false};$scope.newEvent = true;}else {$scope.makeEventURL = 'https://api.soundcloud.com/tracks/' + $scope.makeEvent.trackID;SC.oEmbed('https://api.soundcloud.com/tracks/' + $scope.makeEvent.trackID,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});$scope.newEvent = false;}};$scope.changeQueueSlot = function(){$scope.makeEvent.title = null;$scope.makeEvent.trackURL = null;$scope.makeEvent.artistName = null;$scope.makeEvent.trackID = null;$scope.makeEventURL = null;};$scope.changeURL = function(){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEventURL}).then(function(res){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEventURL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}).then(null,function(err){document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});};$scope.deleteEvent = function(){if(!$scope.newEvent){$scope.processing = true;$http['delete']('/api/events/repostEvents/' + $scope.makeEvent._id).then(function(res){var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.day.getHours()] = "-";$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog("Deleted");}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not delete.");});}else {var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.getHours()] = "-";var events;$scope.showOverlay = false;}};$scope.saveEvent = function(){if(!$scope.makeEvent.trackID && !$scope.makeEvent.queueSlot){$.Zebra_Dialog("Enter a track URL");}else {if($scope.newEvent){$scope.makeEvent.password = $rootScope.password;$scope.processing = true;$http.post('/api/events/repostEvents',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;if(event.queueSlot){$.Zebra_Dialog("Saved. The next available track in your queue will be reposted at this time.");}else {$.Zebra_Dialog("Saved. The track is now scheduled for reposting.");}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not save.");});}else {$scope.processing = true;$http.put('/api/events/repostEvents',$scope.makeEvent).then(function(res){var event=res.data;event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;$scope.showOverlay = false;$scope.processing = false;if(event.queueSlot){$.Zebra_Dialog("Saved. The next available track in your queue will be reposted at this time.");}else {$.Zebra_Dialog("Saved. The track is now scheduled for reposting.");}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not save.");});}}};$scope.emailSlot = function(){var mailto_link="mailto:?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.user.soundcloud.username + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.backEvent = function(){$scope.makeEvent = null;$scope.showOverlay = false;};$scope.removeQueueSong = function(index){$scope.user.queue.splice(index,1);$scope.saveUser();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;$scope.user.queue.push($scope.newQueueID);$scope.saveUser();$scope.newQueueSong = undefined;$scope.loadQueueSongs([$scope.newQueueID]);};$scope.changeQueueSong = function(){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueueID = track.id;}).then(null,function(err){$.Zebra_Dialog("error getting song");$scope.processing = false;});};$scope.moveUp = function(index){if(index == 0)return;var s=$scope.user.queue[index];$scope.user.queue[index] = $scope.user.queue[index - 1];$scope.user.queue[index - 1] = s;$scope.saveUser();$scope.loadQueueSongs([$scope.user.queue[index],$scope.user.queue[index - 1]]);};$scope.moveDown = function(index){if(index == $scope.user.queue.length - 1)return;var s=$scope.user.queue[index];$scope.user.queue[index] = $scope.user.queue[index + 1];$scope.user.queue[index + 1] = s;$scope.saveUser();$scope.loadQueueSongs([$scope.user.queue[index],$scope.user.queue[index + 1]]);};$scope.loadQueueSongs = function(queue){setTimeout(function(){queue.forEach(function(songID){SC.oEmbed("http://api.soundcloud.com/tracks/" + songID,{element:document.getElementById(songID + "player"),auto_play:false,maxheight:150});});},50);};if($scope.user && $scope.user.queue){$scope.loadQueueSongs($scope.user.queue);}$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};});function fillDateArrays(events){var calendar=[];var today=new Date();for(var i=0;i < 21;i++) {var calDay={};calDay.day = new Date();calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = "-";}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};app.config(function($stateProvider){$stateProvider.state('login',{url:'/login',params:{submission:null},templateUrl:'js/auth/views/login.html',controller:'AuthController'}).state('signup',{url:'/signup',templateUrl:'js/auth/views/signup.html',controller:'AuthController'});});app.controller('AuthController',function($rootScope,$state,$stateParams,$scope,$http,$uibModal,$window,AuthService,SessionService,socket){$scope.loginObj = {};$scope.message = {val:'',visible:false};if(SessionService.getUser()){$state.go('artistToolsDownloadGatewayList');}$scope.openModal = {signupConfirm:function signupConfirm(){$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'signupComplete.html',controller:'AuthController',scope:$scope});}};$scope.login = function(){$scope.message = {val:'',visible:false};AuthService.login($scope.loginObj).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){SessionService.create(res.data.user);$state.go('artistToolsDownloadGatewayList');}else {$scope.message = {val:res.data.message,visible:true};}}function handleLoginError(res){$scope.message = {val:'Error in processing your request',visible:true};}};$scope.checkIfSubmission = function(){if($stateParams.submission){$scope.soundcloudLogin();}};$scope.signup = function(){$scope.message = {val:'',visible:false};if($scope.signupObj.password != $scope.signupObj.confirmPassword){$scope.message = {val:'Password doesn\'t match with confirm password',visible:true};return;}AuthService.signup($scope.signupObj).then(handleSignupResponse)['catch'](handleSignupError);function handleSignupResponse(res){$state.go('login');}function handleSignupError(res){}};$scope.soundcloudLogin = function(){SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudLogin',{token:res.oauth_token,password:'test'});}).then(function(res){$scope.processing = false;SessionService.create(res.data.user);if($stateParams.submission){$state.go('artistToolsDownloadGatewayNew',{'submission':$stateParams.submission});return;}$state.go('artistToolsDownloadGatewayList');}).then(null,function(err){console.log(err);$.Zebra_Dialog('Error: Could not log in');$scope.processing = false;});};});app.factory('AuthService',['$http',function($http){function login(data){return $http.post('/api/login',data);}function signup(data){return $http.post('/api/signup',data);}return {login:login,signup:signup};}]);app.factory('SessionService',function($cookies,$http){function create(data){$cookies.putObject('user',data);}function deleteUser(){$cookies.remove('user');}function getUser(){var user=$cookies.get('user');if(user){return JSON.parse($cookies.get('user'));}}function refreshUser(){var curUser=getUser();if(curUser){$http.get('/api/users/byId/' + curUser._id).then(function(res){create(res.data);});}}return {create:create,deleteUser:deleteUser,getUser:getUser,refreshUser:refreshUser};});app.config(function($stateProvider){$stateProvider.state('autoEmailsNew',{url:'/admin/database/autoEmails/new',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});});app.config(function($stateProvider){$stateProvider.state('autoEmailsEdit',{url:'/admin/database/autoEmails/edit/:templateId',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});}); // resolve: {
//   template: function($http) {
//     return $http.get('/api/database/autoEmails/biweekly?isArtist=true')
//       .then(function(res) {
//         var template = res.data;
//         if (template) {
//           return template;
//         } else {
//           return {
//             purpose: "Biweekly Email"
//           }
//         }
//       })
//       .then(null, function(err) {
//         $.Zebra_Dialog("ERROR: Something went wrong.");
//       })
//   }
// }
app.controller('AutoEmailsController',function($rootScope,$state,$scope,$http,$stateParams,AuthService){$scope.loggedIn = false;$scope.isStateParams = false;if($stateParams.templateId){$scope.isStateParams = true;} // $scope.template = template;
$scope.template = {isArtist:false};$scope.getTemplate = function(){if($stateParams.templateId){$scope.processing = true;$http.get('/api/database/autoEmails?templateId=' + $stateParams.templateId).then(function(res){var template=res.data;$scope.processing = false;if(template){$scope.template = template;}else {$scope.template = {};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}else {return false;}}; // console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails/',$scope.template).then(function(res){$.Zebra_Dialog("Saved email template.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('autoEmailsList',{url:'/admin/database/autoEmails',templateUrl:'js/database/autoEmails/autoEmailsList.html',controller:'AutoEmailsListController',resolve:{templates:function templates($http){return $http.get('/api/database/autoEmails').then(function(res){var template=res.data;if(template){return template;}else {return {purpose:"Biweekly Email"};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}}});});app.controller('AutoEmailsListController',function($rootScope,$state,$scope,$http,AuthService,templates){$scope.loggedIn = false;$scope.templates = templates; // $scope.getTemplate = function() {
//   $scope.processing = true;
//   $http.get('/api/database/autoEmails/biweekly?isArtist=' + String($scope.template.isArtist))
//     .then(function(res) {
//       var template = res.data;
//       $scope.processing = false;
//       if (template) {
//         $scope.template = template;
//       } else {
//         $scope.template = {
//           purpose: "Biweekly Email",
//           isArtist: false
//         };
//       }
//     })
//     .then(null, function(err) {
//       $.Zebra_Dialog("ERROR: Something went wrong.");
//     });
// };
// console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails',$scope.template).then(function(res){$.Zebra_Dialog("Saved email.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('downloadGate',{url:'/admin/downloadGate',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateList',{url:'/admin/downloadGate/list',templateUrl:'js/downloadTrack/views/adminDLGate.list.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateEdit',{url:'/admin/downloadGate/edit/:gatewayID',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.controller('AdminDLGateController',['$rootScope','$state','$stateParams','$scope','$http','$location','$window','$uibModal','SessionService','AdminDLGateService',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,SessionService,AdminDLGateService){ /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Init Download Gateway form data */$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL2){$scope.modal.downloadURL = _downloadURL2;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}};$scope.closeModal = function(){$scope.modalInstance.close();}; /* Init profile */$scope.profile = {}; /* Method for resetting Download Gateway form */function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]};angular.element("input[type='file']").val(null);} /* Check if stateParams has gatewayID to initiate edit */$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID); // if(!$stateParams.downloadGateway) {
//   $scope.getDownloadGateway($stateParams.gatewayID);
// } else {
//   $scope.track = $stateParams.downloadGateway;
// }
}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url:'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.artistURLChange = function(index){var artist={};$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url;$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){if($scope.track.artists.length > 2){return false;}$scope.track.artists.push({url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1});};$scope.addSMLink = function(){ // externalSMLinks++;
// $scope.track.SMLinks['key' + externalSMLinks] = '';
$scope.track.SMLinks.push({key:'',value:''});};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.saveDownloadGate = function(){if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData(); /* Append data to sendObj start */ /* Track */for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);} /* artists */var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists)); /* playlists */var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('playlists',JSON.stringify(playlists)); /* SMLinks */var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks)); /* Append data to sendObj end */var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($scope.track._id){ // $scope.openModal.downloadURL(res.data.trackURL);
return;}resetDownloadGateway();$scope.openModal.downloadURL(res.data);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();$state.go('home');});};$scope.showProfileInfo = function(){$scope.profile = SessionService.getUser();};$scope.getDownloadList = function(){AdminDLGateService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(res){}}; /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;AdminDLGateService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var SMLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}$scope.track.SMLinks = SMLinksArray;$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;AdminDLGateService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}else {return false;}};}]);app.config(function($stateProvider){$stateProvider.state('download',{url:'/download',templateUrl:'js/downloadTrack/views/downloadTrack.view.html',controller:'DownloadTrackController'});});app.controller('DownloadTrackController',['$rootScope','$state','$scope','$http','$location','$window','$q','DownloadTrackService',function($rootScope,$state,$scope,$http,$location,$window,$q,DownloadTrackService){ /* Normal JS vars and functions not bound to scope */var playerObj=null; /* $scope bindings start */$scope.trackData = {trackName:'Mixing and Mastering',userName:'la tropical'};$scope.toggle = true;$scope.togglePlay = function(){$scope.toggle = !$scope.toggle;if($scope.toggle){playerObj.pause();}else {playerObj.play();}};$scope.processing = false;$scope.embedTrack = false;$scope.downloadURLNotFound = false;$scope.errorText = '';$scope.followBoxImageUrl = 'assets/images/who-we-are.png';$scope.recentTracks = []; /* Default processing on page load */$scope.getDownloadTrack = function(){$scope.processing = true;var trackID=$location.search().trackid;DownloadTrackService.getDownloadTrack(trackID).then(receiveDownloadTrack).then(receiveRecentTracks).then(initPlay)['catch'](catchDownloadTrackError);function receiveDownloadTrack(result){$scope.track = result.data;console.log($scope.track);$scope.backgroundStyle = function(){return {'background-image':'url(' + $scope.track.trackArtworkURL + ')','background-repeat':'no-repeat','background-size':'cover'};};$scope.embedTrack = true;$scope.processing = false;if($scope.track.showDownloadTracks === 'user'){return DownloadTrackService.getRecentTracks({userID:$scope.track.userid,trackID:$scope.track._id});}else {return $q.resolve('resolve');}}function receiveRecentTracks(res){if(typeof res === 'object' && res.data){$scope.recentTracks = res.data;}return SC.stream('/tracks/' + $scope.track.trackID);}function initPlay(player){playerObj = player;}function catchDownloadTrackError(){$.Zebra_Dialog('Song Not Found');$scope.processing = false;$scope.embedTrack = false;}}; /* On click download track button */$scope.downloadTrack = function(){if($scope.track.comment && !$scope.track.commentText){$.Zebra_Dialog('Please write a comment!');return false;}$scope.processing = true;$scope.errorText = '';SC.connect().then(performTasks).then(initDownload)['catch'](catchTasksError);function performTasks(res){$scope.track.token = res.oauth_token;return DownloadTrackService.performTasks($scope.track);}function initDownload(res){$scope.processing = false;if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}$scope.$apply();}function catchTasksError(err){$.Zebra_Dialog('Error in processing your request');$scope.processing = false;$scope.$apply();}};}]);app.service('AdminDLGateService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl/admin');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,deleteDownloadGateway:deleteDownloadGateway};}]);app.service('DownloadTrackService',['$http',function($http){function getDownloadTrack(data){return $http.get('/api/download/track?trackID=' + data);}function getTrackData(data){return $http.post('/api/soundcloud/resolve',{url:data.trackURL});}function performTasks(data){return $http.post('api/download/tasks',data);}function getRecentTracks(data){return $http.get('/api/download/track/recent?userID=' + data.userID + '&trackID=' + data.trackID);}return {getDownloadTrack:getDownloadTrack,getTrackData:getTrackData,performTasks:performTasks,getRecentTracks:getRecentTracks};}]);app.service('HomeService',['$http',function($http){function saveApplication(data){return $http.post('/api/home/application',data);}function saveArtistEmail(data){return $http.post('/api/home/artistemail',data);}return {saveApplication:saveApplication,saveArtistEmail:saveArtistEmail};}]);app.config(function($stateProvider){$stateProvider.state('home',{url:'/',templateUrl:'js/home/views/home.html',controller:'HomeController'}).state('about',{url:'/about',templateUrl:'js/home/views/about.html',controller:'HomeController'}).state('services',{url:'/services',templateUrl:'js/home/views/services.html',controller:'HomeController'}).state('faqs',{url:'/faqs',templateUrl:'js/home/views/faqs.html',controller:'HomeController'}).state('apply',{url:'/apply',templateUrl:'js/home/views/apply.html',controller:'HomeController'}).state('contact',{url:'/contact',templateUrl:'js/home/views/contact.html',controller:'HomeController'});});app.controller('HomeController',['$rootScope','$state','$scope','$http','$location','$window','HomeService',function($rootScope,$state,$scope,$http,$location,$window,HomeService){$scope.applicationObj = {};$scope.artist = {};$scope.sent = {application:false,artistEmail:false};$scope.message = {application:{val:'',visible:false},artistEmail:{val:'',visible:false}}; /* Apply page start */$scope.toggleApplicationSent = function(){$scope.message = {application:{val:'',visible:false}};$scope.sent.application = !$scope.sent.application;};$scope.saveApplication = function(){$scope.message.application = {val:'',visible:false};HomeService.saveApplication($scope.applicationObj).then(saveApplicationResponse)['catch'](saveApplicationError);function saveApplicationResponse(res){if(res.status === 200){$scope.applicationObj = {};$scope.sent.application = true;}}function saveApplicationError(res){if(res.status === 400){$scope.message.application = {val:'Email already exists!',visible:true};return;}$scope.message.application = {val:'Error in processing your request',visible:true};}}; /* Apply page end */ /* Artist Tools page start */$scope.toggleArtistEmail = function(){$scope.message = {artistEmail:{val:'',visible:false}};$scope.sent.artistEmail = !$scope.sent.artistEmail;};$scope.saveArtistEmail = function(){HomeService.saveArtistEmail($scope.artist).then(artistEmailResponse)['catch'](artistEmailError);function artistEmailResponse(res){if(res.status === 200){$scope.artist = {};$scope.sent.artistEmail = true;}}function artistEmailError(res){if(res.status === 400){$scope.message.artistEmail = {val:'Email already exists!',visible:true};return;}$scope.message.artistEmail = {val:'Error in processing your request',visible:true};}}; /* Artist Tools page end */}]);app.directive('affixer',function($window){return {restrict:'EA',link:function link($scope,$element){var win=angular.element($window);var topOffset=$element[0].offsetTop;function affixElement(){if($window.pageYOffset > topOffset){$element.css('position','fixed');$element.css('top','3.5%');}else {$element.css('position','');$element.css('top','');}}$scope.$on('$routeChangeStart',function(){win.unbind('scroll',affixElement);});win.bind('scroll',affixElement);}};});app.config(function($stateProvider){$stateProvider.state('premiere',{url:'/premiere',templateUrl:'js/premiere/views/premiere.html',controller:'PremierController'});});app.controller('PremierController',['$rootScope','$state','$scope','$http','$location','$window','PremierService',function($rootScope,$state,$scope,$http,$location,$window,PremierService){$scope.genreArray = ['Alternative Rock','Ambient','Creative','Chill','Classical','Country','Dance & EDM','Dancehall','Deep House','Disco','Drum & Bass','Dubstep','Electronic','Festival','Folk','Hip-Hop/RNB','House','Indie/Alternative','Latin','Trap','Vocalists/Singer-Songwriter'];$scope.premierObj = {};$scope.message = {val:'',visible:false};$scope.processing = false;$scope.savePremier = function(){ //$.Zebra_Dialog('This may take a little while.')
$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.premierObj) {data.append(prop,$scope.premierObj[prop]);}PremierService.savePremier(data).then(receiveResponse)['catch'](catchError);function receiveResponse(res){$scope.processing = false;if(res.status === 200){ //$scope.message.visible = true;
//$scope.message.val = 'Thank you! Your message has been sent successfully.';
$scope.premierObj = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog('Thank you! Your message has been sent successfully.');}else { //$scope.message.visible = true;
//$scope.message.val = 'Error processing. Please try again or send your track to edward@peninsulamgmt.com.';
$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.');}}function catchError(res){$scope.processing = false;$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.'); // if (res.status === 400) {
//   $scope.message = {
//     visible: true,
//     val: res.data
//   };
//   return;
// }
// $scope.message = {
//   visible: true,
//   val: 'Error in processing the request. Please try again or send the submissions to edward@peninsulamgmt.com.'
// };
}};}]);app.service('MixingMasteringService',['$http',function($http){function saveMixingMastering(data){return $http({method:'POST',url:'/api/mixingmastering',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {saveMixingMastering:saveMixingMastering};}]);app.service('PrPlanService',['$http',function($http){function savePrPlan(data){return $http({method:'POST',url:'/api/prplan',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePrPlan:savePrPlan};}]);app.service('PremierService',['$http',function($http){function savePremier(data){return $http({method:'POST',url:'/api/premier',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePremier:savePremier};}]);app.config(function($stateProvider){$stateProvider.state('submissions',{url:'/submissions',templateUrl:'js/submissions/views/submissions.html',controller:'SubmissionController'});});app.controller('SubmissionController',function($rootScope,$state,$scope,$http,AuthService){$scope.counter = 0;$scope.showingElements = [];$scope.submissions = [];$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.loadSubmissions = function(){$scope.processing = true;$http.get('/api/submissions/unaccepted').then(function(res){$scope.submissions = res.data;$scope.loadMore();return $http.get('/api/channels');}).then(function(res){$scope.channels = res.data;$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: Could not get channels.');console.log(err);});};$scope.loadMore = function(){var loadElements=[];for(var i=$scope.counter;i < $scope.counter + 15;i++) {var sub=$scope.submissions[i];if(sub){$scope.showingElements.push(sub);loadElements.push(sub);}}setTimeout(function(){console.log(loadElements);loadElements.forEach(function(sub){SC.oEmbed(sub.trackURL,{element:document.getElementById(sub.trackID + "player"),auto_play:false,maxheight:150});},50);});$scope.counter += 15;};$scope.changeBox = function(sub,chan){var index=sub.channelIDS.indexOf(chan.channelID);if(index == -1){sub.channelIDS.push(chan.channelID);}else {sub.channelIDS.splice(index,1);}};$scope.save = function(submi){console.log(submi);if(submi.channelIDS.length == 0){$scope.decline(submi);}else {submi.password = $rootScope.password;$scope.processing = true;$http.put("/api/submissions/save",submi).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submi),1);$.Zebra_Dialog("Saved");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save");});}};$scope.ignore = function(submission){$scope.processing = true;$http['delete']('/api/submissions/ignore/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Ignored");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Ignore");});};$scope.decline = function(submission){$scope.processing = true;$http['delete']('/api/submissions/decline/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Declined");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Decline");});};$scope.youtube = function(submission){$scope.processing = true;$http.post('/api/submissions/youtubeInquiry',submission).then(function(res){$scope.processing = false;$.Zebra_Dialog('Sent to Zach');});};$scope.sendMore = function(submission){$scope.processing = true;$http.post('/api/submissions/sendMoreInquiry',submission).then(function(res){$scope.processing = false;$.Zebra_Dialog('Sent Email');});};});
//# sourceMappingURL=data:application/json;base64,
