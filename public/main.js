'use strict';window.app = angular.module('FullstackGeneratedApp',['fsaPreBuilt','ui.router','ui.bootstrap','ngAnimate','ngCookies','yaru22.angular-timeago','satellizer','angularMoment','luegg.directives','ui-rangeSlider','ngSanitize','colorpicker.module','ngclipboard','ui.sortable']);app.config(function($urlRouterProvider,$locationProvider,$uiViewScrollProvider,$httpProvider){ // This turns off hashbang urls (/#about) and changes it to something normal (/about)
$locationProvider.html5Mode(true); // If we go to a URL that ui-router doesn't have registered, go to the "/" url.
$urlRouterProvider.otherwise('/'); // $uiViewScrollProvider.useAnchorScroll();
//intercept all incoming and outgoing requests
$httpProvider.interceptors.push(function(){return {'request':function request(config){return config;},'response':function response(_response){ // if (typeof response.data != 'string')
//     console.log(response.data);
return _response;}};});});app.config(function($authProvider){$authProvider.facebook({clientId:'Facebook App ID'}); // Optional: For client-side use (Implicit Grant), set responseType to 'token'
$authProvider.facebook({clientId:'Facebook App ID',responseType:'token'});$authProvider.google({optionalUrlParams:['access_type'],accessType:'offline',url:'/api/login/google/',clientId:'923811958466-kthtaatodor5mqq0pf5ub6km9msii82g.apps.googleusercontent.com',scope:['https://www.googleapis.com/auth/youtubepartner-channel-audit','https://www.googleapis.com/auth/youtube'],redirectUri:window.location.origin + '/analytics'}); // redirectUri: window.location.origin+'/analytics'
//    responseType: 'token'
$authProvider.github({clientId:'GitHub Client ID'});$authProvider.linkedin({clientId:'LinkedIn Client ID'});$authProvider.instagram({clientId:'ae84968993fc4adf9b2cd246b763bf6b',responseType:'token'});$authProvider.yahoo({clientId:'Yahoo Client ID / Consumer Key'});$authProvider.live({clientId:'Microsoft Client ID'});$authProvider.twitch({clientId:'727419002511745024'});$authProvider.bitbucket({clientId:'Bitbucket Client ID'}); // No additional setup required for Twitter
$authProvider.oauth2({name:'foursquare',url:'/auth/foursquare',clientId:'Foursquare Client ID',redirectUri:window.location.origin,authorizationEndpoint:'https://foursquare.com/oauth2/authenticate'});}); // This app.run is for controlling access to specific states.
app.run(function($rootScope,$window,$http,AuthService,$state,$uiViewScroll,SessionService,AppConfig){ // The given state requires an authenticated user.
// var destinationStateRequiresAuth = function (state) {
//     return state.data && state.data.authenticate;
// };
AppConfig.fetchConfig().then(function(res){ // console.log(res);
AppConfig.setConfig(res.data); // console.log(AppConfig.isConfigParamsvailable);
}); // $stateChangeStart is an event fired
// whenever the process of changing a state begins.
$rootScope.$on('$stateChangeStart',function(event,toState,toParams){if(toState.name == 'reForReInteraction'){$rootScope.state = false;}else {$rootScope.state = true;}if($window.location.pathname.indexOf('artistTools') != -1 || $window.location.pathname.indexOf('admin') != -1){var user=SessionService.getUser();if(user){var isAdminAuthenticate=$window.localStorage.getItem('isAdminAuthenticate')?$window.localStorage.getItem('isAdminAuthenticate'):false;var redirectPath=isAdminAuthenticate?"/admin":"/login";if($window.location.pathname.indexOf('admin') != -1 && !isAdminAuthenticate){$http.post('/api/logout').then(function(){SessionService.deleteUser();$state.go('admin'); //window.location.href = '/admin';
});}else if($window.location.pathname.indexOf('artistTools') != -1 && isAdminAuthenticate){$http.get('/api/users/isUserAuthenticate').then(function(res){if(!res.data){SessionService.deleteUser();$window.location.href = redirectPath;}});}}};var user=SessionService.getUser();if(!user){if($window.location.pathname.indexOf('admin/') != -1){$http.post('/api/logout').then(function(){SessionService.deleteUser();$window.location.href = '/admin';});}else if($window.location.pathname.indexOf('artistTools/') != -1){$http.get('/api/users/isUserAuthenticate').then(function(res){if(!res.data){SessionService.deleteUser();$window.location.href = '/login';}});}}});SessionService.refreshUser();$rootScope.reloadFB = function(){setTimeout(function(){FB.init({appId:"1771378846475599",xfbml:true,version:"v2.6"});(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return;}js = d.createElement(s);js.id = id;js.src = "//connect.facebook.net/en_US/sdk.js";fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');},500);};});app.directive('fbLike',['$window','$rootScope',function($window,$rootScope){return {restrict:'A',scope:{fbLike:'=?'},link:function link(scope,element,attrs){if(!$window.FB){ // Load Facebook SDK if not already loaded
$.getScript('//connect.facebook.net/en_US/sdk.js',function(){$window.FB.init({appId:$rootScope.facebookAppId,xfbml:true,version:'v2.0'});renderLikeButton();});}else {renderLikeButton();}var watchAdded=false;function renderLikeButton(){if(!!attrs.fbLike && !scope.fbLike && !watchAdded){ // wait for data if it hasn't loaded yet
watchAdded = true;var unbindWatch=scope.$watch('fbLike',function(newValue,oldValue){if(newValue){renderLikeButton(); // only need to run once
unbindWatch();}});return;}else {element.html('<div class="fb-like"' + (!!scope.fbLike?' data-href="' + scope.fbLike + '"':'') + ' data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>');$window.FB.XFBML.parse(element.parent()[0]);}}}};}]);app.controller('FullstackGeneratedController',function($stateParams,$window,$rootScope,$scope,$state,$http,mainService,SessionService,AuthService){ /*Load More*/$scope.user = SessionService.getUser();$rootScope.enableNavigation = false;$scope.embedded = window.location.search.includes("embed");$scope.isBlock = function(){$scope.todayDate = new Date();$scope.blockRelease = new Date($scope.user.blockRelease);$scope.isBlock = $scope.todayDate < $scope.blockRelease?true:false;return $scope.isBlock;};$scope.loadList = function(){$scope.$broadcast('loadTrades');};$scope.submissionsCount = 0;$scope.premiereCount = 0;$scope.inboxTrades = 0;$scope.shownotification = false;$scope.logout = function(){mainService.logout();};$scope.adminlogout = function(){mainService.adminlogout();};$scope.getSubmissionCount = function(){$http.get('/api/submissions/counts').then(function(res){$scope.submissionsCount = res.data.regularCount + res.data.marketCount;console.log($scope.submissionsCount);});$http.get('/api/premier/count').then(function(res){$scope.premiereCount = res.data.count;console.log($scope.premiereCount);});};if(window.location.href.includes('/admin') && $scope.user)$scope.getSubmissionCount();$scope.getIncompleteTradesCount = function(){if(!!$scope.user){$scope.inboxTrades = 0;$http.get('/api/trades/withUser/' + $scope.user._id).then(function(res){var trades=res.data;trades = trades.filter(function(trade){return !!trade.p1.user && !!trade.p2.user;});if($scope.user.role == 'admin'){var paidRepostIds=[];if($scope.user.paidRepost.length > 0){$scope.user.paidRepost.forEach(function(acc){paidRepostIds.push(acc.userID);});}trades.forEach(function(trade){trade.other = paidRepostIds.includes(trade.p1.user._id)?trade.p2:trade.p1;if(trade.other.accepted)$scope.inboxTrades++;});}else {trades.forEach(function(trade){trade.other = trade.p1.user._id == $scope.user._id?trade.p2:trade.p1;if(trade.other.accepted)$scope.inboxTrades++;});}}).then(null,console.log);}};$scope.getIncompleteTradesCount();$scope.gotoSettings = function(){$scope.user = SessionService.getUser();SessionService.addActionsfoAccount('Admin',$scope.user._id);$state.go("basicstep1");};$scope.getBehalfUserRecord = function(paid){paid = JSON.parse(paid);SessionService.removePaidRepostAccounts();setTimeout(function(){SessionService.addActionsfoAccount('BehalfUser',paid._id,paid.soundcloud.id);SessionService.setUserPaidRepostAccounts(paid);if($state.current.url.indexOf("admin/trade") != -1)window.location.href = '/admin/reposttraders';else window.location.reload($state.current.url);},500);};$scope.gotoBehalfSetting = function(actions){if(actions == "SCHEDULER"){window.location.href = '/admin/scheduler';}if(actions == "REPOSTTRADES"){window.location.href = '/admin/trade';}if(actions == "DOWNLOADGATEWAY"){window.location.href = '/admin/downloadGateway';}};$scope.openHelpModal = function(){$.Zebra_Dialog("Do you have a question? Email us and we'll get back to you promptly.",{'type':'question','buttons':[{caption:'Cancel',callback:function callback(){}},{caption:'Email Tech Support',callback:function callback(){window.location.href = "mailto:coayscue@artistsunlimited.com?subject=Support";}}]});}; /*$scope.checkNotification = function() {
        var user = SessionService.getUser();
        if (user) {
            return $http.get('/api/trades/withUser/' + user._id)
                .then(function(res) {
                    var trades = res.data;
                    trades.forEach(function(trade) {
                        if (trade.p1.user._id == user._id) {
                            if (trade.p1.alert == "change") {
                                $scope.shownotification = true;
                            }
                        }
                        if (trade.p2.user._id == user._id) {
                            if (trade.p2.alert == "change") {
                                $scope.shownotification = true;
                            }
                        }
                    });
                })
        }
    }*/$scope.setCurUser = function(){$scope.curATUser = JSON.stringify(SessionService.getUser());};$scope.rootSoundcloudLogin = function(){$scope.processing = true;SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudLogin',{token:res.oauth_token,password:'test'});}).then(function(res){$scope.processing = false;var userData=res.data.user;userData.isAdmin = false;SessionService.create(userData);$scope.user = SessionService.getUser();window.location.reload();}).then(null,function(err){console.log(err);$scope.processing = false;$scope.soundcloudLogin();});};$rootScope.changeUserAdmin = $scope.changeUserAdmin = function(param,location,state){if(!param)return;$scope.processing = true;if(typeof param == 'string' && param.length > 15)param = JSON.parse(param);if(param == 'user'){var prevATUser=JSON.parse($window.localStorage.getItem('prevATUser'));if(SessionService.getUser()._id != prevATUser._id){$scope.processing = true;return $http.post('/api/login/soundCloudLogin',{token:prevATUser.soundcloud.token,password:'test'}).then(function(res){$scope.processing = false;SessionService.create(res.data.user);$scope.curATUser = SessionService.getUser(); // if (state) $state.go(state);
if(location)window.location.href = location;else window.location.reload();}).then(null,function(err){$scope.processing = false;$scope.rootSoundcloudLogin();});}else {$scope.processing = false; //if (state) $state.go(state);
if(location)window.location.href = location;else window.location.reload();}}else if(param == 'admin'){var adminUser=JSON.parse($window.localStorage.getItem('adminUser'));if(SessionService.getUser()._id != adminUser._id){var handleLoginResponse=function handleLoginResponse(res){if(res.status === 200 && res.data.success){var userData=res.data.user;userData.isAdmin = true;SessionService.create(userData);$scope.processing = false;$scope.curATUser = SessionService.getUser(); // if (state) $state.go(state);
if(location)window.location.href = location;else window.location.reload();}else console.log("Invalid Email or Password.");};$window.localStorage.setItem('prevATUser',JSON.stringify(SessionService.getUser()));$scope.processing = true;return AuthService.login(adminUser.loginInfo).then(handleLoginResponse)['catch'](console.log);}else {$scope.processing = false; // if (state) $state.go(state);
if(location)window.location.href = location;else window.location.reload();}}else {$scope.processing = true;return $http.post('/api/login/soundCloudLogin',{token:param.soundcloud.token,password:'test'}).then(function(res){$scope.processing = false;SessionService.create(res.data.user);$window.localStorage.setItem('prevATUser',JSON.stringify(SessionService.getUser()));$scope.curATUser = SessionService.getUser();window.location.reload();}).then(null,function(err){$scope.processing = false;$scope.rootSoundcloudLogin();});}};$scope.linkedUsersChange = function(authToken){if(authToken){$scope.processing = true;$http.post('/api/login/soundCloudLogin',{token:authToken,password:'test'}).then(function(res){$scope.processing = false;if(res.data.user){SessionService.create(res.data.user);window.location.reload();}}).then(null,function(err){$scope.processing = false;$scope.rootSoundcloudLogin();});}};$scope.swithUser = function(isadmin){if(isadmin){mainService.logout();}else {mainService.adminlogout();}};$rootScope.getUserNetwork = $scope.getUserNetwork = function(){if($window.location.pathname.includes('admin/')){var adminUser=JSON.parse($window.localStorage.getItem('adminUser'));return $http.get("/api/database/adminUserNetwork/" + adminUser._id).then(function(res){$rootScope.userlinkedAccounts = res.data;});}else {return $http.get("/api/database/userNetworks").then(function(networks){$rootScope.userlinkedAccounts = networks.data;});}}; //    $scope.checkNotification();
});app.directive('fbLike',['$window','$rootScope',function($window,$rootScope){return {restrict:'A',scope:{fbLike:'=?'},link:function link(scope,element,attrs){if(!$window.FB){ // Load Facebook SDK if not already loaded
$.getScript('//connect.facebook.net/en_US/sdk.js',function(){$window.FB.init({appId:$rootScope.facebookAppId,xfbml:true,version:'v2.0'});renderLikeButton();});}else {renderLikeButton();}var watchAdded=false;function renderLikeButton(){if(!!attrs.fbLike && !scope.fbLike && !watchAdded){ // wait for data if it hasn't loaded yet
watchAdded = true;var unbindWatch=scope.$watch('fbLike',function(newValue,oldValue){if(newValue){renderLikeButton(); // only need to run once
unbindWatch();}});return;}else {element.html('<div class="fb-like"' + (!!scope.fbLike?' data-href="' + scope.fbLike + '"':'') + ' data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>');$window.FB.XFBML.parse(element.parent()[0]);}}}};}]);app.directive('fileread',[function(){return {scope:{fileread:'=',message:'='},link:function link(scope,element,attributes){element.bind('change',function(changeEvent){scope.$apply(function(){scope.message = {visible:false,val:''};if(changeEvent.target.files[0].type != "audio/mpeg" && changeEvent.target.files[0].type != "audio/mp3"){scope.message = {visible:true,val:'Error: Please upload mp3 format file.'};element.val(null);return;}if(changeEvent.target.files[0].size > 20 * 1000 * 1000){scope.message = {visible:true,val:'Error: Please upload file upto 20 MB size.'};element.val(null);return;}scope.fileread = changeEvent.target.files[0];});});}};}]);app.service('mainService',function($http,SessionService){this.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/login';});};this.adminlogout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();window.localStorage.removeItem('isAdminAuthenticate');window.location.href = '/admin';});};}); /*Load more*/app.directive('whenScrolled',function(){return function(scope,elm,attr){var raw=elm[0];elm.bind('scroll',function(){if(raw.scrollTop + raw.offsetHeight >= raw.scrollHeight){scope.$apply(attr.whenScrolled);}});};});function getQueryString(field,url){var href=url?url:window.location.href;var reg=new RegExp('[?&]' + field + '=([^&#]*)','i');var string=reg.exec(href);return string?string[1]:null;};function queryStringify(obj){return '?' + Object.keys(obj).reduce(function(a,k){a.push(k + '=' + encodeURIComponent(obj[k]));return a;},[]).join('&');}var daysOfWeek=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];function createPseudoAvailableSlots(user){var pseudoSlots={};var tzOffset=(-new Date().getTimezoneOffset() - user.astzOffset) / 60;daysOfWeek.forEach(function(day){if(user.availableSlots[day]){var daySlots=[];user.availableSlots[day].forEach(function(hour){daySlots.push((hour + tzOffset + 24) % 24);});daySlots.sort(function(a,b){if(a < b)return -1;else return 1;});pseudoSlots[day] = daySlots;}});return pseudoSlots;}function createAvailableSlots(user,pseudoSlots){var availableSlots={};var tzOffset=(-new Date().getTimezoneOffset() - user.astzOffset) / 60;daysOfWeek.forEach(function(day){if(pseudoSlots[day]){var daySlots=[];pseudoSlots[day].forEach(function(hour){daySlots.push((hour - tzOffset + 24) % 24);});daySlots.sort(function(a,b){if(a < b)return -1;else return 1;});availableSlots[day] = daySlots;}});return availableSlots;}app.config(function($stateProvider){$stateProvider.state('custompremier',{url:'/:username/premiere',templateUrl:'js/accountPremiere/accountPremier.view.html',controller:'AccountPremierController',resolve:{userID:function userID($stateParams,$http,$window){var username=$stateParams.username;return $http.get('/api/users/getUserByURL/' + username + '/premiere').then(function(res){return {userid:res.data,username:username,submitpart:'premiere'};}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},customizeSettings:function customizeSettings($http,customizeService,userID){if(userID.userid == "nouser"){$location.path("/" + userID.username + "/" + userID.submitpart);}return customizeService.getCustomPageSettings(userID.userid,userID.submitpart).then(function(response){return response;}).then(null,function(err){$.Zebra_Dialog("error getting your customize settings");return;});}}});});app.controller('AccountPremierController',function($rootScope,$state,$scope,userID,customizeSettings,$http,customizeService,$location,PremierService){$scope.premierObj = {};$scope.customizeSettings = customizeSettings;$scope.message = {val:'',visible:false};$scope.processing = false;$scope.savePremier = function(){if(!$scope.premierObj.trackLink && !$scope.premierObj.file){$.Zebra_Dialog("Please upload an mp3 file of provide a link.");}else {$http.post('/api/soundcloud/resolve',{url:$scope.premierObj.trackLink}).then(function(res){$.Zebra_Dialog('We can not premiere this track because you have already released it. Please submit the track for repost instead!',{'buttons':[{caption:'Close',callback:function callback(){}},{caption:'Submit for Repost',callback:function callback(){window.location.href = window.location.origin + "/" + userID.username + "/submit";}}]});}).then(null,function(err){$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.premierObj) {data.append(prop,$scope.premierObj[prop]);}data.append("userID",userID.userid);PremierService.savePremier(data).then(receiveResponse)['catch'](catchError);function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.premierObj = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog('Thank you! Your message has been sent successfully.');}else {$.Zebra_Dialog('Error processing. Please try again.');}}function catchError(res){$scope.processing = false;$.Zebra_Dialog('Error processing. Please try again.');}});};};});app.config(function($stateProvider){$stateProvider.state('customsubmit',{url:'/:username/submit',templateUrl:'js/accountSubmit/accountsubmit.view.html',controller:'AccountSubmitSongController',resolve:{userID:function userID($stateParams,$http,$window){var username=$stateParams.username;return $http.get('/api/users/getUserByURL/' + username + '/submit').then(function(res){return {userid:res.data,username:username,submitpart:'submit'};}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},customizeSettings:function customizeSettings($http,customizeService,userID){if(userID.userid == "nouser"){$location.path("/" + userID.username + "/" + userID.submitpart);}return customizeService.getCustomPageSettings(userID.userid,userID.submitpart).then(function(response){return response;}).then(null,function(err){$.Zebra_Dialog("error getting your customize settings");return;});}}});});app.controller('AccountSubmitSongController',function($rootScope,$state,$scope,userID,customizeSettings,$http,customizeService,$location){$scope.submission = {};$scope.customizeSettings = customizeSettings;$scope.searchString = "";$scope.showPlayer = false;console.log(window.localStorage.getItem('hasBeenAdmin'));$scope.choseTrack = function(track){console.log(track);$scope.searchString = track.title;$scope.submission.trackID = track.id;$scope.submission.title = track.title;$scope.submission.trackURL = track.permalink_url;if(track.user){$scope.submission.trackArtist = track.user.username;$scope.submission.trackArtistURL = track.user.permalink_url;}$scope.submission.artworkURL = track.artwork_url;var widget=SC.Widget('scPlayerCustom');widget.load($scope.submission.trackURL,{auto_play:false,show_artwork:true,callback:function callback(){if($scope.submission.title == "--unknown--"){widget.getCurrentSound(function(track){console.log(track);$scope.searchString = track.title;$scope.submission.trackID = track.id;$scope.submission.title = track.title;$scope.submission.trackURL = track.permalink_url;$scope.submission.trackArtist = track.user.username;$scope.submission.trackArtistURL = track.user.permalink_url;$scope.submission.artworkURL = track.artwork_url;});}}});$scope.showPlayer = true;document.getElementById('scPlayerCustom').style.visibility = "visible";};$scope.submit = function(){if(!$scope.submission.email || !$scope.submission.name || !$scope.submission.trackID){$.Zebra_Dialog("Please fill in all fields");}else {$scope.processing = true;$http.post('/api/submissions',{email:$scope.submission.email,trackID:$scope.submission.trackID,name:$scope.submission.name,title:$scope.submission.title,trackURL:$scope.submission.trackURL,trackArtist:$scope.submission.trackArtist,trackArtistURL:$scope.submission.trackArtistURL,artworkURL:$scope.submission.artworkURL,channelIDS:[],invoiceIDS:[],userID:userID.userid,genre:''}).then(function(res){$.Zebra_Dialog("Your song has been submitted and will be reviewed soon.");$scope.processing = false;$scope.notFound = false;$scope.submission = {};$scope.searchString = "";$scope.showPlayer = false;document.getElementById('scPlayerCustom').style.visibility = "hidden";$scope.url = "";}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});}};});app.service('accountService',['$http',function($http){function deleteUserAccount(id){return $http({method:'put',url:'/api/database/deleteUserAccount/' + id}).then(function(response){return response.data;});}return {deleteUserAccount:deleteUserAccount};}]);app.service('customizeService',['$http',function($http){function addCustomize(data){return $http.post('/api/customsubmissions/addCustomSubmission',data);}function uploadFile(data){var fd=new FormData();fd.append('file',data);return $http({method:'POST',url:'/api/aws',headers:{'Content-Type':undefined},tranformRequest:angular.identify,data:fd}).then(function(response){return response.data;});}function getCustomPageSettings(userID,type){return $http({method:'GET',url:'/api/customsubmissions/getCustomSubmission/' + userID + '/' + type}).then(function(response){return response.data;});}return {addCustomize:addCustomize,uploadFile:uploadFile,getCustomPageSettings:getCustomPageSettings};}]);app.config(function($stateProvider){$stateProvider.state('database',{url:'/admin/database',templateUrl:'js/database/database.html',controller:'DatabaseController'});});app.directive('notificationBar',['socket',function(socket){return {restrict:'EA',scope:true,template:'<div style="margin: 0 auto;width:50%" ng-show="bar.visible">' + '<uib-progress><uib-bar value="bar.value" type="{{bar.type}}"><span>{{bar.value}}%</span></uib-bar></uib-progress>' + '</div>',link:function link($scope,iElm,iAttrs,controller){socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.bar.visible = false;$scope.bar.value = 0;}});}};}]);app.controller('DatabaseController',function($rootScope,$state,$scope,$http,AuthService,SessionService,socket){if(!SessionService.getUser()){$state.go('admin');}$scope.addUser = {};$scope.query = {};$scope.trdUsrQuery = {};$scope.queryCols = [{name:'username',value:'username'},{name:'genre',value:'genre'},{name:'name',value:'name'},{name:'URL',value:'scURL'},{name:'email',value:'email'},{name:'description',value:'description'},{name:'followers',value:'followers'},{name:'number of tracks',value:'numTracks'},{name:'facebook',value:'facebookURL'},{name:'instagram',value:'instagramURL'},{name:'twitter',value:'twitterURL'},{name:'youtube',value:'youtubeURL'},{name:'websites',value:'websites'},{name:'auto email day',value:'emailDayNum'},{name:'all emails',value:'allEmails'}];$scope.downloadButtonVisible = false;$scope.track = {trackUrl:'',downloadUrl:'',email:''};$scope.bar = {type:'success',value:0,visible:false};$scope.paidRepost = {soundCloudUrl:''};$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};$scope.saveAddUser = function(){$scope.processing = true;$scope.addUser.password = $rootScope.password;$http.post('/api/database/adduser',$scope.addUser).then(function(res){$.Zebra_Dialog("Success: Database is being populated. You will be emailed when it is complete.");$scope.processing = false;$scope.bar.visible = true;})['catch'](function(err){$.Zebra_Dialog('Bad submission');$scope.processing = false;});};$scope.createUserQueryDoc = function(){var query={};if($scope.query.artist == "artists"){query.artist = true;}else if($scope.query.artist == "non-artists"){query.artist = false;}var flwrQry={};if($scope.query.followersGT){flwrQry.$gt = $scope.query.followersGT;query.followers = flwrQry;}if($scope.query.followersLT){flwrQry.$lt = $scope.query.followersLT;query.followers = flwrQry;}if($scope.query.genre)query.genre = $scope.query.genre;if($scope.queryCols){query.columns = $scope.queryCols.filter(function(elm){return elm.value !== null;}).map(function(elm){return elm.value;});}if($scope.query.trackedUsersURL)query.trackedUsersURL = $scope.query.trackedUsersURL;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/followers',body).then(function(res){$scope.filename = res.data;$scope.downloadButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.createTrdUsrQueryDoc = function(){var query={};var flwrQry={};if($scope.trdUsrQuery.followersGT){flwrQry.$gt = $scope.trdUsrQuery.followersGT;query.followers = flwrQry;}if($scope.trdUsrQuery.followersLT){flwrQry.$lt = $scope.trdUsrQuery.followersLT;query.followers = flwrQry;}if($scope.trdUsrQuery.genre)query.genre = $scope.trdUsrQuery.genre;var body={query:query,password:$rootScope.password};$scope.processing = true;$http.post('/api/database/trackedUsers',body).then(function(res){$scope.trdUsrFilename = res.data;$scope.downloadTrdUsrButtonVisible = true;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Bad Query or No Matches");$scope.processing = false;});};$scope.download = function(filename){var anchor=angular.element('<a/>');anchor.attr({href:filename,download:filename})[0].click();$scope.downloadButtonVisible = false;$scope.downloadTrdUsrButtonVisible = false;};$scope.savePaidRepostChannel = function(){$scope.processing = true;$http.post('/api/database/paidrepost',$scope.paidRepost).then(function(res){$scope.paidRepost = {soundCloudUrl:''};$.Zebra_Dialog("SUCCESS: Url saved successfully");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});}; /* Listen to socket events */socket.on('notification',function(data){var percentage=parseInt(Math.floor(data.counter / data.total * 100),10);$scope.bar.value = percentage;if(percentage === 100){$scope.statusBarVisible = false;$scope.bar.value = 0;}});});app.service('AdminToolsService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(userid){return $http.get('/api/database//downloadurladmin/' + userid);}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}function saveProfileInfo(data){return $http.post('/api/database/profile/edit',data);}function saveSoundCloudAccountInfo(data){return $http.post('/api/database/profile/soundcloud',data);}function getTrackListFromSoundcloud(data){return $http.post('/api/database/tracks/list',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,saveProfileInfo:saveProfileInfo,deleteDownloadGateway:deleteDownloadGateway,saveSoundCloudAccountInfo:saveSoundCloudAccountInfo,getTrackListFromSoundcloud:getTrackListFromSoundcloud};}]);app.config(function($stateProvider){$stateProvider.state('adminDownloadGateway',{url:'/admin/downloadGateway',templateUrl:'js/downloadGateway/downloadGateway.list.html',controller:'AdminDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','adminDownloadGateway');$window.localStorage.setItem('tid',$stateParams.gatewayID);$window.location.href = '/admin';}return true;}}}).state('adminDownloadGatewayEdit',{url:'/admin/downloadGateway/edit/:gatewayID',templateUrl:'js/downloadGateway/downloadGateway.html',controller:'AdminDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','adminDownloadGatewayEdit');$window.localStorage.setItem('tid',$stateParams.gatewayID);$window.location.href = '/admin';}return true;}}}).state('adminDownloadGatewayNew',{url:'/admin/downloadGateway/new',params:{submission:null},templateUrl:'js/downloadGateway/downloadGateway.html',controller:'AdminDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','adminDownloadGatewayNew');$window.location.href = '/admin';}return true;}}}).state('adminDownloadGatewayPreview',{url:'/admin/downloadGateway/preview',params:{submission:null},templateUrl:'js/downloadGateway/preview.html',controller:'AdminDownloadGatewayController'});});app.controller('AdminDownloadGatewayController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,AdminToolsService,AdminDLGateService,DownloadTrackService){ // /* Init Download Gateway form data */
$scope.isLoggedIn = SessionService.getUser()?true:false;$scope.curATUser = SessionService.getUser();});(function(){'use strict'; // Hope you didn't forget Angular! Duh-doy.
if(!window.angular)throw new Error('I can\'t find Angular!');var app=angular.module('fsaPreBuilt',[]);app.factory('initSocket',function(){if(!window.io)throw new Error('socket.io not found!');return window.io(window.location.origin);});app.factory('socket',function($rootScope,initSocket){return {on:function on(eventName,callback){initSocket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(initSocket,args);});});},emit:function emit(eventName,data,callback){initSocket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(initSocket,args);}});});}};});app.factory('AppConfig',function($http){var _configParams=null;function fetchConfig(){return $http.get('/api/soundcloud/soundcloudConfig');}function setConfig(data){_configParams = data;SC.initialize({client_id:data.clientID,redirect_uri:data.callbackURL,scope:"non-expiring"});return 'ok';}function getConfig(){return _configParams;}return {fetchConfig:fetchConfig,getConfig:getConfig,setConfig:setConfig};}); // AUTH_EVENTS is used throughout our app to
// broadcast and listen from and to the $rootScope
// for important events about authentication flow.
// app.constant('AUTH_EVENTS', {
//     loginSuccess: 'auth-login-success',
//     loginFailed: 'auth-login-failed',
//     logoutSuccess: 'auth-logout-success',
//     sessionTimeout: 'auth-session-timeout',
//     notAuthenticated: 'auth-not-authenticated',
//     notAuthorized: 'auth-not-authorized'
// });
// app.factory('AuthInterceptor', function($rootScope, $q, AUTH_EVENTS) {
//     var statusDict = {
//         401: AUTH_EVENTS.notAuthenticated,
//         403: AUTH_EVENTS.notAuthorized,
//         419: AUTH_EVENTS.sessionTimeout,
//         440: AUTH_EVENTS.sessionTimeout
//     };
//     return {
//         responseError: function(response) {
//             $rootScope.$broadcast(statusDict[response.status], response);
//             return $q.reject(response)
//         }
//     };
// });
// app.config(function($httpProvider) {
//     $httpProvider.interceptors.push([
//         '$injector',
//         function($injector) {
//             return $injector.get('AuthInterceptor');
//         }
//     ]);
// });
// app.service('AuthService', function($http, Session, $rootScope, AUTH_EVENTS, $q) {
//     function onSuccessfulLogin(response) {
//         var data = response.data;
//         Session.create(data.id, data.user);
//         $rootScope.$broadcast(AUTH_EVENTS.loginSuccess);
//         return data.user;
//     }
//     // Uses the session factory to see if an
//     // authenticated user is currently registered.
//     this.isAuthenticated = function() {
//         return !!Session.user;
//     };
//     this.getLoggedInUser = function(fromServer) {
//         // If an authenticated session exists, we
//         // return the user attached to that session
//         // with a promise. This ensures that we can
//         // always interface with this method asynchronously.
//         // Optionally, if true is given as the fromServer parameter,
//         // then this cached value will not be used.
//         if (this.isAuthenticated() && fromServer !== true) {
//             return $q.when(Session.user);
//         }
//         // Make request GET /session.
//         // If it returns a user, call onSuccessfulLogin with the response.
//         // If it returns a 401 response, we catch it and instead resolve to null.
//         return $http.get('/session').then(onSuccessfulLogin).catch(function() {
//             return null;
//         });
//     };
//     this.login = function(credentials) {
//         return $http.post('/login', credentials)
//             .then(onSuccessfulLogin)
//             .catch(function() {
//                 return $q.reject({
//                     message: 'Invalid login credentials.'
//                 });
//             });
//     };
//     this.logout = function() {
//         return $http.get('/logout').then(function() {
//             Session.destroy();
//             $rootScope.$broadcast(AUTH_EVENTS.logoutSuccess);
//         });
//     };
// });
// app.service('Session', function($rootScope, AUTH_EVENTS) {
//     var self = this;
//     $rootScope.$on(AUTH_EVENTS.notAuthenticated, function() {
//         self.destroy();
//     });
//     $rootScope.$on(AUTH_EVENTS.sessionTimeout, function() {
//         self.destroy();
//     });
//     this.id = null;
//     this.user = null;
//     this.create = function(sessionId, user) {
//         this.id = sessionId;
//         this.user = user;
//     };
//     this.destroy = function() {
//         this.id = null;
//         this.user = null;
//     };
// });
})();app.config(function($stateProvider){$stateProvider.state('admin',{url:'/admin',templateUrl:'js/login/login.html',controller:'AdminLoginController'});});app.controller('AdminLoginController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$window){$scope.counter = 0;$scope.showingElements = [];$scope.submissions = [];$scope.loginObj = {};var userData=SessionService.getUser();$scope.isLoggedIn = SessionService.getUser()?true:false;if($scope.isLoggedIn){if(userData.paypal_email == undefined || userData.paypal_email == ""){$state.go('basicstep1');}else {SessionService.removeAccountusers();$state.go('accounts');}}$scope.login = function(){$scope.signinError = "";AuthService.login($scope.loginObj).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){var userData=res.data.user;userData.isAdmin = true;$window.localStorage.setItem('isAdminAuthenticate',true);SessionService.create(userData);$scope.getIncompleteTradesCount();userData.loginInfo = $scope.loginObj;$window.localStorage.setItem('adminUser',JSON.stringify(userData));$window.localStorage.setItem('hasBeenAdmin',true);$scope.getSubmissionCount();if(userData.paypal_email == undefined || userData.paypal_email == "")$state.go('basicstep1');else if(!userData.paidRepost[0]){SessionService.addActionsfoAccount('Add','index');$state.go('channelstep1');}else {$http.get('/api/users/byId/' + userData.paidRepost[0].userID).then(function(res){$window.localStorage.setItem('prevATUser',JSON.stringify(res.data));SessionService.removeAccountusers();window.location.href = '/admin/submissions';}).then(console.debug);}}else {$scope.signinError = "Invalid Email or Password.";}}function handleLoginError(res){$scope.signinError = "Error in processing your request";}};$scope.logout = function(){$http.get('/api/logout').then(function(){SessionService.deleteUser();window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('mixingMastering',{url:'/mixingMastering',templateUrl:'js/mixingMastering/mixingMastering.html',controller:'mixingMasteringController'});});app.controller('mixingMasteringController',function($rootScope,$state,$scope,$http,MixingMasteringService){$scope.mixingMastering = {};$scope.processing = false;$scope.saveMixingMastering = function(){if(!$scope.mixingMastering.file || !$scope.mixingMastering.email || !$scope.mixingMastering.name || !$scope.mixingMastering.comment){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.mixingMastering = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.mixingMastering) {data.append(prop,$scope.mixingMastering[prop]);}MixingMasteringService.saveMixingMastering(data).then(receiveResponse)['catch'](catchError);}};});app.config(function($stateProvider){$stateProvider.state('pay',{url:'/pay/:submissionID',templateUrl:'js/pay/pay.html',controller:'PayController',resolve:{submission:function submission($http,$stateParams){return $http.get('/api/submissions/withID/' + $stateParams.submissionID).then(function(res){return res.data;});},channels:function channels($http,submission){return submission.channels;}}});});app.filter('calculateDiscount',function(){return function(input){return parseFloat(input * 0.90).toFixed(2);};});app.controller('PayController',function($scope,$rootScope,$http,channels,submission,$state,$uibModal,AppConfig){$rootScope.submission = submission;$scope.auDLLink = false;$scope.showSignUp = false;if($state.$current.name == "pay"){$scope.showSignUp = true;}$scope.total = 0;$scope.showTotal = 0;$scope.channels = channels;$scope.goToLogin = function(){$state.go('login',{'submission':$rootScope.submission});};$scope.makePayment = function(){if($scope.total != 0){if($scope.auDLLink){$scope.discountModalInstance = $uibModal.open({animation:true,templateUrl:'discountModal.html',controller:'discountModalController',scope:$scope});}else {$scope.continuePay(false);}}else {$.Zebra_Dialog('Please add a repost to your cart by clicking "Add To Cart".');}};$scope.continuePay = function(discounted){if($scope.discountedModal){$scope.discountModalInstance.close();}$scope.processing = true;if(discounted)$scope.showTotal = parseFloat($scope.total * 0.9).toFixed(2);else $scope.showTotal = parseFloat($scope.total).toFixed(2);var pricingObj={total:$scope.showTotal,submission:$rootScope.submission,channels:$scope.channels.filter(function(ch){return ch.addtocart;})};$http.post('/api/submissions/getPayment',pricingObj).then(function(res){window.location = res.data;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.message);});};$scope.addToCart = function(channel){if(channel.addtocart){$scope.total = $scope.total - parseFloat(channel.price);}else {$scope.total += parseFloat(channel.price);}channel.addtocart = channel.addtocart?false:true;if($scope.auDLLink)$scope.showTotal = parseFloat($scope.total * 0.9).toFixed(2);else $scope.showTotal = parseFloat($scope.total).toFixed(2);};$scope.getTrack = function(){SC.get('/tracks/' + submission.trackID).then(function(track){$scope.track = track;});setTimeout(function(){ //$scope.auDLLink = $scope.track.purchase_url ? true: false;
SC.Widget('scPlayer').load(submission.trackURL,{auto_play:false,show_artwork:true}); // SC.oEmbed(submission.trackURL, {
//     element: document.getElementById('scPlayer'),
//     auto_play: false,
//     maxheight: 150
//   });
},3000);};$scope.getTrack();});app.controller('discountModalController',function($scope){});app.config(function($stateProvider){$stateProvider.state('complete',{url:'/complete',templateUrl:'js/pay/thankyou.html',controller:'ThankyouController'});});app.controller('ThankyouController',function($http,$scope,$location){$scope.processing = true;$scope.notified = false;$http.put('/api/submissions/completedPayment',$location.search()).then(function(res){console.log(res.data);$scope.processing = false;window.location.href = res.data.link;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});});app.config(function($stateProvider){$stateProvider.state('submitSong',{url:'/submit',templateUrl:'js/poolSubmit/submit.view.html',controller:'SubmitSongController'});$stateProvider.state('customsubmits',{url:'/custom/:username/:submitpart',templateUrl:'js/accountSubmit/accountsubmit.view.html',controller:'SubmitSongController',resolve:{getUserByURL:function getUserByURL($stateParams,$http,$window){var username=$stateParams.username;var submitpart=$stateParams.submitpart;if(submitpart.indexOf('submit') != -1){$window.location.href = '/' + username + '/submit';}else {$window.location.href = '/' + username + '/premiere';}return new Promise(function(fulfill,reject){});}}});});app.controller('SubmitSongController',function(SessionService,$rootScope,$state,$scope,$http,$location){$scope.user = SessionService.getUser();$scope.showSignup = true;$scope.submission = {};$scope.userID = $location.search().id;$scope.searchString = "";$scope.showPlayer = false;$scope.choseTrack = function(track){$scope.searchString = track.title;$scope.submission.trackID = track.id;$scope.submission.title = track.title;$scope.submission.trackURL = track.permalink_url;if(track.user){$scope.submission.trackArtist = track.user.username;$scope.submission.trackArtistURL = track.user.permalink_url;}$scope.submission.artworkURL = track.artwork_url;var widget=SC.Widget('scPlayerCustom');widget.load($scope.submission.trackURL,{auto_play:false,show_artwork:true,callback:function callback(){if($scope.submission.title == "--unknown--"){widget.getCurrentSound(function(track){console.log(track);$scope.searchString = track.title;$scope.submission.trackID = track.id;$scope.submission.title = track.title;$scope.submission.trackURL = track.permalink_url;$scope.submission.trackArtist = track.user.username;$scope.submission.trackArtistURL = track.user.permalink_url;$scope.submission.artworkURL = track.artwork_url;});}}});$scope.showPlayer = true;document.getElementById('scPlayerCustom').style.visibility = "visible";};$scope.submit = function(){if(!$scope.submission.email || !$scope.submission.name || !$scope.submission.trackID){$.Zebra_Dialog("Please fill in all fields");}else {$scope.processing = true;$http.post('/api/submissions/pool',{email:$scope.submission.email,trackID:$scope.submission.trackID,name:$scope.submission.name,title:$scope.submission.title,trackURL:$scope.submission.trackURL,trackArtist:$scope.submission.trackArtist,trackArtistURL:$scope.submission.trackArtistURL,artworkURL:$scope.submission.artworkURL,channelIDS:[],genre:''}).then(function(res){$.Zebra_Dialog("Your song has been submitted and will be reviewed soon.");$scope.processing = false;$scope.notFound = false;$scope.showPlayer = false;$scope.submission = {};$scope.searchString = "";document.getElementById('scPlayerCustom').style.visibility = "hidden";$scope.url = "";}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});}};});app.config(function($stateProvider){$stateProvider.state('prPlans',{url:'/prPlans',templateUrl:'js/prPlans/prPlans.html',controller:'prPlansController'});});app.controller('prPlansController',function($rootScope,$state,$scope,$http,PrPlanService){$scope.prPlans = {};$scope.processing = false;$scope.openSocialDialog = function(type){var displayText="";if(type == 'Youtube')displayText = "Like SoundCloud, we premiere tracks to genre-specific  audiences. We work closely with an array of well-established YouTube channels for premieres. Approaches to promotion vary across different social media platforms and requires a nuanced understanding of each.";if(type == 'Blog Outreach')displayText = "When releasing a song, it is important to keep in mind  the manner in which  blogs can affect one's reach. The blogs we work with curate music with a specific audience in mind, tending to be committed readers. We have cultivated relationships with the faces behind various blogs, and we are fortunate to have their continued support of our content.";if(type == 'Spotify')displayText = 'The third and final platform in which we can assist with releasing music is Spotify. Spotify is an online music platform which pays artist per stream. Spotify at the core is also a substantial way for artists to be heard. There are over 100 Million users worldwide  and as one of the major online music platforms, we will do our best to get your track in as many playlists as possible.';if(type == 'Soundcloud')displayText = "We facilitate premieres over our network of over six SoundCloud channels, working closely with every artist to ensure that the network genre matches the feel of their track. Though we have had better results premiering content from our various network pages, we are also able to also make the track available on the artist's personal profile and promote the track from there. We remain flexible with many of these aspects and tailor each campaign to the respective goals of the artist.";$.Zebra_Dialog(displayText,{width:600});};$scope.savePrPlan = function(){if(!$scope.prPlans.file || !$scope.prPlans.email || !$scope.prPlans.name || !$scope.prPlans.budget){$.Zebra_Dialog("Please fill in all fields");}else {var receiveResponse=function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.prPlans = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog("Thank you! Your request has been submitted successfully.");return;}$.Zebra_Dialog("Error in processing the request. Please try again.");};var catchError=function catchError(res){$scope.processing = false;$.Zebra_Dialog("Error in processing the request. Please try again.");};$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.prPlans) {data.append(prop,$scope.prPlans[prop]);}PrPlanService.savePrPlan(data).then(receiveResponse)['catch'](catchError);}};});'use strict';app.factory('socket',function($rootScope){var socket;return {on:function on(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args);});});},emit:function emit(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},getMessage:function getMessage(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},connect:function connect(){socket = io.connect();},disconnect:function disconnect(){socket.disconnect();}};});app.config(function($stateProvider){$stateProvider.state('adminreForReInteraction',{url:'/admin/trade/:user1Name/:user2Name',templateUrl:'js/repostTraders/_reForReInteraction.html',controller:'AdminReForReInteractionController',resolve:{login:function login($rootScope,$http,$stateParams,$window,SessionService,$state){if(SessionService.getUser()){return $rootScope.getUserNetwork().then(function(){var repName=!!SessionService.getUser().soundcloud?SessionService.getUser().soundcloud.pseudoname:"";if(repName == $stateParams.user1Name || repName == $stateParams.user2Name){return 'ok';}else {var found=$rootScope.userlinkedAccounts.find(function(user){var repName=user.soundcloud.pseudoname;return repName == $stateParams.user1Name || repName == $stateParams.user2Name;});if(found){$rootScope.changeUserAdmin(found);}else {if($window.localStorage.getItem('returnstate') == 'reForReInteraction'){$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('user1Name');$window.localStorage.removeItem('user2Name');$state.go('scheduler');}else {$window.localStorage.setItem('returnstate','reForReInteraction');$window.localStorage.setItem('user1Name',$stateParams.user1Name);$window.localStorage.setItem('user2Name',$stateParams.user2Name);SessionService.deleteUser();window.location.href = '/login';}}}});}else {$window.localStorage.setItem('returnstate','reForReInteraction');$window.localStorage.setItem('user1Name',$stateParams.user1Name);$window.localStorage.setItem('user2Name',$stateParams.user2Name);SessionService.deleteUser();window.location.href = '/login';}},trade:function trade($rootScope,$http,$stateParams,$window,SessionService){return $http.get('/api/trades/withUsers/' + $stateParams.user1Name + '/' + $stateParams.user2Name).then(function(res){var user=SessionService.getUser('subAdmin');var trade=res.data;trade.p1.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p1.user);trade.p2.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p2.user);trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;return trade;}).then(null,console.log);},events:function events($http,$window,SessionService){return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},p1Events:function p1Events($http,trade){return $http.get('/api/events/forUser/' + trade.p1.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},p2Events:function p2Events($http,trade){return $http.get('/api/events/forUser/' + trade.p2.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting other's events events");return;});}}});}); // currentTrades: function($http, SessionService) {
//   var tradeType = {
//     Requests: true,
//     Requested: true,
//     TradePartners: true
//   };
//   var user = SessionService.getUser();
//   return $http.get('/api/trades/withUser/' + user._id + '?tradeType=' + JSON.stringify(tradeType))
//     .then(function(res) {
//       var trades = res.data;
//       trades.forEach(function(trade) {
//         trade.p1.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p1.user);
//         trade.p2.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p2.user);
//         trade.other = (trade.p1.user._id == user._id) ? trade.p2 : trade.p1;
//         trade.user = (trade.p1.user._id == user._id) ? trade.p1 : trade.p2;
//       });
//       trades.sort(function(a, b) {
//         if (a.user.alert == "change") {
//           return -1;
//         } else if (a.user.alert == "placement") {
//           return -1
//         } else {
//           return 1;
//         }
//       })
//       return trades;
//     })
// }
app.controller("AdminReForReInteractionController",function($rootScope,$state,$scope,$http,AuthService,$window,SessionService,socket,$stateParams,trade,p1Events,p2Events){$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('user1ID');$window.localStorage.removeItem('user2ID');}$scope.isLoggedIn = SessionService.getUser()?true:false;$scope.trade = trade;$scope.msgHistory = trade.messages; // $scope.currentTrades = currentTrades;
$scope.p1Events = p1Events;$scope.p2Events = p2Events;$scope.stateParams = $stateParams;});app.config(function($stateProvider){$stateProvider.state('adminRepostTraders',{url:'/admin/reposttraders',templateUrl:'js/repostTraders/repostTraders.html',controller:'adminReForReListsController',resolve:{currentTrades:function currentTrades($http,SessionService){var user=SessionService.getUser();if(user){return $http.get('/api/trades/withUser/' + user._id).then(function(res){var trades=res.data;trades = trades.filter(function(trade){return !!trade.p1.user && !!trade.p2.user;});trades.forEach(function(trade){trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;});return trades;});}else {return [];}},favorites:function favorites($http,SessionService){var user=SessionService.getUser();if(user){return $http.get('/api/trades/doneWithUser/' + user._id).then(function(res){var trades=res.data;trades = trades.filter(function(trade){return !!trade.p1.user && !!trade.p2.user;});var favs=trades.map(function(trade){return trade.p1.user._id == user._id?trade.p2.user:trade.p1.user;}); // favs = favs.filter(function(favUser) {
//     var ok = true;
//     currentTrades.forEach(function(trade) {
//       if (trade.p1.user._id == favUser._id || trade.p2.user._id == favUser._id) {
//         ok = false;
//       }
//     })
//     return ok;
//   })
var favsNoDups=[];favs.forEach(function(favUser){var ok=true;favsNoDups.forEach(function(noDupUser){if(favUser._id == noDupUser._id)ok = false;});if(ok)favsNoDups.push(favUser);});return favsNoDups;}).then(null,console.log);}else {return [];}},openTrades:function openTrades($http,SessionService){var user=SessionService.getUser();if(user){var minFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers / 2):0;var maxFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers * 2):1000;return $http.post('/api/users/bySCURL/',{url:'',minFollower:minFollower,maxFollower:maxFollower,recordRange:{skip:0,limit:12}}).then(function(res){var users=res.data;return users;}).then(null,console.log);}else {return [];}},repostEvents:function repostEvents($http,SessionService){var user=SessionService.getUser();if(user){return $http.get("/api/events/getRepostEvents/" + user._id).then(function(repostEvent){var repostEvent=repostEvent.data;return repostEvent;});}else {return [];}}}});});app.controller("adminReForReListsController",function($scope,$rootScope,currentTrades,favorites,openTrades,repostEvents,$http,SessionService,$state,$timeout,$window){if(!SessionService.getUser()){$state.go('login');return;}$scope.curATUser = SessionService.getUser();$scope.isLoggedIn = SessionService.getUser()?true:false;$scope.listevents = repostEvents;$scope.currentTrades = currentTrades;$scope.currentTradesCopy = currentTrades;$scope.favorites = favorites;$scope.searchUser = openTrades;repostEvents.forEach(function(ev){ev.day = new Date(ev.day);});$scope.events = repostEvents;});app.config(function($stateProvider){$stateProvider.state('scheduler',{url:'/admin/scheduler',templateUrl:'js/scheduler/scheduler.html',controller:'adminSchedulerController',resolve:{events:function events($http,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsScheduler');$window.location.href = '/admin';}return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});}}});});app.controller('adminSchedulerController',function($rootScope,$state,$scope,$http,AuthService,$window,events,SessionService){if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');}events.forEach(function(ev){ev.day = new Date(ev.day);});$scope.curATUser = SessionService.getUser();$scope.events = events;$scope.isLoggedIn = SessionService.getUser()?true:false;});app.config(function($stateProvider){$stateProvider.state('accounts',{url:'/admin/accounts',templateUrl:'js/accounts/views/accounts.html',controller:'accountsController'});});app.controller('accountsController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$sce,accountService){$scope.isLoggedIn = SessionService.getUser()?true:false;if(!SessionService.getUser()){$state.go('admin');}SessionService.removeAccountusers();$scope.paidRepostAccounts = [];$scope.user = SessionService.getUser();$scope.user.paidRepost.groups = $scope.user.paidRepost.groups?$scope.user.paidRepost.groups:[];$scope.soundcloudLogin = function(){$scope.processing = true;SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudAuthentication',{token:res.oauth_token,password:'test'});}).then(function(res){var scInfo=res.data.user.soundcloud;scInfo.groups = [];scInfo.description = "";scInfo.price = 1;$http.post('/api/database/updateUserAccount',{soundcloudInfo:scInfo}).then(function(user){$scope.processing = false;location.reload();});}).then(null,function(err){console.log(4);console.log(err);$.Zebra_Dialog('Error: Could not log in');$scope.processing = false;});};$scope.addAccounts = function(actions,index){SessionService.addActionsfoAccount(actions,index);$state.go("channelstep1");};$scope.deletePaidRepost = function(index){$.Zebra_Dialog('Do you really want to delete this account?',{'buttons':[{caption:'Yes',callback:function callback(){var postRepost=$scope.paidRepostAccounts[index].userID;accountService.deleteUserAccount(postRepost).then(function(res){$scope.paidRepostAccounts.splice(index,1);});}},{caption:'No',callback:function callback(){}}]});};$scope.updateGroup = function(account){var priceFlag=true;for(var i=$scope.user.paidRepost.length - 1;i >= 0;i--) {if($scope.user.paidRepost[i].price){priceFlag = true;}else {priceFlag = false;break;}}if(!priceFlag){return $.Zebra_Dialog('Price can not be empty.');}$scope.processing = true;$http.post('/api/database/updateGroup',{paidRepost:$scope.user.paidRepost}).then(function(res){$scope.processing = false;SessionService.create(res.data);$scope.user = SessionService.getUser();});};$scope.addItems = function(rowid,index){$("#" + rowid).toggleClass();};$scope.addGroup = function(index,item){$scope.user.paidRepost[index].groups.push('');};$scope.removeItem = function(parentIndex,index,item){$scope.user.paidRepost[parentIndex].groups.splice(index,1);};$scope.updatePaidRepostGroup = function(item,group){for(var i=0;i < $scope.user.paidRepost.length;i++) {if($scope.user.paidRepost[i].id == item.id){$scope.user.paidRepost[i].groups.push(group);}}};$scope.clicked = false;$scope.whiteSlot = [1,2,3,5,6,7,9,10,11,13,14,15,17,18,19,21,22,23];$scope.clickedSlot = function(index){$scope.clicked = true;if($scope.whiteSlot.indexOf(index) > -1){var value=$scope.whiteSlot.indexOf(index);$scope.whiteSlot.splice(value,1);}else {$scope.whiteSlot.push(index);}};$scope.getPaidRepostAccounts = function(){$http.get('/api/submissions/getPaidRepostAccounts').then(function(res){$scope.paidRepostAccounts = res.data;});};$scope.editprice = function(index,userdata){if(userdata.price < 6 || userdata.price == undefined){next = false;$.Zebra_Dialog('Please enter a price (minimum $6).');return;}$scope.processing = true;$scope.user.paidRepost[index].price = userdata.price;$http.post('/api/database/updateGroup',{paidRepost:$scope.user.paidRepost}).then(function(res){$scope.processing = false;SessionService.create(res.data);$scope.user = SessionService.getUser();});};$scope.getPaidRepostAccounts();});app.config(function($stateProvider){$stateProvider.state('artistToolsAnalytics',{url:'/analytics',params:{submission:null},templateUrl:'js/artistTools/Analytics/analytics.html',controller:'artistToolsAnalytics'});});app.controller("artistToolsAnalytics",function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,$auth,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('tid');}$scope.authFacbook = function(id,days){if(id){ //calling for registration !
alert("registering Channel, please refresh after few moments to load analytics data");return $http({method:'POST',url:'/api/analytics/facebook',data:{pageid:id.id}}).then(function(success){$scope.showFacebookPages = false;delete $scope.facebookPages;console.log(success);$scope.authFacbook();},function(error){console.log(error);});}$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/facebook',data:{day_limit:days}}).success(function(success_http){$scope.displayError = false;$scope.daysCallbackFunction = 'authFacbook';$scope.showDayChanger = true;$scope.graph_data = success_http;$scope.enableGraph = true;}).error(function(){FB.login(function(response_token,success){if(!response_token.authResponse)return console.log("User did not authorize fully!");$http({method:'POST',url:'/api/analytics/facebook',data:{access_token:response_token.authResponse.accessToken}}).success(function(response){$scope.facebookPages = response.pages;$scope.showFacebookPages = true;}).error(function(error){alert("Error while registering page :" + error);}); //$scope.accessToken = response_token.accessToken;
},{scope:'pages_show_list,user_likes'});});};$scope.authTwitter = function(acccess_key,days){$scope.showDayChanger = false;$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/twitter',data:{day_limit:days}}).then(function(success){$scope.daysCallbackFunction = 'authTwitter';$scope.showDayChanger = true;$scope.graph_data = success.data;$scope.enableGraph = true;},function(failure){$auth.authenticate('twitter').then(function(success_twitter){$http({method:'POST',url:'/api/analytics/twitter',data:{access_token_key:success_twitter.data.oauth_token,access_token_secret:success_twitter.data.oauth_token_secret,screen_name:success_twitter.data.screen_name}}).then(function(success){$scope.showFollowers = false;$scope.authTwitter();},function(error){console.log(error);});});});};$scope.authInstagram = function(channelId,days){$scope.showDayChanger = false;$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/instagram',data:{day_limit:days}}).then(function(success){$scope.daysCallbackFunction = 'authInstagram';$scope.showDayChanger = true;$scope.graph_data = success.data;$scope.enableGraph = true;},function(failure){$auth.authenticate('instagram').then(function(success){$http({method:'POST',url:'/api/analytics/instagram',data:{access_token:success.access_token}}).then(function(success){$scope.authInstagram();},function(failure){return console.log("<authInstagram>failed when trying to register user" + JSON.stringify(failure));});},function(failure){console.log("failure while authentication of instagram" + JSON.stringify(failure));});});};$scope.authYoutube = function(channelId,days){$scope.showDayChanger = false;if(channelId){ //calling for registration !
alert("registering Channel, please refresh after few moments to load analytics data");return $http({method:'POST',url:'/api/analytics/youtube/stats',data:{register:true,channelId:channelId}}).then(function(success){$scope.showYoutubeChannel = false;delete $scope.youtubeChannel;console.log(success);$scope.authYoutube();},function(error){console.log(error);});}$scope.enableGraph = false;$http({method:'POST',url:'/api/analytics/youtube/stats',data:{day_limit:days}}).success(function(success_http){$scope.displayError = false;$scope.daysCallbackFunction = 'authYoutube';$scope.showDayChanger = true;$scope.graph_data = success_http;$scope.enableGraph = true;}).error(function(){$auth.authenticate('google').then(function(success){$scope.youtubeChannel = success.data;$scope.showYoutubeChannel = true;},function(failure){console.log("failed from authorization server>>>>" + JSON.stringify(failure));});});};$scope.alert = function(data){alert(data);};});app.controller('graphControler',function($scope){ // $scope.data = [{
//     key: "Cumulative Return",
//     values: value_array
// }];
$scope.options = {margin:{top:20},series:[{axis:"y",dataset:"timed",key:"val_0",label:"Analytics data",color:"hsla(88, 48%, 48%, 1)",type:["line"],id:"mySeries0"}],axes:{x:{key:"x",type:"date"}}};$scope.data = {timed:[]};for(var local_data in $scope.graph_data) {$scope.data.timed.push({x:local_data,val_0:$scope.graph_data[local_data]});}for(var i in $scope.data.timed) {$scope.data.timed[i].x = new Date($scope.data.timed[i].x);}});app.config(function($stateProvider){$stateProvider.state('artistTools',{url:'/artistTools',templateUrl:'js/artistTools/ArtistTools/artistTools.html',controller:'ArtistToolsController',abstract:true,resolve:{allowed:function allowed($q,$state,SessionService){var deferred=$q.defer();var user=SessionService.getUser();if(user){deferred.resolve();}else {deferred.reject();window.location.href = '/login';}return deferred.promise;}}}).state('artistToolsProfile',{url:'/artistTools/profile',templateUrl:'js/artistTools/ArtistTools/profile.html',controller:'ArtistToolsController'}).state('artistToolsDownloadGatewayList',{url:'/artistTools/downloadGateway',params:{submission:null},templateUrl:'js/artistTools/ArtistTools/downloadGateway.list.html',controller:'ArtistToolsController'});});app.controller('ArtistToolsController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();if(!SessionService.getUser()){var path=window.location.pathname;if(path == "/artistTools/profile"){$window.localStorage.setItem('returnstate','artistToolsProfile');}else if(path == "/artistTools/downloadGateway"){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayList');}$state.go('login');}else {$window.localStorage.removeItem('returnstate');}var path=window.location.pathname;$scope.isAdminRoute = false;if(path.indexOf("admin/") != -1){$scope.isAdminRoute = true;}else {$scope.isAdminRoute = false;}$scope.linkedAccountData = {};$scope.thirdPartyInfo = $scope.user.thirdPartyInfo?$scope.user.thirdPartyInfo:null;$scope.hasThirdPartyFields = $scope.user.thirdPartyInfo?true:false; /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Apply page end */$scope.gotoSettings = function(){SessionService.addActionsfoAccount('Admin',$scope.user._id);$state.go("basicstep1");}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL){$scope.modal.downloadURL = _downloadURL;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}}; //overlay autofill track start//
$scope.linkedAccounts = [];$scope.autoFillTracks = [];$scope.trackList = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.tracksQueue = [];$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.processing = true;$scope.changeQueueSong();};$scope.showThridPartyBox = function(){$scope.hasThirdPartyFields = true;};$scope.permanentLinks = [];$scope.choseArtist = function(artist){var permanentLink={};$scope.profile.data.permanentLinks.push({url:artist.permalink_url,avatar:artist.avatar_url?artist.avatar_url:'',username:artist.username,id:artist.id,permanentLink:true});};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;if($scope.tracksQueue.length > 0){for(var i=0;i < $scope.tracksQueue.length;i++) {if($scope.user.queue.indexOf($scope.tracksQueue[i]) == -1){$scope.user.queue.push($scope.tracksQueue[i]);}}}else {if($scope.newQueueID != null){$scope.user.queue.push($scope.newQueueID);}}$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.tracksQueue = [];};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;if(track.kind == "playlist"){var tracksArr=track.tracks;angular.forEach(tracksArr,function(t){$scope.newQueueID = t.id;$scope.tracksQueue.push($scope.newQueueID);});}else {$scope.newQueue = track;$scope.newQueueID = track.id;}$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;$scope.loadQueueSongs(); // $window.location.reload();
}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});$('#autoFillTrack').modal('hide');};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.removeQueueSong = function(index){$scope.user.queue.splice(index,1);$scope.saveUser(); //$scope.loadQueueSongs();
};$scope.loadQueueSongs = function(queue){$scope.autoFillTracks = [];$scope.user.queue.forEach(function(songID){SC.get('/tracks/' + songID).then(function(track){$scope.autoFillTracks.push(track);$scope.$digest();},console.log);});};if($scope.user && $scope.user.queue){$scope.loadQueueSongs();} //overlay autofill track end//
$scope.closeModal = function(){$scope.modalInstance.close();};$scope.saveNotifications = function(){$http.put('/api/database/profile/notifications',$scope.profile.data).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();})['catch'](function(res){$.Zebra_Dialog('error saving');});};$scope.editProfileModalInstance = {};$scope.editProfilemodal = {};$scope.openEditProfileModal = {editProfile:function editProfile(field){$scope.profile.field = field;$timeout(function(){$scope.editProfileModalInstance = $uibModal.open({animation:true,templateUrl:'editProfile.html',controller:'ArtistToolsController',scope:$scope});},0);}};$scope.closeEditProfileModal = function(){$scope.showProfileInfo();if($scope.editProfileModalInstance.close){$scope.editProfileModalInstance.close();}};$scope.thankYouModalInstance = {};$scope.thankYouModal = {};$scope.openThankYouModal = {thankYou:function thankYou(submissionID){$scope.thankYouModal.submissionID = submissionID;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'thankYou.html',controller:'OpenThankYouModalController',scope:$scope});}};$scope.closeThankYouModal = function(){$scope.thankYouModalInstance.close();}; /* Init profile */$scope.profile = {};if($stateParams.submission){$scope.openThankYouModal.thankYou($stateParams.submission._id);}$scope.showProfileInfo = function(){$scope.profile.data = SessionService.getUser();if($scope.profile.data.permanentLinks && $scope.profile.data.permanentLinks.length === 0 || !$scope.profile.data.permanentLinks){$scope.profile.data.permanentLinks = [{url:'',avatar:'',username:'',id:-1,permanentLink:true}];};$scope.profile.isAvailable = {};$scope.profile.isAvailable.email = $scope.profile.data.email?true:false;$scope.profile.isAvailable.password = $scope.profile.data.password?true:false;$scope.profile.isAvailable.soundcloud = $scope.profile.data.soundcloud?true:false;$scope.profile.data.password = '';};$scope.saveProfileInfo = function(){$scope.message = {value:'',visible:false};var permanentLinks=$scope.profile.data.permanentLinks.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var sendObj={name:'',password:'',email:'',permanentLinks:JSON.stringify(permanentLinks)};if($scope.profile.field === 'name'){sendObj.name = $scope.profile.data.name;}else if($scope.profile.field === 'password'){sendObj.password = $scope.profile.data.password;}else if($scope.profile.field === 'email'){sendObj.email = $scope.profile.data.email;}$scope.processing = true;ArtistToolsService.saveProfileInfo(sendObj).then(function(res){$scope.processing = false;if(res.data === 'Email Error'){$scope.message = {value:'Email already exists!',visible:true};return;}if(permanentLinks != ""){$scope.linkUrl = "";}SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.closeEditProfileModal();})['catch'](function(res){$scope.processing = false;$.Zebra_Dialog('error saving');});}; // remove linked accounts
$scope.removeLinkedAccount = function(account){$rootScope.userlinkedAccounts.splice($rootScope.userlinkedAccounts.indexOf(account),1);$http.put('/api/database/networkaccount',$rootScope.userlinkedAccounts).then(function(res){$rootScope.userlinkedAccounts = res.data.channels;$rootScope.userlinkedAccounts = res.data.channels;});};$scope.removePermanentLink = function(index){$scope.profile.data.permanentLinks.splice(index,1);$scope.saveProfileInfo();};$scope.hidebutton = false;$scope.addPermanentLink = function(){if($scope.profile.data.permanentLinks.length >= 2 && !$scope.user.admin){$scope.hidebutton = true;}if($scope.profile.data.permanentLinks.length > 2 && !$scope.user.admin){return false;}$scope.profile.data.permanentLinks.push({url:'',avatar:'',username:'',id:-1,permanentLink:true});};$scope.permanentLinkURLChange = function(){var permanentLink={};$scope.processing = true;ArtistToolsService.resolveData({url:$scope.linkUrl}).then(function(res){$scope.profile.data.permanentLinks.push({url:res.data.permalink_url,avatar:res.data.avatar_url?res.data.avatar_url:'',username:res.data.username,id:res.data.id,permanentLink:true});$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.saveSoundCloudAccountInfo = function(){SC.connect().then(saveInfo).then(handleResponse)['catch'](handleError);function saveInfo(res){return ArtistToolsService.saveSoundCloudAccountInfo({token:res.oauth_token});}function handleResponse(res){$scope.processing = false;if(res.status === 200 && res.data.success === true){SessionService.create(res.data.data);$scope.profile.data = res.data.data;$scope.profile.isAvailable.soundcloud = true;}else {$scope.message = {value:'You already have an account with this soundcloud username',visible:true};}$scope.$apply();}function handleError(err){$scope.processing = false;}};$scope.getDownloadList = function(){ArtistToolsService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(err){console.log(err);}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;ArtistToolsService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}};$scope.soundcloudLogin = function(){SC.connect().then(function(res){if(res.oauth_token == SessionService.getUser().soundcloud.token){throw new Error('already added');}else {$scope.processing = true;$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudAuthentication',{token:res.oauth_token,password:'test'});}}).then(function(res){var linkedAccountID=res.data.user._id;$http.post("/api/database/networkaccount",{userID:$scope.user._id,linkedAccountID:linkedAccountID}).then(function(res){$.Zebra_Dialog(res.data.message);$rootScope.userlinkedAccounts = res.data.data.channels;setTimeout(function(){window.location.reload();},1000);});}).then(null,function(err){console.log(err);if(err.message == 'already added'){$scope.processing = false;window.localStorage.setItem('samelinkedaccount',true);window.location.reload();}});};if(window.localStorage.getItem('samelinkedaccount')){window.localStorage.removeItem('samelinkedaccount');$scope.soundcloudLogin();}$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.getUserNetwork();$scope.verifyBrowser();}).controller('OpenThankYouModalController',function($scope){});app.service('ArtistToolsService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}function saveProfileInfo(data){return $http.post('/api/database/profile/edit',data);}function saveSoundCloudAccountInfo(data){return $http.post('/api/database/profile/soundcloud',data);}function getTrackListFromSoundcloud(data){return $http.post('/api/database/tracks/list',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,saveProfileInfo:saveProfileInfo,deleteDownloadGateway:deleteDownloadGateway,saveSoundCloudAccountInfo:saveSoundCloudAccountInfo,getTrackListFromSoundcloud:getTrackListFromSoundcloud};}]);app.config(function($stateProvider){$stateProvider.state('SCResolve',{url:'/artistTools/scresolve',templateUrl:'js/artistTools/SCResolve/SCResolve.html',controller:'SCResolveController'});});app.controller('SCResolveController',function($scope,$http){$scope.response = {};$scope.resolve = function(){console.log($scope.url);$http.post('/api/soundcloud/resolve',{url:$scope.url}).then(function(res){$scope.response = JSON.stringify(res.data,null,"\t");console.log($scope.response);}).then(null,function(err){$scope.response = JSON.stringify(err,null,"\t");});};});app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayEdit',{url:'/artistTools/downloadGateway/edit/:gatewayID',templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayEdit');$window.localStorage.setItem('tid',$stateParams.gatewayID);$window.location.href = '/login';}return true;}}}).state('artistToolsDownloadGatewayNew',{url:'/artistTools/downloadGateway/new',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/downloadGateway.html',controller:'ArtistToolsDownloadGatewayController',resolve:{isLoggedIn:function isLoggedIn($stateParams,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayNew');$window.location.href = '/login';}return true;}}});});app.controller('ArtistToolsDownloadGatewayController',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,AdminDLGateService){ /* Init Download Gateway form data */$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('tid');}$scope.curATUser = SessionService.getUser();});app.config(function($stateProvider){$stateProvider.state('artistToolsDownloadGatewayPreview',{url:'/artistTools/downloadGateway/preview',params:{submission:null},templateUrl:'js/artistTools/downloadGateway/preview.html',controller:'ArtistToolsPreviewController'});});app.controller("ArtistToolsPreviewController",function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,DownloadTrackService){});app.config(function($stateProvider){$stateProvider.state('reForReInteraction',{url:'/artistTools/trade/:user1Name/:user2Name',templateUrl:'js/artistTools/reForRe/reForReInteraction.html',controller:'ReForReInteractionController',resolve:{login:function login($rootScope,$http,$stateParams,$window,SessionService,$state){if($window.localStorage.getItem('isAdminAuthenticate')){$window.location.href = '/admin/trade/' + $stateParams.user1Name + '/' + $stateParams.user2Name;}else {if(SessionService.getUser()){return $rootScope.getUserNetwork().then(function(){var repName=SessionService.getUser().soundcloud.pseudoname;if(repName == $stateParams.user1Name || repName == $stateParams.user2Name){return 'ok';}else {var found=$rootScope.userlinkedAccounts.find(function(user){var repName=user.soundcloud.pseudoname;return repName == $stateParams.user1Name || repName == $stateParams.user2Name;});if(found){$rootScope.changeUserAdmin(found);}else {if($window.localStorage.getItem('returnstate') == 'reForReInteraction'){$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('user1Name');$window.localStorage.removeItem('user2Name');$state.go('artistToolsScheduler');}else {$window.localStorage.setItem('returnstate','reForReInteraction');$window.localStorage.setItem('user1Name',$stateParams.user1Name);$window.localStorage.setItem('user2Name',$stateParams.user2Name);SessionService.deleteUser();$window.location.href = '/login';}}}}).then(null,console.log);}else {$window.localStorage.setItem('returnstate','reForReInteraction');$window.localStorage.setItem('user1Name',$stateParams.user1Name);$window.localStorage.setItem('user2Name',$stateParams.user2Name);SessionService.deleteUser();$window.location.href = '/login';}}},trade:function trade($rootScope,$http,$stateParams,$window,SessionService){return $http.get('/api/trades/withUsers/' + $stateParams.user1Name + '/' + $stateParams.user2Name).then(function(res){var user=SessionService.getUser('subAdmin');var trade=res.data;trade.p1.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p1.user);trade.p2.user.pseudoAvailableSlots = createPseudoAvailableSlots(trade.p2.user);trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;return trade;}).then(null,console.log);},events:function events($http,$window,SessionService){return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},p1Events:function p1Events($http,trade){return $http.get('/api/events/forUser/' + trade.p1.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});},p2Events:function p2Events($http,trade){return $http.get('/api/events/forUser/' + trade.p2.user.soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting other's events events");return;});}}});});app.controller("ReForReInteractionController",function($rootScope,$state,$scope,$http,AuthService,$window,SessionService,socket,$stateParams,trade,p1Events,p2Events){$scope.user = SessionService.getUser();if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('user1ID');$window.localStorage.removeItem('user2ID');}$scope.trade = trade;$scope.msgHistory = trade.messages; // $scope.currentTrades = currentTrades;
$scope.p1Events = p1Events;$scope.p2Events = p2Events;$scope.stateParams = $stateParams;});'use strict';app.factory('socket',function($rootScope){var socket;return {on:function on(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args);});});},emit:function emit(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},getMessage:function getMessage(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){callback.apply(socket,args);}});});},connect:function connect(){socket = io.connect();},disconnect:function disconnect(){socket.disconnect();}};});app.config(function($stateProvider){$stateProvider.state('reForReLists',{url:'/artistTools/reForReLists',templateUrl:'js/artistTools/reForReLists/reForReLists.html',controller:'ReForReListsController',resolve:{currentTrades:function currentTrades($http,SessionService){var user=SessionService.getUser();if(user){return $http.get('/api/trades/withUser/' + user._id).then(function(res){var trades=res.data;trades = trades.filter(function(trade){return !!trade.p1.user && !!trade.p2.user;});console.log(trades);trades.forEach(function(trade){trade.other = trade.p1.user._id == user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == user._id?trade.p1:trade.p2;});return trades;});}else {return [];}},favorites:function favorites($http,SessionService){var user=SessionService.getUser();if(user){return $http.get('/api/trades/doneWithUser/' + user._id).then(function(res){var trades=res.data;trades = trades.filter(function(trade){return !!trade.p1.user && !!trade.p2.user;});var favs=trades.map(function(trade){return trade.p1.user._id == user._id?trade.p2.user:trade.p1.user;});var favsNoDups=[];favs.forEach(function(favUser){var ok=true;favsNoDups.forEach(function(noDupUser){if(favUser._id == noDupUser._id)ok = false;});if(ok)favsNoDups.push(favUser);});return favsNoDups;}).then(null,console.log);}else {return [];}},openTrades:function openTrades($http,SessionService){var user=SessionService.getUser();if(user){var minFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers / 2):0;var maxFollower=user.soundcloud.followers && user.soundcloud.followers > 0?parseInt(user.soundcloud.followers * 1.2):1000;return $http.post('/api/users/bySCURL/',{url:'',minFollower:minFollower,maxFollower:maxFollower,recordRange:{skip:0,limit:12}}).then(function(res){var users=res.data;return users;}).then(null,console.log);}else {return [];}},repostEvents:function repostEvents($http,SessionService){var user=SessionService.getUser();if(user){return $http.get("/api/events/getRepostEvents/" + user._id).then(function(repostEvent){var repostEvent=repostEvent.data;return repostEvent;});}else {return [];}}}});});app.controller("ReForReListsController",function($scope,$rootScope,currentTrades,favorites,openTrades,repostEvents,$http,SessionService,$state,$timeout,$window){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','reForReLists');$state.go('login');return;}$scope.listevents = [];$scope.user = SessionService.getUser();$scope.currentTrades = currentTrades;$scope.currentTradesCopy = currentTrades;$scope.favorites = favorites;$scope.searchUser = openTrades;repostEvents.forEach(function(ev){ev.day = new Date(ev.trackInfo.day);});$scope.events = repostEvents;angular.forEach(repostEvents,function(e){if(getshortdate(new Date(e.trackInfo.day)) >= getshortdate(new Date())){$scope.listevents.push(e);}});$scope.manageSlots = false;for(var i=0;i < $scope.listevents.length;i++) {if($scope.listevents[i].trackInfo.trackURL == undefined){$scope.manageSlots = true;return;}}function getshortdate(d){var YYYY=d.getFullYear();var M=d.getMonth() + 1;var D=d.getDate();var MM=M < 10?'0' + M:M;var DD=D < 10?'0' + D:D;var result=MM + "/" + DD + "/" + YYYY;return result;}});app.factory('BroadcastFactory',function($http){return {submitFacebookUserPost:function submitFacebookUserPost(postID,data){return $http.post('/api/broadcast/' + postID + '/facebookuser',data);},submitFacebookPagePost:function submitFacebookPagePost(postID,data){return $http.post('/api/broadcast/' + postID + '/facebookpage',data);},submitTwitterPost:function submitTwitterPost(postID,data){return $http.post('/api/broadcast/' + postID + '/twitter',data);},submitYouTubePost:function submitYouTubePost(postID,data){return $http.post('/api/broadcast/' + postID + '/youtube',data);},submitSoundCloudPost:function submitSoundCloudPost(postID,data){return $http.post('/api/broadcast/' + postID + '/soundcloud',data);},submitInstagramPost:function submitInstagramPost(postID,data){return $http.post('/api/broadcast/' + postID + '/instagram',data);}};});app.factory('StorageFactory',function($http){return {uploadFile:function uploadFile(data){var fd=new FormData();fd.append('file',data);return $http({method:'POST',url:'/api/aws',headers:{'Content-Type':undefined},tranformRequest:angular.identify,data:fd}).then(function(response){return response.data;});},addPost:function addPost(data){return $http({method:'POST',url:'/api/posts',data:data}).then(function(response){return response.data;});},updatePost:function updatePost(post){return $http({method:'PUT',url:'/api/posts/' + post._id,data:{editedPost:post}}).then(function(response){return response.data;});},updateReleaseStatus:function updateReleaseStatus(post){return $http({method:'PUT',url:'/api/posts/' + post._id + '/status'}).then(function(response){return response.data;});},fetchAll:function fetchAll(){return $http({method:'GET',url:'/api/posts'}).then(function(response){return response.data;});},getPostForEdit:function getPostForEdit(post){return $http({method:'GET',url:'/api/posts/' + post.id}).then(function(response){return response.data;});},deletePost:function deletePost(postID){return $http({method:'DELETE',url:'/api/posts/' + postID}).then(function(response){return response.data;});},deleteSingleFile:function deleteSingleFile(keyName){return $http({method:'DELETE',url:'/api/aws/' + keyName}).then(function(response){return response.data;});},deleteBothFiles:function deleteBothFiles(postID){return $http({method:'DELETE',url:'/api/aws/' + postID + '/both'}).then(function(response){return response.data;});},broadcastPost:function broadcastPost(postID){return $http({method:'GET',url:'/api/posts/' + postID + '/broadcast'}).then(function(response){return response.data;});},validateToken:function validateToken(userID,platform){return $http({method:'GET',url:'/api/posts/checkTokenValidity/' + userID + '/' + platform}).then(function(response){return response.data;});}};});app.config(function($stateProvider){$stateProvider.state('releaser',{url:'/artistTools/releaser',templateUrl:'js/artistTools/releaser/releaseList.html',controller:'ReleaserController',resolve:{posts:function posts(){return [];}}}).state('releaserNew',{url:'/artistTools/releaser/new',templateUrl:'js/artistTools/releaser/releaser.html',controller:'ReleaserController',resolve:{posts:function posts(){return [];}}}).state('releaserEdit',{url:'/artistTools/releaser/edit/:releaseID',templateUrl:'js/artistTools/releaser/releaser.html',controller:'ReleaserController',resolve:{posts:function posts(){return [];}}});});app.controller('ReleaserController',function($rootScope,$scope,posts,StorageFactory,BroadcastFactory,$state,SessionService,$stateParams,$window,$http){$scope.user = SessionService.getUser();if(!$scope.user){$state.go('login');return;}var date=new Date();$scope.currentDate = date.toISOString().slice(0,10).replace(/-/g,"-");function getDayClass(data){var date=data.date,mode=data.mode;if(mode === 'day'){var dayToCheck=new Date(date).setHours(0,0,0,0);for(var i=0;i < $scope.events.length;i++) {var currentDay=new Date($scope.events[i].date).setHours(0,0,0,0);if(dayToCheck === currentDay){return $scope.events[i].status;}}}return '';}$scope.inlineOptions = {customClass:getDayClass,showWeeks:true};$scope.dateOptions = {startingDay:1};$scope.open1 = function(){$scope.popup1.opened = true;};$scope.popup1 = {opened:false};$scope.postData = {};$scope.audio = {};$scope.video = {};$scope.image = {};var oldPostData={};$scope.posts = posts;var audioSelectionChanged=function audioSelectionChanged(){if($scope.audio.file){return $scope.audio.file.name && oldPostData.awsAudioKeyName !== $scope.audio.file.name;}};var videoSelectionChanged=function videoSelectionChanged(){if($scope.video.file){return $scope.video.file.name && oldPostData.awsVideoKeyName !== $scope.video.file.name;}};var imageSelectionChanged=function imageSelectionChanged(){if($scope.image.file){return $scope.image.file.name && oldPostData.awsImageKeyName !== $scope.image.file.name;}};$scope.savePost = function(){if(!$scope.postData._id){return addPost();} // audio ,video and image are being changed
else if(audioSelectionChanged() && videoSelectionChanged()){$scope.processing = true;return StorageFactory.uploadFile($scope.audio.file).then(function(res){$scope.postData.awsAudioKeyName = res.Key;return StorageFactory.uploadFile($scope.video.file);}).then(function(res){$scope.postData.awsVideoKeyName = res.Key;return StorageFactory.uploadFile($scope.image.file);}).then(function(res){$scope.postData.awsImageKeyName = res.Key;return StorageFactory.updatePost($scope.postData);$state.go('releaser');}).then(function(post){$state.reload();})['catch'](function(error){$.Zebra_Dialog(error,{width:600});});} // only audio is being changed
else if(audioSelectionChanged()){$scope.processing = true;return StorageFactory.uploadFile($scope.audio.file).then(function(res){$scope.postData.awsAudioKeyName = res.Key;return StorageFactory.updatePost($scope.postData);$.Zebra_Dialog('Updated Successfully');$state.go('releaser');}).then(function(){$scope.processing = false;$state.reload();})['catch'](function(error){$.Zebra_Dialog(error,{width:600});});} // only video is being changed
else if(videoSelectionChanged()){$scope.processing = true;return StorageFactory.uploadFile($scope.video.file).then(function(res){$scope.postData.awsVideoKeyName = res.Key;return StorageFactory.updatePost($scope.postData);$state.go('releaser');}).then(function(){$scope.processing = false;$state.reload();})['catch'](function(error){$.Zebra_Dialog(error,{width:600});});} // neither audio nor video is changing
else { // var errMsg = validateForm();
// if(errMsg == ""){
return StorageFactory.updatePost($scope.postData).then(function(post){$state.go('releaser');})['catch'](function(error){$.Zebra_Dialog(error,{width:600});});}};var addPost=function addPost(){var errMsg=validateForm();if(errMsg == ""){$scope.processing = true;$scope.postData.userID = $scope.user._id;StorageFactory.uploadFile($scope.audio.file).then(function(res){$scope.postData.awsAudioKeyName = res.key;return StorageFactory.uploadFile($scope.video.file);}).then(function(res){$scope.postData.awsVideoKeyName = res.key;return StorageFactory.uploadFile($scope.image.file);}).then(function(res){$scope.postData.awsImageKeyName = res.key;return StorageFactory.addPost($scope.postData);}).then(function(){$scope.processing = false;$state.go('releaser');})['catch'](function(error){$scope.processing = false;$.Zebra_Dialog(error,{width:600});});}else {$.Zebra_Dialog(errMsg,{width:600});}};var validateForm=function validateForm(){var isSCPanelOpen=$("#pnlSoundCloud").hasClass("in");var isFBPanelOpen=$("#pnlFacebook").hasClass("in");var isTWPanelOpen=$("#pnlTwitter").hasClass("in");var isYTPanelOpen=$("#pnlYoutube").hasClass("in");var message="";if($scope.postData.postTitle == undefined){message += "Post title is required. <br />";}if($scope.postData.postDate == undefined){message += "Post date is required. <br />";}if(!isSCPanelOpen && !isFBPanelOpen && !isTWPanelOpen && !isYTPanelOpen){message += "Please enter atleast one of the social site posting information. <br />";}else {if(isSCPanelOpen){if($scope.postData.awsAudioKeyName == undefined && $scope.audio.file == undefined || $scope.postData.soundCloudTitle == undefined || $scope.postData.soundCloudDescription == undefined){message += "All Soundcloud posting informations are required. <br />";}}if(isFBPanelOpen){if($scope.postData.facebookPost == undefined || $scope.facebookCommentOn == "page" && $scope.postData.facebookPageUrl == undefined){message += "All Facebook posting informations are required. <br />";}}if(isTWPanelOpen){if($scope.postData.twitterPost == undefined){message += "All Twitter posting informations are required. <br />";}}if(isYTPanelOpen){if($scope.postData.awsVideoKeyName == undefined && $scope.video.file == undefined || $scope.postData.youTubeTitle == undefined || $scope.postData.youTubeDescription == undefined){message += "All Youtube posting informations are required. <br />";}}}return message;};$scope.deletePost = function(index){var postId=$scope.posts[index]._id;StorageFactory.deletePost(postId).then(function(){$state.reload();})['catch'](function(error){$.Zebra_Dialog(error,{width:600});});};$scope.editPost = function(post){$scope.postData = post;oldPostData = post;};$scope.getPost = function(){$scope.posts = [];StorageFactory.fetchAll().then(function(res){$scope.posts = res;});}; /* Method for getting post in case of edit */$scope.getPostInfo = function(releaseID){$scope.pagecomment = false;StorageFactory.getPostForEdit({id:releaseID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.postData = res;oldPostData = res;if($scope.postData.facebookPageUrl){$scope.pagecomment = true;$scope.facebookCommentOn = "page";}else {$scope.facebookCommentOn = "user";}}function handleError(res){}$scope.processing = false;};$scope.checkIfEdit = function(){if($stateParams.releaseID){$scope.getPostInfo($stateParams.releaseID);}};$scope.broadcastPost = function(post){var isValid=true;var message="It seems you did not authenticate to the social sites before releasing the post. We did not found followin missing tokens - <br />";if(post.facebookPost != "" && !$scope.user.facebook && !$scope.user.facebook.token){isValid = false;message += "Facebook token is missing. <br />";}if(post.twitterPost != "" && !$scope.user.twitter && !$scope.user.twitter.token){isValid = false;message += "Twitter token is missing. <br />";}if(post.awsVideoKeyName != "" && !$scope.user.google && !$scope.user.google.token){isValid = false;message += "Google token is missing. <br />";}message += "Please use the links to below Add New Post button to get the social site auth tokens.";if(isValid){$scope.processing = true;BroadcastFactory[post.facebookPageUrl?'submitFacebookPagePost':'submitFacebookUserPost'](post._id,{token:$scope.user.facebook.token,facebookPost:post.facebookPost,facebookPageUrl:post.facebookPageUrl,facebookPageInfo:post.facebookPageInfo}).then(function(res){if($scope.user.twitter.token){BroadcastFactory.submitTwitterPost(post._id,{token:$scope.user.twitter.token,tokenSecret:$scope.user.twitter.tokenSecret,twitterPost:post.twitterPost});}return false;}).then(function(res){if($scope.user.google.token){return BroadcastFactory.submitYouTubePost(post._id,{token:$scope.user.google.token,awsVideoKeyName:post.awsVideoKeyName});}return false;}).then(function(res){return BroadcastFactory.submitSoundCloudPost(post._id,{awsAudioKeyName:post.awsAudioKeyName});}).then(function(res){if(post.awsAudioKeyName){SC.initialize({client_id:'8002f0f8326d869668523d8e45a53b90',oauth_token:$scope.user.soundcloud.token});var trackFile=new File(res.data.Body.data,post.awsAudioKeyName,{type:'audio/mp3'});SC.upload({file:trackFile,title:post.soundCloudTitle,description:post.soundCloudDescription}).then(function(res){StorageFactory.updateReleaseStatus(post).then(function(res){$scope.getPost();$scope.processing = false;});})['catch'](function(error){$scope.processing = false;console.log('error',error);});}return false;}).then(function(res){if(post.awsImageKeyName){return BroadcastFactory.submitInstagramPost(post._id,{token:$scope.user.instagram.token,instagramPost:post.instagramPost});}else {StorageFactory.updateReleaseStatus(post).then(function(res){$scope.getPost();$scope.processing = false;});}});}else {$.Zebra_Dialog(message,{width:600});}}; // CLOSES $scope.broadcastPost
$scope.socialLogin = function(url){$window.location = url;};$scope.checkFBToken = function(){if($scope.user.facebook && $scope.user.facebook.token != ""){StorageFactory.validateToken($scope.user._id,'facebook').then(function(res){if(res){SessionService.create(res.data);$scope.user = SessionService.getUser();}});}};$scope.checkGoogleToken = function(){if($scope.user.google && $scope.user.google.token != ""){StorageFactory.validateToken($scope.user._id,'google').then(function(res){if(res){SessionService.create(res.data);$scope.user = SessionService.getUser();}});}};$scope.getUserNetwork(); //$scope.checkFBToken();
//$scope.checkGoogleToken();
}); // CLOSES app.controller
app.config(function($stateProvider){$stateProvider.state('artistToolsScheduler',{url:'/artistTools/scheduler',templateUrl:'js/artistTools/scheduler/scheduler.html',controller:'ATSchedulerController',resolve:{events:function events($http,$window,SessionService){if(!SessionService.getUser()){$window.localStorage.setItem('returnstate','artistToolsScheduler');$window.location.href = '/login';}return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){return res.data;}).then(null,function(err){$.Zebra_Dialog("error getting your events");return;});}}});});app.controller('ATSchedulerController',function($rootScope,$state,$scope,$http,AuthService,$window,events,SessionService){if(!SessionService.getUser()){$state.go('login');}else {$window.localStorage.removeItem('returnstate');}events.forEach(function(ev){ev.day = new Date(ev.day);});$scope.events = events;});app.config(function($stateProvider){$stateProvider.state('basicstep1',{url:'/admin/basic/step1',templateUrl:'js/accountsStep/views/basicstep1.html',controller:'accountSettingController'});$stateProvider.state('basicstep2',{url:'/admin/basic/step2',templateUrl:'js/accountsStep/views/basicstep2.html',controller:'accountSettingController'});$stateProvider.state('basicstep3',{url:'/admin/basic/step3',templateUrl:'js/accountsStep/views/basicstep3.html',controller:'accountSettingController'});$stateProvider.state('basicstep4',{url:'/admin/basic/step4',templateUrl:'js/accountsStep/views/basicstep4.html',controller:'accountSettingController'});$stateProvider.state('basicstep5',{url:'/admin/basic/step5',templateUrl:'js/accountsStep/views/basicstep5.html',controller:'accountSettingController'});$stateProvider.state('channelstep1',{url:'/admin/channel/step1',templateUrl:'js/accountsStep/views/channelstep1.html',controller:'accountSettingController'});$stateProvider.state('channelstep2',{url:'/admin/channel/step2',templateUrl:'js/accountsStep/views/channelstep2.html',controller:'accountSettingController'});$stateProvider.state('channelstep3',{url:'/admin/channel/step3',templateUrl:'js/accountsStep/views/channelstep3.html',controller:'accountSettingController'});$stateProvider.state('channelstep4',{url:'/admin/channel/step4',templateUrl:'js/accountsStep/views/channelstep4.html',controller:'accountSettingController'});$stateProvider.state('channelstep5',{url:'/admin/channel/step5',templateUrl:'js/accountsStep/views/channelstep5.html',controller:'accountSettingController'});$stateProvider.state('channelstep6',{url:'/admin/channel/step6',templateUrl:'js/accountsStep/views/channelstep6.html',controller:'accountSettingController'});$stateProvider.state('channelstep7',{url:'/admin/channel/step7',templateUrl:'js/accountsStep/views/channelstep7.html',controller:'accountSettingController'});});app.controller('accountSettingController',function($rootScope,$state,$scope,$http,$window,AccountSettingServices,SessionService){$scope.defaultSubmitPage = {"button":{"text":"Submit","style":{"fontColor":"rgba(0,0,0,1)","bgColor":"rgba(255,255,255,1)","fontSize":15,"border":1,"borderRadius":10}},"inputFields":{"style":{"borderColor":"rgba(179,179,179,1)","borderRadius":10,"border":1}},"subHeading":{"text":"Our mission is to connect musicians to their audiences. By submitting your track, you receive the opportunity to be reviewed by countless industry leading music promoters and independent labels. Although we can’t guarantee your track will be accepted, we can ensure that every submission will get heard and considered.","style":{"fontFamily":"'Open Sans', sans-serif","fontColor":"rgba(120,120,120,1)","fontSize":15}},"heading":{"text":"Submission","style":{"fontSize":32,"fontFamily":"'Open Sans', sans-serif","fontColor":"rgba(120,120,120,1)"}},"logo":{"align":"center","images":""},"background":{"blur":40,"images":""},"layout":'4'};$scope.loadFontNames = function(){$scope.repHeadFont = $scope.AccountsStepData.postData.heading.style.fontFamily?$scope.AccountsStepData.postData.heading.style.fontFamily.substring(1,$scope.AccountsStepData.postData.heading.style.fontFamily.indexOf("',")):"";$scope.repSubheadFont = $scope.AccountsStepData.postData.subHeading.style.fontFamily?$scope.AccountsStepData.postData.subHeading.style.fontFamily.substring(1,$scope.AccountsStepData.postData.subHeading.style.fontFamily.indexOf("',")):"";$scope.premHeadFont = $scope.AccountsStepData.premier.heading.style.fontFamily?$scope.AccountsStepData.premier.heading.style.fontFamily.substring(1,$scope.AccountsStepData.premier.heading.style.fontFamily.indexOf("',")):"";$scope.premSubheadFont = $scope.AccountsStepData.premier.subHeading.style.fontFamily?$scope.AccountsStepData.premier.subHeading.style.fontFamily.substring(1,$scope.AccountsStepData.premier.subHeading.style.fontFamily.indexOf("',")):"";};$scope.isLoggedIn = SessionService.getUser()?true:false;if(!$scope.isLoggedIn){$state.go('admin');}$scope.user = SessionService.getUser();$scope.showTestEmailModal = false;$scope.errorverification = false;$scope.verified = false;$scope.waitoneminute = false;console.log('user',$scope.user);var formActions=SessionService.getActionsfoAccount()?SessionService.getActionsfoAccount():0;if(!formActions && formActions != "Add" && formActions != "Edit"){$scope.user = SessionService.getUser();if($scope.user && $scope.user.role == 'admin'){$rootScope.enableNavigation = $scope.user.paidRepost.length > 0?false:true;}$scope.showTestEmailModal = false;$scope.errorverification = false;$scope.verified = false;$scope.waitoneminute = false; //console.log('user',$scope.user);
var formActions=SessionService.getActionsfoAccount()?SessionService.getActionsfoAccount():0;if(!formActions && formActions != "Add" && formActions != "Edit"){$scope.user = SessionService.getUser();if($state.current.url == "/admin/basic/step1"){if($scope.AccountsStepData == undefined){$scope.AccountsStepData = SessionService.getUser();$scope.AccountsStepData.formActions = formActions;}else {$scope.AccountsStepData = SessionService.getAdminUser();$scope.AccountsStepData.formActions = formActions;}$scope.AccountsStepData.newpassword = "";if(SessionService.getAdminUser() == undefined && $scope.AccountsStepData.submissionData == undefined){SessionService.createAdminUser($scope.AccountsStepData);}if($scope.AccountsStepData.profilePicture == undefined || $scope.AccountsStepData.profilePicture == ""){$scope.AccountsStepData.profilePicture = "https://i1.sndcdn.com/avatars-000223599301-0ns076-t500x500.jpg";}}else {$scope.AccountsStepData = SessionService.getAdminUser();$scope.AccountsStepData.formActions = '';$scope.AccountsStepData.newpassword = "";}}else if(formActions == "Admin"){$scope.AccountsStepData = {};if($state.current.url == "/admin/basic/step1"){$scope.AccountsStepData = SessionService.getUser();$scope.AccountsStepData.formActions = formActions;}else {$scope.AccountsStepData = SessionService.getAdminUser();$scope.AccountsStepData.formActions = formActions;}$scope.AccountsStepData.newpassword = "";if(SessionService.getAdminUser() == undefined && $scope.AccountsStepData.submissionData == undefined){SessionService.createAdminUser($scope.AccountsStepData);}if($scope.AccountsStepData.profilePicture == undefined || $scope.AccountsStepData.profilePicture == ""){$scope.AccountsStepData.profilePicture = "https://i1.sndcdn.com/avatars-000223599301-0ns076-t500x500.jpg";}}else {$scope.AccountsStepData = SessionService.getAdminUser();$scope.AccountsStepData.formActions = '';$scope.AccountsStepData.newpassword = "";}}else if(formActions == "Admin"){$scope.AccountsStepData = {};if($state.current.url == "/admin/basic/step1"){$scope.AccountsStepData = SessionService.getUser();$scope.AccountsStepData.formActions = formActions;}else $scope.AccountsStepData = SessionService.getAdminUser();}else if(formActions == "Add"){$scope.AccountsStepData = SessionService.getAdminUser()?SessionService.getAdminUser():{};$scope.AccountsStepData.postData = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.AccountsStepData.premier = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.loadFontNames();$scope.AccountsStepData.postData.heading.text = "Submission for Repost";$scope.AccountsStepData.postData.type = "submit";$scope.AccountsStepData.premier.heading.text = "Submission for Premiere";$scope.AccountsStepData.premier.type = "premiere";$scope.AccountsStepData.formActions = formActions;}else if(formActions == "Edit"){if($scope.AccountsStepData == undefined)$scope.AccountsStepData = {};$scope.AccountsStepData.formActions = formActions;var user_id=SessionService.getActionsfoAccountIndex();if(user_id != undefined && $scope.AccountsStepData.submissionData == undefined && $state.current.url == "/admin/channel/step1"){var userId="";$http.get('/api/submissions/getAccountsByIndex/' + user_id).then(function(res){$scope.AccountsStepData.submissionData = res.data;$scope.AccountsStepData.submissionData.submissionUrl = res.data.submissionUrl.replace(/ /g,'');$scope.AccountsStepData.submissionData.submissionUrl = $scope.AccountsStepData.submissionData.submissionUrl.replace('/custom','');$scope.AccountsStepData.submissionData.premierUrl = res.data.premierUrl.replace(/ /g,'');$scope.AccountsStepData.submissionData.premierUrl = $scope.AccountsStepData.submissionData.premierUrl.replace('/custom','');$scope.AccountsStepData.submissionData.username = res.data.user.username;$scope.AccountsStepData.submissionData.avatarURL = res.data.user.avatarURL;$scope.AccountsStepData.submissionData.followers = res.data.user.followers;$scope.AccountsStepData.submissionData.userID = res.data.userID;userId = res.data.userID;$scope.defaultSubmitPage.userID = userId;$scope.AccountsStepData.repostSettings = res.data.repostSettings;$scope.AccountsStepData.price = res.data.price;$scope.AccountsStepData.description = res.data.description;$scope.AccountsStepData.astzOffset = res.data.astzOffset;if(res.data.availableSlots){$scope.AccountsStepData.pseudoAvailableSlots = createPseudoAvailableSlots(res.data);}else {$scope.AccountsStepData.pseudoAvailableSlots = {'sunday':[1,4,8,11,14,17,20],'monday':[1,4,8,11,14,17,20],'tuesday':[1,4,8,11,14,17,20],'wednesday':[1,4,8,11,14,17,20],'thursday':[1,4,8,11,14,17,20],'friday':[1,4,8,11,14,17,20],'saturday':[1,4,8,11,14,17,20]};}$http.get('/api/users/byId/' + userId).then(function(response){if(response.data){ // $scope.AccountsStepData.repostSettings = response.data.repostSettings;
$scope.AccountsStepData.queue = response.data.queue;$scope.AccountsStepData.repostSettings = response.data.repostSettings;$scope.AccountsStepData.astzOffset = response.data.astzOffset;if(response.data.availableSlots){$scope.AccountsStepData.pseudoAvailableSlots = createPseudoAvailableSlots(response.data);}else {$scope.AccountsStepData.pseudoAvailableSlots = {'sunday':[1,4,8,11,14,17,20],'monday':[1,4,8,11,14,17,20],'tuesday':[1,4,8,11,14,17,20],'wednesday':[1,4,8,11,14,17,20],'thursday':[1,4,8,11,14,17,20],'friday':[1,4,8,11,14,17,20],'saturday':[1,4,8,11,14,17,20]};}}$http.get('/api/customsubmissions/getCustomSubmissionAll/' + userId).then(function(response){var i=-1;var nextFun=function nextFun(){i++;if(i < response.data.length){var loopdata=response.data[i];if(loopdata.type == "submit"){$scope.AccountsStepData.postData = loopdata;}else if(loopdata.type == "premiere"){$scope.AccountsStepData.premier = loopdata;}nextFun();}else {SessionService.createAdminUser($scope.AccountsStepData);}};nextFun();$scope.loadFontNames();});});});}else {$scope.AccountsStepData = SessionService.getAdminUser();}}});app.factory('AuthService',['$http',function($http){function login(data){return $http.post('/api/login',data);}function signup(data){return $http.post('/api/signup',data);}function thirdPartylogin(data){return $http.post('/api/login/thirdPartylogin',data);}return {login:login,signup:signup,thirdPartylogin:thirdPartylogin};}]);app.factory('SessionService',function($cookies,$http,$window,$state){function create(data){console.log(data);data.pseudoAvailableSlots = createPseudoAvailableSlots(data);$window.localStorage.setItem('user',JSON.stringify(data));}function deleteUser(){$window.localStorage.removeItem('user');$window.localStorage.removeItem('AdminUser');$window.localStorage.removeItem('addActionsfoAccount');$window.localStorage.removeItem('addActionsfoAccountIndex');$window.localStorage.removeItem('addActionsfoAccountIndexSRD');$window.localStorage.removeItem('soundCloudId');$window.localStorage.removeItem('PaidRepostAccounts');$window.localStorage.removeItem('isAdminAuthenticate');}function removeAccountusers(){$window.localStorage.removeItem('addActionsfoAccount');$window.localStorage.removeItem('addActionsfoAccountIndex');$window.localStorage.removeItem('addActionsfoAccountIndexSRD');$window.localStorage.removeItem('AdminUser');$window.localStorage.removeItem('soundCloudId');$window.localStorage.removeItem('PaidRepostAccounts');}function addActionsfoAccount(actions,index,soundCloudId){$window.localStorage.setItem('addActionsfoAccount',actions);$window.localStorage.setItem('addActionsfoAccountIndex',index);if(soundCloudId){$window.localStorage.setItem('addActionsfoAccountIndexSRD',index);$window.localStorage.setItem('soundCloudId',soundCloudId);}}function removePaidRepostAccounts(){$window.localStorage.removeItem('PaidRepostAccounts');}function getActionsfoAccount(){return $window.localStorage.getItem('addActionsfoAccount');}function getActionsfoAccountIndex(){return $window.localStorage.getItem('addActionsfoAccountIndex');}function addActionsfoAccountIndexSRD(){return $window.localStorage.getItem('addActionsfoAccountIndexSRD');}function getSoundCloudId(){return $window.localStorage.getItem('soundCloudId');}function getUser(){try{var user=JSON.parse($window.localStorage.getItem('user'));if(user){return user;}}catch(e) {}}function createAdminUser(data){$window.localStorage.setItem('AdminUser',JSON.stringify(data));}function setUserPaidRepostAccounts(data){$window.localStorage.setItem('PaidRepostAccounts',JSON.stringify(data));}function getUserPaidRepostAccounts(id){if(id != undefined){try{var accounts=JSON.parse($window.localStorage.getItem('PaidRepostAccounts'));if(typeof accounts === "object" && accounts !== null){return accounts;}else {var user=accounts.find(function(acc){return acc._id == id;});console.log("user",user);return user;}}catch(e) {}}}function getAdminUser(){try{var user=JSON.parse($window.localStorage.getItem('AdminUser'));if(user){return user;}}catch(e) {}}function refreshUser(){var curUser=getUser();if(curUser){$http.get('/api/users/byId/' + curUser._id).then(function(res){create(res.data);}).then(null,function(){if(window.location.pathname.indexOf('artistTools') != -1){$window.localStorage.removeItem('user');$state.go('login');}else if(window.location.pathname.indexOf('admin') != -1){$window.localStorage.removeItem('user');$state.go('admin');}else {$window.localStorage.removeItem('user');}});}}return {create:create,deleteUser:deleteUser,getUser:getUser,refreshUser:refreshUser,createAdminUser:createAdminUser,getAdminUser:getAdminUser,removeAccountusers:removeAccountusers,addActionsfoAccount:addActionsfoAccount,getActionsfoAccount:getActionsfoAccount,getActionsfoAccountIndex:getActionsfoAccountIndex,setUserPaidRepostAccounts:setUserPaidRepostAccounts,getUserPaidRepostAccounts:getUserPaidRepostAccounts,removePaidRepostAccounts:removePaidRepostAccounts,getSoundCloudId:getSoundCloudId,addActionsfoAccountIndexSRD:addActionsfoAccountIndexSRD};});app.config(function($stateProvider){$stateProvider.state('login',{url:'/login',params:{submission:null},templateUrl:'js/auth/views/login.html',controller:'AuthController',resolve:{config:function config(AppConfig){return AppConfig.fetchConfig().then(function(res){return AppConfig.setConfig(res.data);});}}}).state('signup',{url:'/signup',templateUrl:'js/auth/views/signup.html',controller:'AuthController'});});app.controller('AuthController',function($rootScope,$state,$stateParams,$scope,$http,$uibModal,$window,AuthService,SessionService,socket){$scope.loginObj = {};$scope.message = {val:'',visible:false};if($window.localStorage.getItem('returnstate') == 'reForReInteraction'){$.Zebra_Dialog("Please log in with the account who's trade you wish to view.",{'type':'question','buttons':[{caption:'Cancel',callback:function callback(){$window.localStorage.removeItem('returnstate');$window.localStorage.removeItem('user1Name');$window.localStorage.removeItem('user2Name');}},{caption:'Log In',callback:function callback(){$scope.soundcloudLogin();}}]});}if(SessionService.getUser()){$state.go('reForReLists');}$scope.openModal = {signupConfirm:function signupConfirm(){$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'signupComplete.html',controller:'AuthController',scope:$scope});}};$scope.login = function(){$scope.message = {val:'',visible:false};AuthService.login($scope.loginObj).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){var userData=res.data.user;userData.isAdmin = false;SessionService.create(userData);$state.go('reForReLists');}else {$scope.message = {val:res.data.message,visible:true};}}function handleLoginError(res){$scope.message = {val:'Error in processing your request',visible:true};}};$scope.updateEmail = function(email){var answer=email;var myArray=answer.match(/[a-z\._\-!#$%&'+/=?^_`{}|~]+@[a-z0-9\-]+\.\S{2,3}/igm);if(myArray){$scope.user.email = answer;return $http.put('/api/database/profile',$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.hideall = false;$('#emailModal').modal('hide');$scope.showEmailModal = false;window.location.reload();}).then(null,function(err){setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);});}else {setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);}};$scope.closeModal = function(){$('#emailModal').modal('hide');};$scope.promptForEmail = function(){console.log('prompting');$scope.showEmailModal = true;$('#emailModal').modal('show');if(!$scope.$$phase)$scope.$apply();};$scope.thirdPartyLogin = function(userdata){AuthService.thirdPartylogin(userdata).then(handleLoginResponse)['catch'](handleLoginError);function handleLoginResponse(res){if(res.status === 200 && res.data.success){SessionService.create(res.data.user);$state.go('reForReLists');}else {$.Zebra_Dialog("Invalid Username OR Password.");}}function handleLoginError(res){$.Zebra_Dialog("Error in processing your request");}};$scope.checkIfSubmission = function(){if($stateParams.submission){$scope.soundcloudLogin();}};$scope.signup = function(){$scope.message = {val:'',visible:false};if($scope.signupObj.password != $scope.signupObj.confirmPassword){$scope.message = {val:'Password doesn\'t match with confirm password',visible:true};return;}AuthService.signup($scope.signupObj).then(handleSignupResponse)['catch'](handleSignupError);function handleSignupResponse(res){$state.go('login');}function handleSignupError(res){}};$scope.soundcloudLogin = function(){$scope.processing = true;SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudLogin',{token:res.oauth_token,password:'test'});}).then(function(res){$scope.processing = false;var userData=res.data.user;userData.isAdmin = false;SessionService.create(userData);$scope.user = SessionService.getUser();if(!$scope.user.email){$scope.promptForEmail();}else {$scope.redirectLogin();}}).then(null,function(err){console.log(err);$scope.processing = false;$scope.$apply();$.Zebra_Dialog('Error: Could not log in');});};$scope.redirectLogin = function(){if($stateParams.submission){$state.go('artistToolsDownloadGatewayNew',{'submission':$stateParams.submission});return;}$scope.processing = false;console.log($window.localStorage.getItem('returnstate'));if(!$scope.$$phase)$rootScope.$apply();if($window.localStorage.getItem('returnstate') != undefined){console.log('not undefined');if($window.localStorage.getItem('returnstate') == "reForReInteraction"){console.log('/artistTools/trade/' + $window.localStorage.getItem('user1Name') + '/' + $window.localStorage.getItem('user2Name'));window.location.href = '/artistTools/trade/' + $window.localStorage.getItem('user1Name') + '/' + $window.localStorage.getItem('user2Name');}else if($window.localStorage.getItem('returnstate') == "artistToolsDownloadGatewayEdit"){$state.go($window.localStorage.getItem('returnstate'),{gatewayID:$window.localStorage.getItem('tid')});}else {$state.go($window.localStorage.getItem('returnstate'));}}else {$state.go('artistToolsScheduler');}};});app.config(function($stateProvider){$stateProvider.state('customemailbuttons',{url:'/admin/customemailbuttons',templateUrl:'js/customEmailButtons/views/customEmailButtons.html',controller:'CustomEmailButtonController'});});app.controller('CustomEmailButtonController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$sce,customizeService){if(!SessionService.getUser()){$state.go('admin');}$scope.user = SessionService.getUser();$scope.customEmailButtons = $scope.user.customEmailButtons?$scope.user.customEmailButtons:[];if($scope.customEmailButtons.length == 0){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});}$scope.saveSettings = function(){var valid=true;var re=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;angular.forEach($scope.customEmailButtons,function(cb){if(cb.toEmail != "{email}"){var validEmail=re.test(cb.toEmail);if(!validEmail){valid = false;}}});if(!valid){$.Zebra_Dialog('Please enter {email} or a well formatted email id in Tom Email field.');return;}$scope.processing = true;$scope.user.customEmailButtons = $scope.customEmailButtons;$http.post('/api/database/updateCustomEmailButtons',{customEmailButtons:$scope.user.customEmailButtons}).then(function(res){$scope.processing = false;SessionService.create(res.data);$scope.user = SessionService.getUser();});};$scope.addItem = function(){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});};$scope.removeItem = function(index){$scope.customEmailButtons.splice(index,1);};});app.config(function($stateProvider){$stateProvider.state('customizesubmission',{url:'/admin/customizesubmission',templateUrl:'js/customizeSubmission/views/customizeSubmission.html',controller:'CustomizeSubmissionController'});});app.controller('CustomizeSubmissionController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$sce,customizeService){if(!SessionService.getUser()){$state.go('admin');}$scope.user = SessionService.getUser();$scope.submission = {};$scope.genreArray = ['Alternative Rock','Ambient','Creative','Chill','Classical','Country','Dance & EDM','Dancehall','Deep House','Disco','Drum & Bass','Dubstep','Electronic','Festival','Folk','Hip-Hop/RNB','House','Indie/Alternative','Latin','Trap','Vocalists/Singer-Songwriter'];$scope.saveSettings = function(){$scope.processing = true; //customizeService.uploadFile($scope.backImage.file).then(function(res){
//var backImage=res.Location;
//$scope.postData.backgroundimage=backImage;
$scope.postData.userID = $scope.user._id;var subHeadingText=$scope.postData.subHeading.text?$scope.postData.subHeading.text.replace(/\r?\n/g,'<br />'):'';$scope.postData.subHeading.text = subHeadingText;customizeService.addCustomize($scope.postData).then(function(response){$scope.processing = false;$.Zebra_Dialog("Saved Successfully");})['catch'](function(error){console.log("er",error);}); //}) 
};$scope.getCustomizeSettings = function(){customizeService.getCustomPageSettings($scope.user._id).then(function(response){if(response){$scope.postData = response;$scope.customizeSettings = response;}else {$scope.postData = {heading:{text:"Submission for Promotion",style:{fontSize:21,fontColor:'#999',fontWeight:'Bold'}},subHeading:{text:"Our mission is to simply bring the best music to the people. We also have a strong commitment to providing feedback and guidance for rising artists. We guarantee that your song will be listened to and critiqued by our dedicated staff if it passes our submission process. Although we cannot guarantee support for your submission on our promotional platforms such as SoundCloud, YouTube, and Facebook, we will make sure to get back to you with a response.",style:{fontSize:16,fontColor:'#7d5a5a',fontWeight:'Normal'}},inputFields:{style:{border:1,borderRadius:4,borderColor:'#F5D3B5'}},button:{text:'Enter',style:{fontSize:15,fontColor:'#fff',border:1,borderRadius:4,bgColor:'#F5BBBC'}}};}});};});app.config(function($stateProvider){$stateProvider.state('autoEmailsNew',{url:'/admin/database/autoEmails/new',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});});app.config(function($stateProvider){$stateProvider.state('autoEmailsEdit',{url:'/admin/database/autoEmails/edit/:templateId',templateUrl:'js/database/autoEmails/autoEmails.html',controller:'AutoEmailsController'});}); // resolve: {
//   template: function($http) {
//     return $http.get('/api/database/autoEmails/biweekly?isArtist=true')
//       .then(function(res) {
//         var template = res.data;
//         if (template) {
//           return template;
//         } else {
//           return {
//             purpose: "Biweekly Email"
//           }
//         }
//       })
//       .then(null, function(err) {
//         $.Zebra_Dialog("ERROR: Something went wrong.");
//       })
//   }
// }
app.controller('AutoEmailsController',function($rootScope,$state,$scope,$http,$stateParams,AuthService){$scope.loggedIn = false;$scope.isStateParams = false;if($stateParams.templateId){$scope.isStateParams = true;} // $scope.template = template;
$scope.template = {isArtist:false};$scope.getTemplate = function(){if($stateParams.templateId){$scope.processing = true;$http.get('/api/database/autoEmails?templateId=' + $stateParams.templateId).then(function(res){var template=res.data;$scope.processing = false;if(template){$scope.template = template;}else {$scope.template = {};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}else {return false;}}; // console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails/',$scope.template).then(function(res){$.Zebra_Dialog("Saved email template.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('autoEmailsList',{url:'/admin/database/autoEmails',templateUrl:'js/database/autoEmails/autoEmailsList.html',controller:'AutoEmailsListController',resolve:{templates:function templates($http){return $http.get('/api/database/autoEmails').then(function(res){var template=res.data;if(template){return template;}else {return {purpose:"Biweekly Email"};}}).then(null,function(err){$.Zebra_Dialog("ERROR: Something went wrong.");});}}});});app.controller('AutoEmailsListController',function($rootScope,$state,$scope,$http,AuthService,templates){$scope.loggedIn = false;$scope.templates = templates; // $scope.getTemplate = function() {
//   $scope.processing = true;
//   $http.get('/api/database/autoEmails/biweekly?isArtist=' + String($scope.template.isArtist))
//     .then(function(res) {
//       var template = res.data;
//       $scope.processing = false;
//       if (template) {
//         $scope.template = template;
//       } else {
//         $scope.template = {
//           purpose: "Biweekly Email",
//           isArtist: false
//         };
//       }
//     })
//     .then(null, function(err) {
//       $.Zebra_Dialog("ERROR: Something went wrong.");
//     });
// };
// console.log(template);
$scope.save = function(){$scope.processing = true;$http.post('/api/database/autoEmails',$scope.template).then(function(res){$.Zebra_Dialog("Saved email.");$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("ERROR: Message could not save.");$scope.processing = false;});}; // $scope.login = function() {
//   $scope.processing = true;
//   $http.post('/api/login', {
//     password: $scope.password
//   }).then(function() {
//     $rootScope.password = $scope.password;
//     $scope.loggedIn = true;
//     $scope.processing = false;
//   }).catch(function(err) {
//     $scope.processing = false;
//     $.Zebra_Dialog('Wrong Password');
//   });
// }
$scope.logout = function(){$http.get('/api/logout').then(function(){window.location.href = '/admin';})['catch'](function(err){$scope.processing = false;$.Zebra_Dialog('Wrong Password');});};});app.config(function($stateProvider){$stateProvider.state('downloadGate',{url:'/admin/downloadGate',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateList',{url:'/admin/downloadGate/list',templateUrl:'js/downloadTrack/views/adminDLGate.list.html',controller:'AdminDLGateController'});});app.config(function($stateProvider){$stateProvider.state('downloadGateEdit',{url:'/admin/downloadGate/edit/:gatewayID',templateUrl:'js/downloadTrack/views/adminDLGate.html',controller:'AdminDLGateController'});});app.controller('AdminDLGateController',['$rootScope','$state','$stateParams','$scope','$http','$location','$window','$uibModal','SessionService','AdminDLGateService',function($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,SessionService,AdminDLGateService){if(!SessionService.getUser()){$state.go('admin');} /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Init Download Gateway form data */$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL2){$scope.modal.downloadURL = _downloadURL2;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}};$scope.closeModal = function(){$scope.modalInstance.close();}; /* Init profile */$scope.profile = {}; /* Method for resetting Download Gateway form */function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'La Tropicál',trackTitle:'Panteone / Travel',trackArtworkURL:'assets/images/who-we-are.png',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1,permanentLink:false}],playlists:[{url:'',avatar:'',title:'',id:''}]};angular.element("input[type='file']").val(null);} /* Check if stateParams has gatewayID to initiate edit */$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID); // if(!$stateParams.downloadGateway) {
//   $scope.getDownloadGateway($stateParams.gatewayID);
// } else {
//   $scope.track = $stateParams.downloadGateway;
// }
}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url:'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.artistURLChange = function(index){var artist={};$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url;$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){if($scope.track.artists.length > 2){return false;}$scope.track.artists.push({url:'',avatar:'assets/images/who-we-are.png',username:'',id:-1});};$scope.addSMLink = function(){ // externalSMLinks++;
// $scope.track.SMLinks['key' + externalSMLinks] = '';
$scope.track.SMLinks.push({key:'',value:''});};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.saveDownloadGate = function(){if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData(); /* Append data to sendObj start */ /* Track */for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);} /* artists */var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists)); /* playlists */var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('playlists',JSON.stringify(playlists)); /* SMLinks */var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks)); /* Append data to sendObj end */var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($scope.track._id){ // $scope.openModal.downloadURL(res.data.trackURL);
return;}resetDownloadGateway();$scope.openModal.downloadURL(res.data);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.logout = function(){$http.post('/api/logout').then(function(){SessionService.deleteUser();$state.go('admin');});};$scope.showProfileInfo = function(){$scope.profile = SessionService.getUser();};$scope.getDownloadList = function(){AdminDLGateService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(res){}}; /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;AdminDLGateService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var SMLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}$scope.track.SMLinks = SMLinksArray;$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;AdminDLGateService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}else {return false;}};}]);app.config(function($stateProvider,$authProvider,$httpProvider){$stateProvider.state('download',{url:'/download',templateUrl:'js/downloadTrack/views/downloadTrack.view.html',controller:'DownloadTrackController'});$stateProvider.state('downloadnew',{url:'/download/:username/:title',templateUrl:'js/downloadTrack/views/downloadTrack.view.html',controller:'DownloadTrackController'});$authProvider.instagram({clientId:'0b2ab47baa464c31bf6d8e9f301d4469'}); // Instagram
$authProvider.instagram({name:'instagram',url:'/api/download/auth/instagram',authorizationEndpoint:'https://api.instagram.com/oauth/authorize',redirectUri:'https://localhost:1443/download',requiredUrlParams:['scope'],scope:['basic','relationships','public_content','follower_list'],scopeDelimiter:'+',type:'2.0'});$authProvider.twitter({url:'/api/download/twitter/auth',authorizationEndpoint:'https://api.twitter.com/oauth/authenticate',redirectUri:'https://localhost:1443/download', //must match website
type:'1.0',popupOptions:{width:495,height:645}});});app.controller('DownloadTrackController',function($rootScope,$state,$scope,$http,$location,$window,$q,DownloadTrackService,$sce,$auth,SessionService,$stateParams){$scope.user = SessionService.getUser(); /* Normal JS vars and functions not bound to scope */var playerObj=null;$scope.recentTracks = []; /* $scope bindings start */$scope.trackData = {trackName:'Mixing and Mastering',userName:'la tropical'};$scope.showSignUp = false;if($state.$current.name == "downloadnew"){$scope.showSignUp = true;}$scope.toggle = true;$scope.togglePlay = function(){if(!playerObj){$.Zebra_Dialog("Playing not allowed");}$scope.toggle = !$scope.toggle;if($scope.toggle){playerObj.pause();}else {playerObj.play();}};$scope.processing = false;$scope.embedTrack = false;$scope.downloadURLNotFound = false;$scope.errorText = '';$scope.followBoxImageUrl = 'assets/images/who-we-are.png';$scope.initiateDownload = function(){$scope.processing = false;if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}}; /* Function for Instagram */$scope.authenticateInstagram = function(){$auth.authenticate('instagram').then(function(response){var userName=$scope.track.socialPlatformValue;$http({method:"POST",url:'/api/download/instagram/follow_user',data:{'access_token':response.data,'q':userName}}).then(function(user){if(user.data.succ){$scope.initiateDownload();}});});}; /* Function for Twitter */$scope.authenticateTwitter = function(){$auth.authenticate('twitter').then(function(response){var twitterUsers=[];if($scope.track.socialPlatform == 'twitterFollow'){var userNames;var i;(function(){var followTwitterUser=function followTwitterUser(index){if(index < twitterUsers.length){$http({method:"POST",url:'/api/download/twitter/follow',data:{screen_name:twitterUsers[index],accessToken:response.data,trackID:$scope.track._id}}).then(function(records){index++;followTwitterUser(index);});}else {window.location.replace($scope.track.downloadURL);}};if($scope.track.socialPlatformValue.indexOf(',') > -1){userNames = $scope.track.socialPlatformValue.split(',');for(i = 0;i < userNames.length;i++) {twitterUsers.push(userNames[i]);}}else {twitterUsers.push($scope.track.socialPlatformValue);}followTwitterUser(0);})();}else if($scope.track.socialPlatform == 'twitterPost'){response.data.socialPlatformValue = $scope.track.socialPlatformValue;$http({method:"POST",url:'/api/download/twitter/post',data:{data:response.data,trackID:$scope.track._id}}).then(function(records){if(records.statusText === "OK"){window.location.replace($scope.track.downloadURL);}else {$.Zebra_Dialog('Error in processing the request. Please try again.');}});}});}; /* Function for Youtube */$scope.authenticateYoutube = function(track){$scope.processing = true;var totalArray=[];if($scope.track.socialPlatformValue){$scope.track.youtube = [];if($scope.track.socialPlatformValue.indexOf(',') > -1){var urls=$scope.track.socialPlatformValue.split(',');for(var i=0;i < urls.length;i++) {totalArray.push(urls[i]);}}else {totalArray.push($scope.track.socialPlatformValue);} //var totalArray = [$scope.track.socialPlatformValue, "https://www.youtube.com/channel/UCbfKEQZZzHN0egYXinbb7jg", "https://www.youtube.com/channel/UCvQyEDsKwJoJLKXeCvY2OfQ", "https://www.youtube.com/channel/UCcqpdWD_k3xM4AOjvs-FitQ", "https://www.youtube.com/channel/UCbA0xiM4E5Sbf1WMmhTGOOg", "https://www.youtube.com/channel/UC2HG82SETkcx8pOE75bYJ6g"]
var promiseArr=[];totalArray.forEach(function(url){var idPromise=new Promise(function(resolve,reject){if(url.includes('/channel/')){resolve(url.substring(url.indexOf('/channel/') + 9,url.length));}else {var username=url.substring(url.indexOf('/user/') + 6,url.length);var idArray=[];$http.get('https://www.googleapis.com/youtube/v3/channels?key=AIzaSyBOuRHx25VQ69MrTEcvn-hIdkZ8NsZwsLw&forUsername=' + username + '&part=id').then(function(res){if(res.data.items[0])resolve(res.data.items[0].id);}).then(null,reject);}});promiseArr.push(idPromise);});Promise.all(promiseArr).then(function(idArray){return $http({method:"GET",url:'/api/download/subscribe',params:{downloadURL:$scope.track.downloadURL,channelIDS:idArray,trackID:$scope.track._id}});}).then(function(response){$scope.processing = false;window.open(response.data.url,'_self');window.focus();}).then(null,function(){$scope.processing = false;$.Zebra_Dialog('Youtube channel to subscribe to not found');});}};$scope.backgroundStyle = function(){ // console.log('$scope.track',$scope.track);
// return {
//   'background-image': 'url(' + $scope.track.trackArtworkURL + ')',
//   'background-repeat': 'no-repeat',
//   'background-size': 'cover'
// }
};$scope.getTrackByID = function(trackID){DownloadTrackService.getDownloadTrack(trackID).then(receiveDownloadTrack)['catch'](catchDownloadTrackError);function receiveDownloadTrack(result){if(result.data){window.location.href = result.data.trackDownloadUrl;}}function catchDownloadTrackError(err){$.Zebra_Dialog('Song Not Found');$scope.processing = false;$scope.embedTrack = false;}};$scope.getTrackByUrl = function(username,title){DownloadTrackService.getDownloadTrackByUrl({username:username,title:title}).then(receiveDownloadTrack).then(receiveRecentTracks).then(initPlay)['catch'](catchDownloadTrackError);function receiveDownloadTrack(result){$scope.track = result.data;console.log($scope.track);$scope.backgroundStyle = function(){return {'background-image':'url(' + $scope.track.trackArtworkURL + ')','background-repeat':'no-repeat','background-size':'cover'};};$scope.embedTrack = true;$scope.processing = false;if($scope.track.showDownloadTracks === 'user'){return DownloadTrackService.getRecentTracks({userID:$scope.track.userid,trackID:$scope.track._id});}else {return $q.resolve('resolve');}}function receiveRecentTracks(res){if(typeof res === 'object' && res.data){$scope.recentTracks = res.data;}return SC.stream('/tracks/' + $scope.track.trackID);}function initPlay(player){console.log(player);playerObj = player;}function catchDownloadTrackError(err){if(!err.status == 403){$.Zebra_Dialog('Song Not Found');$scope.processing = false;$scope.embedTrack = false;}}}; /* Default processing on page load */$scope.getDownloadTrack = function(){$scope.processing = true;var trackID=$location.search().trackid;if(trackID != undefined){$scope.getTrackByID(trackID);}else {var username=$stateParams.username;var title=$stateParams.title;$scope.getTrackByUrl(username,title);}}; /* On click download track button */$scope.authenticateSoundcloud = function(){if($scope.track.comment && !$scope.track.commentText){$.Zebra_Dialog('Please write a comment!');return false;}$scope.processing = true;$scope.errorText = '';SC.connect().then(performTasks).then(initDownload)['catch'](catchTasksError);function performTasks(res){$scope.track.token = res.oauth_token;return DownloadTrackService.performTasks($scope.track);}function initDownload(res){$scope.processing = false;if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}$scope.$apply();}function catchTasksError(err){$.Zebra_Dialog('Error in processing your request');$scope.processing = false;$scope.$apply();}};$scope.downloadTrackFacebookShare = function(shareURL){window.fbAsyncInit = function(){FB.init({appId:'1576897469267996',xfbml:true,version:'v2.6'});FB.ui({method:'share',href:shareURL},function(response){if(response && !response.error_code){if($scope.track.downloadURL && $scope.track.downloadURL !== ''){$window.location.href = $scope.track.downloadURL;}else {$scope.errorText = 'Error! Could not fetch download URL';$scope.downloadURLNotFound = true;}$scope.$apply();}else if(response && response.error_code === 4201){console.log("User cancelled: " + decodeURIComponent(response.error_message));}else {console.log("Not OK: " + JSON.stringify(response));alert("You have cancelled sharing on facebook.");}});};(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return;}js = d.createElement(s);js.id = id;js.src = "//connect.facebook.net/en_US/sdk.js";fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');};$scope.downloadTrackFacebookLike = function(fblikeid){setTimeout(function(){ //window.fbAsyncInit = function() {
FB.init({appId:'1576897469267996',xfbml:true,version:'v2.6'});FB.Event.subscribe('edge.create',function(href,widget){window.location = fblikeid.downloadURL;}); //};
(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return;}js = d.createElement(s);js.id = id;js.src = "//connect.facebook.net/en_US/sdk.js";fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');},500);};});window.twttr = (function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr || {};if(d.getElementById(id))return t;js = d.createElement(s);js.id = id;js.src = "https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);t._e = [];t.ready = function(f){t._e.push(f);};return t;})(document,"script","twitter-wjs");app.service('AdminDLGateService',['$http',function($http){function resolveData(data){return $http.post('/api/soundcloud/resolve',data);}function getDownloadList(){return $http.get('/api/database/downloadurl/admin');}function getDownloadGateway(data){return $http.get('/api/database/downloadurl/' + data.id);}function deleteDownloadGateway(data){return $http.post('/api/database/downloadurl/delete',data);}return {resolveData:resolveData,getDownloadList:getDownloadList,getDownloadGateway:getDownloadGateway,deleteDownloadGateway:deleteDownloadGateway};}]);app.service('DownloadTrackService',['$http',function($http){function getDownloadTrack(data){return $http.get('/api/download/track?trackID=' + data);}function getDownloadTrackByUrl(data){return $http.get('/api/download/trackByURL/' + data.username + '/' + data.title);}function getTrackData(data){return $http.post('/api/soundcloud/resolve',{url:data.trackURL});}function performTasks(data){return $http.post('api/download/tasks',data);}function getRecentTracks(data){return $http.get('/api/download/track/recent?userID=' + data.userID + '&trackID=' + data.trackID);}return {getDownloadTrack:getDownloadTrack,getDownloadTrackByUrl:getDownloadTrackByUrl,getTrackData:getTrackData,performTasks:performTasks,getRecentTracks:getRecentTracks};}]);app.config(function($stateProvider){$stateProvider.state('home',{url:'/',templateUrl:'js/home/views/home.html',controller:'HomeController'}).state('about',{url:'/about',templateUrl:'js/home/views/about.html',controller:'HomeController'}).state('services',{url:'/services',templateUrl:'js/home/views/services.html',controller:'HomeController'}).state('faqs',{url:'/faqs',templateUrl:'js/home/views/faqs.html',controller:'HomeController'}).state('apply',{url:'/apply',templateUrl:'js/home/views/apply.html',controller:'HomeController'}).state('contact',{url:'/contact',templateUrl:'js/home/views/contact.html',controller:'HomeController'});});app.controller('HomeController',['$rootScope','$state','$scope','$http','$location','$window','HomeService',function($rootScope,$state,$scope,$http,$location,$window,HomeService){$scope.applicationObj = {};$scope.artist = {};$scope.sent = {application:false,artistEmail:false};$scope.message = {application:{val:'',visible:false},artistEmail:{val:'',visible:false}}; /* Apply page start */$scope.toggleApplicationSent = function(){$scope.message = {application:{val:'',visible:false}};$scope.sent.application = !$scope.sent.application;};$scope.saveApplication = function(){$scope.message.application = {val:'',visible:false};HomeService.saveApplication($scope.applicationObj).then(saveApplicationResponse)['catch'](saveApplicationError);function saveApplicationResponse(res){if(res.status === 200){$scope.applicationObj = {};$scope.sent.application = true;}}function saveApplicationError(res){if(res.status === 400){$scope.message.application = {val:'Email already exists!',visible:true};return;}$scope.message.application = {val:'Error in processing your request',visible:true};}}; /* Apply page end */ /* Artist Tools page start */$scope.toggleArtistEmail = function(){$scope.message = {artistEmail:{val:'',visible:false}};$scope.sent.artistEmail = !$scope.sent.artistEmail;};$scope.saveArtistEmail = function(){HomeService.saveArtistEmail($scope.artist).then(artistEmailResponse)['catch'](artistEmailError);function artistEmailResponse(res){if(res.status === 200){$scope.artist = {};$scope.sent.artistEmail = true;}}function artistEmailError(res){if(res.status === 400){$scope.message.artistEmail = {val:'Email already exists!',visible:true};return;}$scope.message.artistEmail = {val:'Error in processing your request',visible:true};}}; /* Artist Tools page end */}]);app.directive('affixer',function($window){return {restrict:'EA',link:function link($scope,$element){var win=angular.element($window);var topOffset=$element[0].offsetTop;function affixElement(){if($window.pageYOffset > topOffset){$element.css('position','fixed');$element.css('top','3.5%');}else {$element.css('position','');$element.css('top','');}}$scope.$on('$routeChangeStart',function(){win.unbind('scroll',affixElement);});win.bind('scroll',affixElement);}};});app.service('HomeService',['$http',function($http){function saveApplication(data){return $http.post('/api/home/application',data);}function saveArtistEmail(data){return $http.post('/api/home/artistemail',data);}return {saveApplication:saveApplication,saveArtistEmail:saveArtistEmail};}]);app.service('MixingMasteringService',['$http',function($http){function saveMixingMastering(data){return $http({method:'POST',url:'/api/mixingmastering',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {saveMixingMastering:saveMixingMastering};}]);app.service('PrPlanService',['$http',function($http){function savePrPlan(data){return $http({method:'POST',url:'/api/prplan',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePrPlan:savePrPlan};}]);app.config(function($stateProvider){$stateProvider.state('premiere',{url:'/premiere',templateUrl:'js/premiere/views/premiere.html',controller:'PremierController'});});app.controller('PremierController',['$rootScope','$state','$scope','$http','$location','$window','PremierService',function($rootScope,$state,$scope,$http,$location,$window,PremierService){window.location.href = '/EtiquetteNoir/premiere';$scope.userID = $location.search().id;$scope.genreArray = ['Alternative Rock','Ambient','Creative','Chill','Classical','Country','Dance & EDM','Dancehall','Deep House','Disco','Drum & Bass','Dubstep','Electronic','Festival','Folk','Hip-Hop/RNB','House','Indie/Alternative','Latin','Trap','Vocalists/Singer-Songwriter'];$scope.premierObj = {};$scope.message = {val:'',visible:false};$scope.processing = false;$scope.savePremier = function(){ //$.Zebra_Dialog('This may take a little while.')
$scope.processing = true;$scope.message.visible = false;var data=new FormData();for(var prop in $scope.premierObj) {data.append(prop,$scope.premierObj[prop]);}data.append("userID",$scope.userID);PremierService.savePremier(data).then(receiveResponse)['catch'](catchError);function receiveResponse(res){$scope.processing = false;if(res.status === 200){$scope.premierObj = {};angular.element("input[type='file']").val(null);$.Zebra_Dialog('Thank you! Your message has been sent successfully.');}else {$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.');}}function catchError(res){$scope.processing = false;$.Zebra_Dialog('Error processing. Please try again or send your track to edward@peninsulamgmt.com.');}};$scope.getUserID = function(){if($scope.userID == undefined){$http.get('/api/users/getUserID').then(function(res){$scope.userID = res.data;});}};$scope.getUserID();}]);app.service('PremierService',['$http',function($http){function savePremier(data){return $http({method:'POST',url:'/api/premier',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:data});}return {savePremier:savePremier};}]);app.config(function($stateProvider){$stateProvider.state('premiersubmissions',{url:'/admin/premiersubmissions',templateUrl:'js/premierSubmissions/views/premierSubmissions.html',controller:'PremierSubmissionController'});});app.controller('PremierSubmissionController',function($rootScope,$state,$scope,$http,AuthService,SessionService,$sce,$window){$scope.isLoggedIn = SessionService.getUser()?true:false;if(!SessionService.getUser()){$state.go('admin');}$scope.user = SessionService.getUser();$scope.user.isAdmin = $scope.user.role == 'admin'?true:false;$scope.viewStatus = 'new';$scope.counter = 0;$scope.channels = [];$scope.selectedGroups = [];$scope.showingElements = [];$scope.submissions = [];$scope.selectedChannelIDS = [];$scope.selectedGroupChannelIDS = [];$scope.selectedChannelName = [];$scope.genre = "";$scope.limit = 20;$scope.dynamicButton = [{"name":"FILE","appendText":" {TRACK_FILE} "},{"name":"TRACK LINK","appendText":" {TRACK_LINK} "},{"name":"SUBMITTERS EMAIL","appendText":" {SUBMITTERS_EMAIL} "},{"name":"SUBMITTERS NAME","appendText":" {SUBMITTERS_NAME} "},{"name":"TODAYS DATE","appendText":" {TODAYSDATE} "},{"name":"SUBMITTED TO ACCOUNT NAME","appendText":" {SUBMITTED_TO_ACCOUNT_NAME} "},{"name":"SUBMITTED ACCOUNT NAME W/ LINK","appendText":" {SUBMITTED_ACCOUNT_NAME_WITH_LINK} "}];if(window.location.href.indexOf('admin/premiersubmissions#mysubmissions') != -1){$('.nav-tabs a[href="#mysubmissions"]').tab('show');}else if(window.location.href.indexOf('admin/premiersubmissions#managesubmissions') != -1){$('.nav-tabs a[href="#managesubmissions"]').tab('show');}$scope.loadSubmissions = function(){$scope.processing = true;$http.get('/api/premier/unaccepted?genre=' + $scope.genre + "&skip=" + $scope.showingElements.length + "&limit=" + $scope.limit).then(function(res){$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){d.channel = null;d.emailBody = "";$scope.showingElements.push(d);});}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: No premiere submissions found.');console.log(err);});};$scope.loadMore = function(){$scope.loadSubmissions();};$scope.accept = function(submi){$scope.processing = true;submi.status = "saved";$http.put("/api/premier/accept",{submi:submi}).then(function(sub){$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});};$scope.decline = function(submission){$scope.processing = true;submission.status = "declined";$http.put('/api/premier/decline',{submission:submission}).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$.Zebra_Dialog("Declined");$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Decline");});};$scope['delete'] = function(submission){$scope.processing = true;$http.post("/api/premier/delete",{id:submission._id}).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submission),1);$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog(err.data);$scope.processing = false;});};$scope.customEmailButtons = $scope.user.premierCustomEmailButtons.length > 0?$scope.user.premierCustomEmailButtons:[];if($scope.customEmailButtons.length == 0){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});}$scope.saveSettings = function(){var valid=true;var re=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;angular.forEach($scope.customEmailButtons,function(cb){if(!cb.toEmail.includes("{SUBMITTERS_EMAIL}")){var validEmail=re.test(cb.toEmail);if(!validEmail || !cb.buttonText){valid = false;}}});if(!valid){$.Zebra_Dialog('Please enter {SUBMITTERS_EMAIL} or a well formatted email address in all To Email fields and a title for each button.');return;}$scope.processing = true;$scope.user.premierCustomEmailButtons = $scope.customEmailButtons;$http.post('/api/database/updatePremierCustomEmailButtons',{customEmailButtons:$scope.user.premierCustomEmailButtons}).then(function(res){$scope.processing = false;SessionService.create(res.data);$scope.user = SessionService.getUser();});};$scope.addItem = function(){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});};$scope.removeItem = function(index){$scope.customEmailButtons.splice(index,1);};$scope.addEventClass = function(index,type){$('.selectedBox').removeClass("selectedBox");$("." + type + index).addClass("selectedBox");};$scope.appendBody = function(btn){if($('.selectedBox').length){var boxIndex=$('.selectedBox').attr("index");var cursorPos=$('.selectedBox').prop('selectionStart');var v=$('.selectedBox').val();var textBefore=v.substring(0,cursorPos);var textAfter=v.substring(cursorPos,v.length);var newtext=textBefore + btn.appendText + textAfter;$('.selectedBox').val(newtext);$('.selectedBox').trigger('input');$('.selectedBox').removeClass("selectedBox");}};$scope.sendTestMail = function(index){$scope.emailIndex = index;$scope.testEmail("testemail@artistsunlimited.com"); // $scope.showTestEmailModal = true;
// $('#emailModal').modal('show');
};$scope.testEmail = function(email){ // $scope.showTestEmailModal = false;
// $('#emailModal').modal('hide');
var subject=$scope.customEmailButtons[$scope.emailIndex].subject;var body=$scope.customEmailButtons[$scope.emailIndex].emailBody;body = formatForTestEmail(body,email);subject = formatForTestEmail(subject,email);$window.open("mailto:" + email + "?body=" + body + "&subject=" + subject,"_self");};function formatForTestEmail(item,email){return encodeURIComponent(item.replace(/{SUBMITTERS_EMAIL}/g,email).replace(/{SUBMITTERS_NAME}/g,"Johnny Submitter").replace(/{TRACK_LINK}/g,"https://soundcloud.com/david-austin-music/like-me-slightly-max-milner").replace(/{TRACK_FILE}/g,"https://premiersubmissions.s3.amazonaws.com/40%20When%20You%20Leave%20%28Numa%20Numa%29%20%28Basshunter%20Remix%29_1461703460790.mp3").replace(/{SUBMITTED_TO_ACCOUNT_NAME}/g,"La Tropical").replace(/{SUBMITTED_ACCOUNT_NAME_WITH_LINK}/g,'La Tropical (https://soundcloud.com/latropical)').replace('{TODAYSDATE}',new Date().toLocaleDateString()));}$scope.openEmailClient = function(sub,item){var toEmail=formatForEmailClient(item.toEmail,sub);var subject=item.subject != undefined?formatForEmailClient(item.subject,sub):"";var body=item.emailBody != undefined?formatForEmailClient(item.emailBody,sub):"";$window.open("mailto:" + encodeURIComponent(toEmail) + "?subject=" + encodeURIComponent(subject) + "&body=" + encodeURIComponent(body),"_self");};function formatForEmailClient(text,sub){return text.replace(/{SUBMITTERS_EMAIL}/g,sub.email).replace(/{SUBMITTERS_NAME}/g,sub.name).replace(/{TRACK_LINK}/g,sub.trackLink).replace(/{TRACK_FILE}/g,sub.s3URL).replace(/{SUBMITTED_TO_ACCOUNT_NAME}/g,sub.userID.soundcloud.username).replace(/{SUBMITTED_ACCOUNT_NAME_WITH_LINK}/g,sub.userID.soundcloud.username + ' (' + sub.userID.soundcloud.permalinkURL + ')').replace('{TODAYSDATE}',new Date().toLocaleDateString());}$scope.loadSubmissions();});app.filter('trusted',['$sce',function($sce){return function(url){return $sce.trustAsResourceUrl(url);};}]);app.config(function($stateProvider){$stateProvider.state('repostevents',{url:'/repostevents/:username/:trackTitle',templateUrl:'js/repostEvents/views/repostEvents.html',controller:'RepostEventsController',resolve:{repostEvent:function repostEvent($http,$location,$stateParams){var paid=$location.search().paid;var url='/api/events/repostEvent/' + $stateParams.username + '/' + $stateParams.trackTitle + '/' + paid;return $http.get(url).then(function(res){var events=res.data.sort(function(a,b){return new Date(a.trackInfo.day).getTime() - new Date(b.trackInfo.day).getTime();});console.log(events);return events;}).then(null,function(err){$.Zebra_Dialog("This repost event does not exist.");return;});}}});});app.controller('RepostEventsController',function($rootScope,$state,$scope,repostEvent,$http,$location,$window,$q,$sce,$auth,SessionService){if(!!repostEvent){$scope.user = SessionService.getUser();$scope.itemview = "calender";$scope.setView = function(view){$scope.itemview = view;};var daysArray=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];if(!!repostEvent){$scope.listevents = repostEvent;$scope.trackImage = repostEvent[0].trackInfo.trackArtUrl;if(!repostEvent[0].trackInfo.trackArtUrl){SC.get('/tracks/' + repostEvent[0].trackInfo.trackID).then(function(track){$scope.trackImage = track.artwork_url;$scope.listevents[0].trackInfo.artistName = track.user.username;});}};$scope.dayIncr = 7;$scope.incrDay = function(){if($scope.dayIncr < 21)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();if(screen.width > '744'){return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];}return ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][dayIndex];};$scope.getEventStyle = function(repostEvent){if(repostEvent.type == 'empty'){return {'border-radius':'4px'};}else if(repostEvent.type == 'multiple'){return {'background-color':'#7A549B','height':'20px','border-radius':'4px'};}else if(repostEvent.trackInfo.type == 'track' || repostEvent.trackInfo.type == 'queue'){return {'background-color':'#FF7676','border-radius':'4px'};}else if(repostEvent.trackInfo.type == 'traded'){return {'background-color':'#FFD450','border-radius':'4px'};}else if(repostEvent.trackInfo.type == 'paid'){return {'background-color':'#FFBBDD','border-radius':'4px'};}};$scope.followCounts = 0;repostEvent.forEach(function(ev){ev.day = new Date(ev.trackInfo.day);if(ev.day > new Date())$scope.followCounts += ev.userInfo.followers;});$scope.events = repostEvent;$scope.fillDateArrays = function(repostEvent){var calendar=[];var today=new Date();today.setDate(today.getDate() - 7);for(var i=0;i < 29;i++) {var calDay={};calDay.day = new Date(today);calDay.day.setDate(today.getDate() + i);var dayEvents=repostEvent.filter(function(ev){return new Date(ev.trackInfo.day).toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'empty'){ev.type = 'track';eventArray[new Date(ev.trackInfo.day).getHours()] = ev;}else if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'track'){var event={type:'multiple',events:[]};event.events.push(eventArray[new Date(ev.trackInfo.day).getHours()]);event.events.push(ev);eventArray[new Date(ev.trackInfo.day).getHours()] = event;}else if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'multiple'){eventArray[new Date(ev.trackInfo.day).getHours()].events.push(ev);}});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.getEventText = function(repostEvent){if(repostEvent.type == 'track')return repostEvent.userInfo.username;else if(repostEvent.type == 'multiple')return 'Multiple Reposts';};$scope.backEvent = function(){$scope.makeEvent = null;$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;};$scope.calendar = $scope.fillDateArrays(repostEvent);$scope.clickedSlot = function(day,hour,data){if(data.type == 'multiple'){var buttons=[];data.events.forEach(function(ev){var button={caption:ev.userInfo.username,callback:function callback(){$scope.openPopup(day,hour,ev);if(!$scope.$$phase)$scope.$apply();}};buttons.push(button);});$.Zebra_Dialog('Which slot do you want to view?',{'type':'question','buttons':buttons});}else {$scope.openPopup(day,hour,data);}};$scope.openPopup = function(day,hour,data){if(data.trackInfo){$scope.makeEvent = {};$scope.popup = true;var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent.day = new Date(makeDay);$scope.makeEvent.url = data.trackInfo.trackURL;$scope.makeEvent.trackID = data.trackInfo.trackID;$scope.makeEvent.comment = data.trackInfo.comment;var diff=(new Date(data.trackInfo.unrepostDate).getTime() - new Date(data.trackInfo.day).getTime()) / 3600000;if(diff > 0)$scope.makeEvent.unrepostHours = diff;$scope.unrepostEnable = diff > 0;$scope.makeEvent.timeGap = data.trackInfo.timeGap;$scope.makeEvent.username = data.userInfo.username;$scope.makeEvent.followers = data.userInfo.followers;if(data.trackInfo.like)$scope.likeSrc = 'assets/images/likeTrue.svg';else $scope.likeSrc = 'assets/images/like.svg';if(data.trackInfo.comment)$scope.commentSrc = 'assets/images/comment.svg';else $scope.commentSrc = 'assets/images/noComment.svg';var d=new Date(day).getDay();var channels=data.trackInfo.otherChannels;$scope.displayChannels = [];for(var i=0;i < repostEvent.length;i++) {if(channels.indexOf(repostEvent[i].userInfo.id) > -1){$scope.displayChannels.push(repostEvent[i].userInfo.username);}}$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.playerURL = $sce.trustAsResourceUrl("https://w.soundcloud.com/player/?url=http://api.soundcloud.com/tracks/" + $scope.makeEvent.trackID + "&auto_play=false&show_artwork=false");document.getElementById('scPopupPlayer').style.visibility = "visible";}};$scope.detailView = function(data){$scope.itemview = "detailListView";$scope.makeEvent = {};var day=new Date(data.trackInfo.day);$scope.makeEvent._id = data.trackInfo._id;$scope.makeEvent.day = new Date(data.trackInfo.day);$scope.makeEvent.url = data.trackInfo.trackURL;$scope.makeEvent.trackID = data.trackInfo.trackID;$scope.makeEvent.comment = data.trackInfo.comment;$scope.makeEvent.followers = data.userInfo.followers;$scope.makeEvent.username = data.userInfo.username;if(data.trackInfo.like)$scope.likeSrc = 'assets/images/likeTrue.svg';else $scope.likeSrc = 'assets/images/like.svg';if(data.trackInfo.comment)$scope.commentSrc = 'assets/images/comment.svg';else $scope.commentSrc = 'assets/images/noComment.svg';$scope.makeEvent.artist = data.userInfo;var repostDate=new Date(data.trackInfo.day);$scope.makeEvent.unrepostHours = data.trackInfo.unrepostHours;$scope.playerURL = $sce.trustAsResourceUrl("https://w.soundcloud.com/player/?url=http://api.soundcloud.com/tracks/" + $scope.makeEvent.trackID + "&auto_play=false&show_artwork=false");document.getElementById('scPlayer').style.visibility = "visible";};$scope.backToListEvent = function(){$scope.itemview = "list";};}});app.config(function($stateProvider){$stateProvider.state('settings',{url:'/admin/settings',templateUrl:'js/settings/views/settings.html',controller:'settingsController'});});app.controller('settingsController',function($rootScope,$state,$scope,$http,SettingService,SessionService){if(!SessionService.getUser()){$state.go('admin');}$scope.user = SessionService.getUser();$scope.profile = SessionService.getUser();$scope.updateProfileWithPicture = function(data){$scope.processing = true;if(typeof $scope.profilepic === 'undefined'){saveToDb(null,$scope.profile.profilePicture);}else {SettingService.uploadFile($scope.profilepic.file).then(function(res){if(res.success){saveToDb(res,res.data.Location);}});}function saveToDb(res,url){SettingService.updateAdminProfile({username:data.name,pictureUrl:url}).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;$.Zebra_Dialog('Profile updated Successfully');})['catch'](function(){});}};$scope.updatePassword = function(data){if(data.newPassword != data.confirmPassword){$.Zebra_Dialog('Password doesn\'t match with confirm password');return;}else {$scope.processing = true;SettingService.updateAdminProfile({password:data.newPassword}).then(function(res){$scope.processing = false;$.Zebra_Dialog('Password changed successfully.');})['catch'](function(){});}};});app.factory('SettingService',['$http',function($http){function updateAdminProfile(data){return $http.post('/api/users/updateAdminProfile',data);}function getSaltPassword(data){return $http.get('/api/users/getSaltPassword/pswd=' + data.password);}function uploadFile(data){var fd=new FormData();fd.append('file',data);return $http({method:'POST',url:'/api/users/profilePicUpdate',headers:{'Content-Type':undefined},tranformRequest:angular.identify,data:fd}).then(function(response){return response.data;});}return {getSaltPassword:getSaltPassword,updateAdminProfile:updateAdminProfile,uploadFile:uploadFile};}]);app.config(function($stateProvider){$stateProvider.state('submissions',{url:'/admin/submissions',templateUrl:'js/submissions/views/submissions.html',controller:'SubmissionController'});});app.controller('SubmissionController',function($rootScope,$state,$scope,$http,$window,AuthService,SessionService,AccountSettingServices,$sce){$scope.counter = 0;$scope.showingElements = [];$scope.marketSubmissions = [];$scope.selectedGroups = [];$scope.selectedChannelIDS = [];$scope.selectedGroupChannelIDS = [];$scope.selectedChannelName = [];$scope.adminStats = {mpEarnings:0,subEarnings:0,earnings:0,ffEarnings:0,refunds:0,refundAmount:0,future:0};$scope.allowance = 0;$scope.genre = "";$scope.displayType = 'channel';$scope.limit = 10;$scope.marketLimit = 10;$scope.isLoggedIn = SessionService.getUser()?true:false;if(!SessionService.getUser()){$state.go('admin');}$scope.user = SessionService.getUser();$scope.user.isAdmin = $scope.user.role == 'admin'?true:false;$scope.uniqueGroup = [];$scope.paidRepostAccounts = [];$scope.dynamicButton = [{"name":"SUBMITTER'S NAME","appendText":" {SUBMITTERS_NAME} "},{"name":"SUBMITTER'S EMAIL","appendText":" {SUBMITTERS_EMAIL} "},{"name":"TRACK TITLE","appendText":" {TRACK_TITLE} "},{"name":"TRACK TITLE W/ LINK","appendText":" {TRACK_TITLE_WITH_LINK} "},{"name":"TRACK ARTIST","appendText":" {TRACK_ARTIST} "},{"name":"TRACK ARTIST W/ LINK","appendText":" {TRACK_ARTIST_WITH_LINK} "},{"name":"TODAYS DATE","appendText":" {TODAYSDATE} "},{"name":"SUBMITTED TO ACCOUNT NAME","appendText":" {SUBMITTED_TO_ACCOUNT_NAME} "},{"name":"SUBMITTED ACCOUNT NAME W/ LINK","appendText":" {SUBMITTED_ACCOUNT_NAME_WITH_LINK} "}];if(window.location.href.indexOf('admin/submissions#mysubmissions') != -1){$('.nav-tabs a[href="#mysubmissions"]').tab('show');}else if(window.location.href.indexOf('admin/submissions#marketplace') != -1){$('.nav-tabs a[href="#marketplace"]').tab('show');}else if(window.location.href.indexOf('admin/submissions#managesubmissions') != -1){$('.nav-tabs a[href="#managesubmissions"]').tab('show');}$scope.sendTestMail = function(index){$scope.emailIndex = index;$scope.testEmail("testemail@artistsunlimited.com"); // $scope.showTestEmailModal = true;
// $('#emailModal').modal('show');
};$scope.testEmail = function(email){$scope.showTestEmailModal = false;$('#emailModal').modal('hide');var subject=$scope.customEmailButtons[$scope.emailIndex].subject;var body=$scope.customEmailButtons[$scope.emailIndex].emailBody;body = formatForTestEmail(body,email);subject = formatForTestEmail(subject,email);$window.open("mailto:" + email + "?body=" + body + "&subject=" + subject,"_self");};function formatForTestEmail(item,email){return encodeURIComponent(item.replace(/{SUBMITTERS_EMAIL}/g,email).replace(/{SUBMITTERS_NAME}/g,"Johnny Submitter").replace(/{TRACK_TITLE_WITH_LINK}/g,"Oliver Nelson ft. Kaleem Taylor - Ain't A Thing" + ' (https://soundcloud.com/olivernelson/oliver-nelson-ft-kaleem-taylor-aint-a-thing-3)').replace(/{TRACK_TITLE}/g,"Oliver Nelson ft. Kaleem Taylor - Ain't A Thing").replace(/{TRACK_ARTIST_WITH_LINK}/g,"Oliver Nelson" + ' (https://soundcloud.com/olivernelson)').replace(/{TRACK_ARTIST}/g,"Oliver Nelson").replace(/{SUBMITTED_TO_ACCOUNT_NAME}/g,"La Tropical").replace(/{SUBMITTED_ACCOUNT_NAME_WITH_LINK}/g,'La Tropical (https://soundcloud.com/latropical)').replace('{TODAYSDATE}',new Date().toLocaleDateString()));}$scope.getSubmissionsByGenre = function(){$scope.showingElements = [];$scope.loadSubmissions();};$scope.togglePoolOn = function(){ // $scope.user.repostSettings.poolOn = !$scope.user.repostSettings.poolOn;
SessionService.create($scope.user);AccountSettingServices.updateAdminProfile({'repostSettings.poolOn':$scope.user.repostSettings.poolOn});};$scope.whatIsPool = function(){$.Zebra_Dialog("By enabling the AU Marketplace you agree that every submission that you accept will also be shared to all other AU Admins in the AU Marketplace. By doing so, you will gain access to all submissions from other admins that have enabled the AU MarketPlace. As well, you will make 10% of every sale that is made from a submission that originated to one of your network accounts.");};$scope.loadSubmissions = function(){var genre=$scope.genre.replace(/[0-9]/g,'');var selectedGenre=genre.replace('(','').replace(')','').trim();$scope.processing = true;$http.get('/api/submissions/unaccepted?genre=' + encodeURIComponent(selectedGenre) + "&skip=" + $scope.showingElements.length + "&limit=" + $scope.limit).then(function(res){$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){d.selectedChannelName = [];d.selectedChannelIDS = [];d.selectedGroups = [];d.playerURL = $sce.trustAsResourceUrl("https://w.soundcloud.com/player/?url=http://api.soundcloud.com/tracks/" + d.trackID + "&auto_play=false&show_artwork=true");$scope.showingElements.push(d);});}if(!$scope.$$phase)$scope.$apply();}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: Could not get channels.');console.log(err);});};$scope.loadMore = function(){$scope.loadSubmissions();};$scope.loadMoreMarket = function(){$scope.loadMarketSubmissions();};$scope.loadMarketSubmissions = function(){var genre=$scope.genre.replace(/[0-9]/g,'');var selectedGenre=genre.replace('(','').replace(')','').trim();$scope.processing = true;$http.get('/api/submissions/getMarketPlaceSubmission?genre=' + encodeURIComponent(selectedGenre) + "&skip=" + $scope.marketSubmissions.length + "&limit=" + $scope.marketLimit).then(function(res){$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){d.selectedChannelName = [];d.selectedChannelIDS = [];d.selectedGroups = [];d.pooledSendDate = new Date(d.pooledSendDate);d.playerURL = $sce.trustAsResourceUrl("https://w.soundcloud.com/player/?url=http://api.soundcloud.com/tracks/" + d.trackID + "&auto_play=false&show_artwork=true");$scope.marketSubmissions.push(d);});}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error: Could not get channels.');console.log(err);});};$scope.checkboxStyle = function(sub,chan){if(sub.approvedChannels.includes(chan.user.id))return {'background-color':'#E5FEE5','border-radius':'5px','padding':'5px 5px'};else return {};};$scope.changeBox = function(sub,chan){var index=sub.selectedChannelIDS.indexOf(chan.user.id);if(index == -1){sub.selectedChannelIDS.push(chan.user.id);sub.selectedChannelName.push(chan.user.username);}else {sub.selectedChannelIDS.splice(index,1);sub.selectedChannelName.splice(index,1);}};$scope.changeBoxGroup = function(sub,group){var ind=sub.selectedGroups.indexOf(group);if(sub[group]){if(ind == -1){sub.selectedGroups.push(group);}}else {sub.selectedGroups.splice(ind,1);}$scope.selectedGroupChannelIDS = [];sub.selectedGroups.forEach(function(g){$scope.user.paidRepost.forEach(function(acc){if(acc.groups.indexOf(g) != -1){if($scope.selectedGroupChannelIDS.indexOf(acc.id) == -1){$scope.selectedGroupChannelIDS.push(acc.id);}}});});};$scope.save = function(submi){submi.selectedChannelIDS.forEach(function(cid){if($scope.selectedGroupChannelIDS.indexOf(cid) == -1){$scope.selectedGroupChannelIDS.push(cid);}});submi.channelIDS = $scope.selectedGroupChannelIDS;if(submi.channelIDS.length == 0){$.Zebra_Dialog("You have not selected any channels to accept repost.");}else {delete submi.selectedGroups;delete submi.selectedChannelIDS;delete submi.selectedChannelName;submi.password = $rootScope.password;$scope.processing = true;$http.put("/api/submissions/save",submi).then(function(sub){$scope.showingElements.splice($scope.showingElements.indexOf(submi),1);$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save");});}};$scope.ignore = function(submission){$scope.processing = true;$http['delete']('/api/submissions/ignore/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Ignore");});};$scope.decline = function(submission){$scope.processing = true;$http['delete']('/api/submissions/decline/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.showingElements.indexOf(submission);$scope.showingElements.splice(index,1);$scope.processing = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Decline");});};$scope.marketSave = function(submi){if($scope.allowance <= 0)$.Zebra_Dialog('You are out of Marketplace Credits. For every direct submission you respond to, you will be given 5 more Marketplace Credits.');else if($scope.marketSubmissions.indexOf(submi) != 0)$.Zebra_Dialog('Please respond to the first submission first.');else {submi.selectedChannelIDS.forEach(function(cid){if($scope.selectedGroupChannelIDS.indexOf(cid) == -1){$scope.selectedGroupChannelIDS.push(cid);}});submi.pooledChannelIDS = submi.pooledChannelIDS.concat($scope.selectedGroupChannelIDS);delete submi.selectedGroups;delete submi.selectedChannelIDS;delete submi.selectedChannelName;submi.password = $rootScope.password;$scope.processing = true;$http.put("/api/submissions/save",submi).then(function(sub){$scope.marketSubmissions.splice($scope.marketSubmissions.indexOf(submi),1);$scope.processing = false;$scope.allowance--;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Save");});}};$scope.marketIgnore = function(submission){if($scope.allowance <= 0)$.Zebra_Dialog('You are out of Marketplace Credits. For every submission you give to the Marketplace, you will be given 5 Marketplace Credits.');else if($scope.marketSubmissions.indexOf(submission) != 0)$.Zebra_Dialog('Please respond to the first submission first.');else {$scope.processing = true;$http['delete']('/api/submissions/ignore/' + submission._id + '/' + $rootScope.password).then(function(res){var index=$scope.marketSubmissions.indexOf(submission);$scope.marketSubmissions.splice(index,1);$scope.processing = false;$scope.allowance--;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: did not Ignore");});}};$scope.openEmailClient = function(sub,item){var toEmail=formatForEmailClient(item.toEmail,sub);var subject=item.subject != undefined?formatForEmailClient(item.subject,sub):"";var body=item.emailBody != undefined?formatForEmailClient(item.emailBody,sub):"";$window.open("mailto:" + encodeURIComponent(toEmail) + "?subject=" + encodeURIComponent(subject) + "&body=" + encodeURIComponent(body),"_self");};function formatForEmailClient(text,sub){return text.replace(/{SUBMITTERS_EMAIL}/g,sub.email).replace(/{SUBMITTERS_NAME}/g,sub.name).replace(/{TRACK_TITLE_WITH_LINK}/g,sub.title + ' (' + sub.trackURL + ')').replace(/{TRACK_TITLE}/g,sub.title).replace(/{TRACK_ARTIST_WITH_LINK}/g,sub.trackArtist + ' (' + sub.trackArtistURL + ')').replace(/{TRACK_ARTIST}/g,sub.trackArtist).replace(/{SUBMITTED_TO_ACCOUNT_NAME}/g,sub.userID.soundcloud.username).replace(/{SUBMITTED_ACCOUNT_NAME_WITH_LINK}/g,sub.userID.soundcloud.username + ' (' + sub.userID.soundcloud.permalinkURL + ')').replace(/{TODAYSDATE}/g,new Date().toLocaleDateString());}$scope.getSubmissionByGenre = function(){$http.get('/api/submissions/getGroupedSubmissions').then(function(res){var unacceptedSubmission=res.data;for(var i=0;i < $scope.genreArray.length;i++) {for(var j=0;j < unacceptedSubmission.length;j++) {if($scope.genreArray[i] == unacceptedSubmission[j]._id){$scope.genreArray[i] = $scope.genreArray[i] + ' (' + unacceptedSubmission[j].total_count + ')';}}}});};$scope.customEmailButtons = $scope.user.submissionsCustomEmailButtons.length > 0?$scope.user.submissionsCustomEmailButtons:[];if($scope.customEmailButtons.length == 0){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});}$scope.saveSettings = function(){var valid=true;var re=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;angular.forEach($scope.customEmailButtons,function(cb){if(!cb.toEmail.includes("{SUBMITTERS_EMAIL}")){var validEmail=re.test(cb.toEmail);if(!validEmail || !cb.buttonText){valid = false;}}});if(!valid){$.Zebra_Dialog('Please enter {SUBMITTERS_EMAIL} or a well formatted email address in all To Email fields and a title for each button.');return;}$scope.processing = true;$scope.user.submissionsCustomEmailButtons = $scope.customEmailButtons;$http.post('/api/database/updateSubmissionsCustomEmailButtons',{customEmailButtons:$scope.user.submissionsCustomEmailButtons}).then(function(res){$scope.processing = false;SessionService.create(res.data);$scope.user = SessionService.getUser();});};$scope.addItem = function(){$scope.customEmailButtons.push({toEmail:'',subject:'',emailBody:'',buttonText:'',buttonBgColor:''});};$http.get('/api/submissions/counts').then(function(res){$scope.counts = res.data;});$scope.removeItem = function(index){$scope.customEmailButtons.splice(index,1);};$scope.addEventClass = function(index,type){$('.selectedBox').removeClass("selectedBox");$("." + type + index).addClass("selectedBox");};$scope.appendBody = function(btn){if($('.selectedBox').length){var boxIndex=$('.selectedBox').attr("index");var cursorPos=$('.selectedBox').prop('selectionStart');var v=$('.selectedBox').val();var textBefore=v.substring(0,cursorPos);var textAfter=v.substring(cursorPos,v.length);var newtext=textBefore + btn.appendText + textAfter;$('.selectedBox').val(newtext);$('.selectedBox').trigger('input');$('.selectedBox').removeClass("selectedBox");}};$scope.getPaidRepostAccounts = function(){$http.get('/api/submissions/getPaidRepostAccounts').then(function(res){$scope.paidRepostAccounts = res.data;for(var i=0;i < $scope.paidRepostAccounts.length;i++) {$scope.paidRepostAccounts[i].groups.forEach(function(acc){if(acc != "" && $scope.uniqueGroup.indexOf(acc) === -1){$scope.uniqueGroup.push(acc);}});}});}; /*Sold Reposts*/$scope.getSoldReposts = function(){$http.post('/api/submissions/getSoldReposts',{lowDate:$scope.lowDate,highDate:$scope.highDate}).then(function(res){$scope.adminStats.mpEarnings = 0;$scope.adminStats.subEarnings = 0;$scope.adminStats.earnings = 0;$scope.adminStats.refunds = 0;$scope.adminStats.refundAmount = 0;$scope.adminStats.future = 0;res.data.forEach(function(el){try{if(el.data.payout){if(el.data.payout.batch_header){el.payout = "$" + new Number(el.data.payout.batch_header.amount.value).toFixed(2) + " Earned";if(el.marketplace)$scope.mpEarnings += new Number(el.data.payout.batch_header.amount.value);else $scope.subEarnings += new Number(el.data.payout.batch_header.amount.value);$scope.adminStats.earnings += new Number(el.data.payout.batch_header.amount.value);}else {el.payout = "$" + new Number(el.data.payout.amount.total).toFixed(2) + " Refunded";$scope.adminStats.refunds += 1;$scope.adminStats.refundAmount += new Number(el.data.payout.amount.total);}}else {el.payout = "Incomplete";$scope.adminStats.future += 1;}}catch(e) {console.log(e);};el.shareLink = window.location.origin + "/repostevents/" + el.user.soundcloud.pseudoname + "/" + el.data.pseudoname;});res.data.sort(function(a,b){return new Date(b.data.day) - new Date(a.data.day);});$scope.soldReposts = res.data;$scope.adminStats.soldReposts = res.data.length;});$scope.sortType = 'name';$scope.sortReverse = false;$scope.searchTerm = '';};$scope.getSubmissionData = function(){$http.post('/api/submissions/submissionData',{lowDate:$scope.lowDate,highDate:$scope.highDate}).then(function(res){$scope.adminStats.repSubCount = res.data.directSubs.length;$scope.adminStats.premSubCount = res.data.premiereSubs.length;var directSubAmounts={};res.data.directSubs.forEach(function(el){if(!!directSubAmounts[el.userID])directSubAmounts[el.userID] += 1;else directSubAmounts[el.userID] = 1;$scope.adminStats.ffEarnings = 0;$scope.adminStats.ffEarnings += !!el.ffEarnings?el.ffEarnings:0;});var premiereSubAmounts={};res.data.premiereSubs.forEach(function(el){if(!!premiereSubAmounts[el.userID])premiereSubAmounts[el.userID] += 1;else premiereSubAmounts[el.userID] = 1;});$scope.accounts = res.data.accounts;$scope.accounts.forEach(function(acct){acct.repSubCount = !!directSubAmounts[acct.userID._id]?directSubAmounts[acct.userID._id]:0;acct.premSubCount = !!premiereSubAmounts[acct.userID._id]?premiereSubAmounts[acct.userID._id]:0; // acct.paidSubs = 0;
// acct.acceptedSubs = 0;
// res.data.acceptedSubs.forEach(function(el) {
//   if (el.channelIDS.includes(acct.userID.soundcloud.id) || el.pooledChannelIDS.includes(acct.userID.soundcloud.id)) {
//     acct.acceptedSubs++;
//   }
//   var found = false;
//   el.paidPooledChannels.forEach(function(chan) {
//     if (chan.user.id == acct.userID.soundcloud.id) found = true;
//   })
//   el.paidChannels.forEach(function(chan) {
//     if (chan.user.id == acct.userID.soundcloud.id) found = true;
//   })
//   if (found) acct.paidSubs++;
// })
// acct.payAcceptRatio = acct.paidSubs / acct.acceptedSubs * 100;
});function getAcctReposts(){setTimeout(function(){if($scope.soldReposts){$scope.adminStats.earnings += $scope.adminStats.ffEarnings;var reposts={};$scope.soldReposts.forEach(function(el){if(!!reposts[el.data.userID])reposts[el.data.userID].push(el);else reposts[el.data.userID] = [el];});$scope.accounts.forEach(function(acct){acct.repostCount = !!reposts[acct.userID.soundcloud.id]?reposts[acct.userID.soundcloud.id].length:0;acct.earnings = 0;acct.refunds = 0;acct.refundAmount = 0;acct.future = 0;if(!!reposts[acct.userID.soundcloud.id]){reposts[acct.userID.soundcloud.id].forEach(function(el){if(el.data.payout){if(el.data.payout.batch_header){acct.earnings += new Number(el.data.payout.batch_header.amount.value);}else {acct.refunds += 1;acct.refundAmount += new Number(el.data.payout.amount.total);}}else {acct.future += 1;}});}});if(!$scope.$$phase)$scope.$apply();}else getAcctReposts();},500);}getAcctReposts();});};$scope.recalculate = function(){$scope.soldReposts = undefined;$scope.accounts = undefined;$scope.adminStats = {};$scope.getSoldReposts();$scope.getSubmissionData();};$scope.changeScale = function(){console.log($scope.scale);$scope.highDate = new Date();$scope.lowDate = new Date(new Date().getTime() - parseInt($scope.scale) * 24 * 3600000);$scope.recalculate();};$scope.incrementRange = function(){$scope.highDate = new Date($scope.highDate.getTime() + parseInt($scope.scale) * 24 * 3600000);$scope.lowDate = new Date($scope.lowDate.getTime() + parseInt($scope.scale) * 24 * 3600000);$scope.recalculate();};$scope.decrementRange = function(){$scope.highDate = new Date($scope.highDate.getTime() - parseInt($scope.scale) * 24 * 3600000);$scope.lowDate = new Date($scope.lowDate.getTime() - parseInt($scope.scale) * 24 * 3600000);$scope.recalculate();};$scope.scale = "7";$scope.changeScale();$scope.getPaidRepostAccounts();$scope.loadSubmissions();$scope.getDiffTimeText = function(date){var t=Math.floor((new Date(date).getTime() - new Date().getTime()) / 1000);var days,hours,minutes,seconds;hours = Math.floor(t / 3600);t -= hours * 3600;minutes = Math.floor(t / 60);return [hours + 'h',minutes + 'm'].join(' ');};$http.get('/api/submissions/currentAllowance').then(function(res){$scope.allowance = res.data.allowance;if(!$scope.$$phase)$scope.$apply();}).then(null,console.log);});app.directive('autofill',function($http){return {templateUrl:'js/common/directives/autofill/autofill.html',restrict:'E',scope:false,controller:['$scope',function autofillController($scope){$scope.autoFillTracks = [];$scope.removeQueueSong = function(song){var index=$scope.user.queue.indexOf(song.id);$scope.user.queue.splice(index,1);$scope.saveUser();$scope.loadQueueSongs();};$scope.removeAll = function(){$scope.user.queue = [];$scope.saveUser();$scope.loadQueueSongs();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;$scope.user.queue.push($scope.newQueueID);$scope.saveUser();$scope.loadQueueSongs();}; /*sort start*/$scope.sortableOptions = {stop:function stop(e,ui){var logEntry=$scope.autoFillTracks.map(function(i){return i.id;});$scope.user.queue = logEntry;$scope.saveUser();}}; /*sort end*/$scope.loadQueueSongs = function(queue){if($scope.disallowQueueLoad)return;$scope.disallowQueueLoad = true;setTimeout(function(){$scope.disallowQueueLoad = false;},1000);var autofillWidget=SC.Widget('autofillPlayer');$scope.autoFillTracks = [];$scope.user.queue.forEach(function(trackID,index){SC.get('/tracks/' + trackID).then(function(data){$scope.autoFillTracks[index] = data;if(!$scope.$$phase)$scope.$apply();}).then(null,function(err){if(err.status == 403){(function(){var loadTrack=function loadTrack(id,ind){if(!$scope.loadingAFWidget){$scope.loadingAFWidget = true;$scope.showAutofillPlayer = true;autofillWidget.load("http://api.soundcloud.com/tracks/" + id,{auto_play:false,show_artwork:false,callback:function callback(){autofillWidget.getCurrentSound(function(track){$scope.loadingAFWidget = false;$scope.showAutofillPlayer = false;$scope.autoFillTracks[ind] = track;if(!$scope.$$phase)$scope.$apply();});}});}else {setTimeout(function(){loadTrack(id,ind);},300);}};loadTrack(trackID,index);})();}else if(err.status == 404){$scope.user.queue.splice(index,1);$scope.saveUser();$scope.loadQueueSongs();}}).then(null,console.log);});};if($scope.user && $scope.user.queue && !$scope.alreadyLoaded){$scope.loadQueueSongs();$scope.alreadyLoaded == true;}$scope.choseAutoFillTrack = function(track){$scope.newQueueID = track.id;$scope.addSong();};$scope.choseAutoFillPlaylist = function(playlist){playlist.tracks.forEach(function(track){if($scope.user.queue.indexOf(track.id) == -1)$scope.user.queue.push(track.id);});$scope.saveUser();$scope.loadQueueSongs();};$scope.afcount = 0;$scope.getAutoFillTracks = function(){function waitForAutofill(){$scope.processing = true;setTimeout(function(){if(!$scope.showAutofillPlayer){$scope.processing = false;if(!$scope.$$phase)$scope.$apply();$scope.getAutoFillTracks();}else {waitForAutofill();}},500);}if($scope.user.queue.length > 0){if($scope.autoFillTracks.includes(undefined) || $scope.autoFillTracks.length < $scope.user.queue.length){waitForAutofill();return;}var track=JSON.parse(JSON.stringify($scope.autoFillTracks[$scope.afcount]));$scope.afcount = ($scope.afcount + 1) % $scope.autoFillTracks.length;$scope.makeEvent.trackID = track.id;if(window.location.href.includes('scheduler') && $scope.findUnrepostOverlap() && track.user.id != $scope.user.id){if($scope.afcount == 0){$scope.showPlayer = false;$scope.makeEvent.trackID = undefined;$.Zebra_Dialog("No more autofill songs can be scheduled here. You are not allowed to repost a track within 24 hours of an unrepost of that track or within 48 hours of a repost of the same track.");}else {$scope.makeEvent.trackID = undefined;$scope.getAutoFillTracks();}return;}else {if($scope.showOverlay)$scope.choseTrack1(track);else $scope.choseTrack(track);}}else {$scope.showOverlay = false;$.Zebra_Dialog('You do not have any tracks by other artists in your autofill list.',{'type':'question','buttons':[{caption:'Cancel',callback:function callback(){}},{caption:'Autofill',callback:function callback(){$scope.tabSelected = true;$('.nav-tabs a[href="#managereposts"]').tab('show');}}]});}};}]};});function stackTrace(){var err=new Error();return err.stack;}app.directive('fileInput',['$parse',function($parse){return {restrict:'A',link:function link(scope,elm,attrs){elm.bind('change',function(){$parse(attrs.fileInput) // the attr is where we define 'file' as the model
.assign(scope,elm[0].files[0]);scope.$apply();});}};}]);app.directive('dlgate',function($http){return {templateUrl:'js/common/directives/downloadGateway/downloadGateway.html',restrict:'E',scope:false,controller:function dlGateController($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,AdminDLGateService){$scope.showTitle = [];$scope.user = SessionService.getUser();$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[],playlists:[],youtube:[],twitter:[],showDownloadTracks:'user',admin:$scope.user.admin,file:{}};var path=$window.location.pathname;$scope.isAdminRoute = false;if(path.indexOf("admin/") != -1){$scope.isAdminRoute = true;}else {$scope.isAdminRoute = false;}$scope.profile = {}; /* Init track list and trackListObj*/$scope.trackList = [];$scope.trackListObj = null; /* Method for resetting Download Gateway form */$scope.trackListChange = function(index){ /* Set booleans */$scope.isTrackAvailable = false;$scope.processing = true; /* Set track data */var track=$scope.trackListObj;$scope.track.trackURL = track.permalink_url;$scope.track.trackTitle = track.title;$scope.track.trackID = track.id;$scope.track.artistID = track.user.id;$scope.track.description = track.description;$scope.track.trackArtworkURL = track.artwork_url?track.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = track.user.avatar_url?track.user.avatar_url:'';$scope.track.artistURL = track.user.permalink_url;$scope.track.artistUsername = track.user.username;$scope.track.SMLinks = [];SC.get('/users/' + $scope.track.artistID + '/web-profiles').then(handleWebProfiles)['catch'](handleError);function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();}function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;if(!$scope.$$phase)$scope.$apply();}};$scope.openYoutubeModal = function(){$('#youtube').modal('show');};$scope.removeSMLink = function(index){$scope.track.SMLinks.splice(index,1);};$scope.saveDownloadGate = function(){if($scope.track.youtube && $scope.track.youtube.length > 0){$scope.track.socialPlatformValue = $scope.track.youtube.toString();}else if($scope.track.twitter && $scope.track.twitter.length > 0){$scope.track.socialPlatformValue = $scope.track.twitter.toString();}if(!($scope.track.downloadURL.includes('http') || $scope.track.file && $scope.track.file.name)){$.Zebra_Dialog('Provide a download file or link (include "http://").');return false;}if(!$scope.track.trackID){$.Zebra_Dialog('Track Not Found');return false;}$scope.processing = true;var sendObj=new FormData();for(var prop in $scope.track) {sendObj.append(prop,$scope.track[prop]);}var artists=$scope.track.artists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var playlists=$scope.track.playlists.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});sendObj.append('artists',JSON.stringify(artists));var SMLinks={};$scope.track.SMLinks.forEach(function(item){SMLinks[item.key] = item.value;});sendObj.append('SMLinks',JSON.stringify(SMLinks));if($scope.track.playlists){sendObj.append('playlists',JSON.stringify($scope.track.playlists));}var options={method:'POST',url:'/api/database/downloadurl',headers:{'Content-Type':undefined},transformRequest:angular.identity,data:sendObj};$http(options).then(function(res){$scope.processing = false;if($stateParams.submission){if($scope.isAdminRoute){$state.go('adminDownloadGatewayList',{'submission':$stateParams.submission});}else {$state.go('artistToolsDownloadGatewayList',{'submission':$stateParams.submission});}}else {if($scope.user.soundcloud.id == $scope.track.artistID){$.Zebra_Dialog('Download gateway was saved and added to the track.');}else {$.Zebra_Dialog('Download gateway saved.');}if($scope.isAdminRoute){$state.go('adminDownloadGateway');}else {$state.go('artistToolsDownloadGatewayList');}}}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Error in saving url");$scope.processing = false;});};$scope.checkIfEdit = function(){if($stateParams.gatewayID){$scope.getDownloadGateway($stateParams.gatewayID);}};$scope.getTrackListFromSoundcloud = function(){var profile=SessionService.getUser();if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();})['catch'](function(response){$scope.processing = false;if(!$scope.$$phase)$scope.$apply();});}};$scope.checkIfSubmission = function(){if($stateParams.submission){if($state.includes('artistToolsDownloadGatewayNew')){$scope.track.trackURL = $rootScope.submission.trackURL;$scope.trackURLChange();return;}$scope.openThankYouModal.thankYou($stateParams.submission._id);$rootScope.submission = null;}};$scope.resolveYoutube = function(youtube){if(!(youtube.includes('/channel/') || youtube.includes('/user/'))){$.Zebra_Dialog('Enter a valid Youtube channel url.');return;}else {var length=$scope.track.youtube.length;if($scope.track.youtube.indexOf(youtube) == -1){$scope.track.youtube[length - 1] = youtube;}}};$scope.resolveTwitter = function(twitter){var length=$scope.track.twitter.length;if($scope.track.twitter.indexOf(twitter) == -1){$scope.track.twitter[length - 1] = twitter;}};$scope.trackURLChange = function(){if($scope.track.trackURL !== ''){var handleTrackDataAndGetProfiles=function handleTrackDataAndGetProfiles(res){$scope.track.trackTitle = res.data.title;$scope.track.trackID = res.data.id;$scope.track.artistID = res.data.user.id;$scope.track.description = res.data.description;$scope.track.trackArtworkURL = res.data.artwork_url?res.data.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = res.data.user.avatar_url?res.data.user.avatar_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistURL = res.data.user.permalink_url;$scope.track.artistUsername = res.data.user.username;$scope.track.SMLinks = [];return SC.get('/users/' + $scope.track.artistID + '/web-profiles');};var handleWebProfiles=function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;};var handleError=function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;};$scope.isTrackAvailable = false;$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.trackURL}).then(handleTrackDataAndGetProfiles).then(handleWebProfiles)['catch'](handleError);}};$scope.SMLinkChange = function(index){function getLocation(href){var location=document.createElement("a");location.href = href;if(location.host == ""){location.href = location.href;}return location;}var location=getLocation($scope.track.SMLinks[index].value);var host=location.hostname.split('.')[0];if(host === 'www')host = location.hostname.split('.')[1];var findLink=$scope.track.SMLinks.filter(function(item){return item.key === host;});if(findLink.length > 0){return false;}$scope.track.SMLinks[index].key = host;};$scope.addSMLink = function(){$scope.track.SMLinks.push({key:'',value:''});};$scope.clearOrFile = function(){if($scope.track.downloadURL){angular.element("input[type='file']").val(null);}};$scope.artistURLChange = function(index){var artist={};if($scope.track.artists[index].url != ""){$scope.processing = true;ArtistToolsService.resolveData({url:$scope.track.artists[index].url}).then(function(res){$scope.track.artists[index].avatar = res.data.avatar_url?res.data.avatar_url:'';$scope.track.artists[index].username = res.data.username;$scope.track.artists[index].id = res.data.id;$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});}};$scope.choseArtist = function(artist){var permanentLink={};$scope.track.artists.push({url:artist.permalink_url,avatar:artist.avatar_url?artist.avatar_url:'',username:artist.username,id:artist.id,permanentLink:true});};$scope.chosePlaylist = function(playlist){var permanentLink={};$scope.track.playlists.push({url:playlist.permalink_url,avatar:playlist.avatar_url?playlist.avatar_url:'',title:playlist.title,id:playlist.id});};$scope.choseTrack = function(item){$scope.searchSelection = [];$scope.searchError = undefined;$scope.searchString = item.displayName;$scope.track.trackTitle = item.title;$scope.track.trackID = item.id;$scope.track.artistID = item.user.id;$scope.track.description = item.description;$scope.track.trackArtworkURL = item.artwork_url?item.artwork_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistArtworkURL = item.user.avatar_url?item.user.avatar_url.replace('large.jpg','t500x500.jpg'):'';$scope.track.artistURL = item.user.permalink_url;$scope.track.artistUsername = item.user.username;$scope.track.SMLinks = [];SC.get('/users/' + $scope.track.artistID + '/web-profiles').then(handleWebProfiles)['catch'](handleError);function handleWebProfiles(profiles){profiles.forEach(function(prof){if(['twitter','youtube','facebook','spotify','soundcloud','instagram'].indexOf(prof.service) != -1){$scope.track.SMLinks.push({key:prof.service,value:prof.url});}});$scope.isTrackAvailable = true;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();}function handleError(err){$scope.track.trackID = null;$.Zebra_Dialog('Song not found or forbidden');$scope.processing = false;if(!$scope.$$phase)$scope.$apply();}};$scope.removeArtist = function(index){$scope.track.artists.splice(index,1);};$scope.addArtist = function(){$scope.track.artists.push({url:'',avatar:'',username:'',id:-1,permanentLink:false});};$scope.addPlaylist = function(){$scope.track.playlists.push({url:'',avatar:'',title:'',id:''});};$scope.removePlaylist = function(index){$scope.track.playlists.splice(index,1);};$scope.playlistURLChange = function(index){$scope.processing = true;AdminDLGateService.resolveData({url:$scope.track.playlists[index].url}).then(function(res){$scope.track.playlists[index].avatar = res.data.artwork_url;$scope.track.playlists[index].title = res.data.title;$scope.track.playlists[index].id = res.data.id;$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog('Playlist not found');$scope.processing = false;});};function resetDownloadGateway(){$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false};$scope.track = {artistUsername:'',trackTitle:'',trackArtworkURL:'',SMLinks:[],like:false,comment:false,repost:false,artists:[{url:'',avatar:'',username:'',id:-1,permanentLink:false}],showDownloadTracks:'user'};angular.element("input[type='file']").val(null);} /* Method for getting DownloadGateway in case of edit */$scope.getDownloadGateway = function(downloadGateWayID){ // resetDownloadGateway();
$scope.processing = true;ArtistToolsService.getDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.isTrackAvailable = true;$scope.track = res.data;$scope.track.youtube = [];$scope.track.twitter = [];if($scope.track.socialPlatformValue){if($scope.track.socialPlatform == 'youtubeSubscribe'){if($scope.track.socialPlatformValue.indexOf(',') > -1){var urls=$scope.track.socialPlatformValue.split(',');for(var i=0;i < urls.length;i++) {$scope.track.youtube.push(urls[i]);}}else {$scope.track.youtube.push($scope.track.socialPlatformValue);}}else if($scope.track.socialPlatform == 'twitterFollow'){$scope.track.twitter = [];if($scope.track.socialPlatformValue.indexOf(',') > -1){var urls=$scope.track.socialPlatformValue.split(',');for(var i=0;i < urls.length;i++) {$scope.track.twitter.push(urls[i]);}}else {$scope.track.twitter.push($scope.track.socialPlatformValue);}}}$scope.searchString = $scope.track.trackTitle;var SMLinks=res.data.SMLinks?res.data.SMLinks:{};var permanentLinks=res.data.permanentLinks?res.data.permanentLinks:[''];var SMLinksArray=[];var permanentLinksArray=[];for(var link in SMLinks) {SMLinksArray.push({key:link,value:SMLinks[link]});}permanentLinks.forEach(function(item){permanentLinksArray.push({url:item});});if(!$scope.track.showDownloadTracks){$scope.track.showDownloadTracks = 'user';}$scope.track.SMLinks = SMLinksArray;$scope.track.permanentLinks = permanentLinksArray;$scope.track.playlistIDS = []; // $scope.track.showDownloadTracks = ($scope.track.showDownloadTracks === 'user') ? true : false;
//console.log($scope.track);
$scope.processing = false;}function handleError(res){$scope.processing = false;}};$scope.clearOrInput = function(){$scope.track.downloadURL = "";};$scope.preview = function(track){window.localStorage.setItem('trackPreviewData',JSON.stringify(track));var url=$scope.isAdminRoute?$state.href('adminDownloadGatewayPreview'):$state.href('artistToolsDownloadGatewayPreview'); //var url = $state.href('artistToolsDownloadGatewayPreview');
$window.open(url,'_blank');};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.addYouTubeUrl = function(){$scope.track.youtube.push('');};$scope.removeYouTubes = function(index){$scope.track.youtube.splice(index,1);};$scope.addTwitterUrl = function(){$scope.track.twitter.push('');};$scope.removeTwitter = function(index){$scope.track.twitter.splice(index,1);};$scope.getUserNetwork();$scope.verifyBrowser();}};});app.directive('dllist',function($http){return {templateUrl:'js/common/directives/downloadGateway/list.html',restrict:'E',scope:false,controller:function dlListController($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService){$scope.user = SessionService.getUser();if(!SessionService.getUser()){var path=window.location.pathname;if(path == "/artistTools/profile"){$window.localStorage.setItem('returnstate','artistToolsProfile');}else if(path == "/artistTools/downloadGateway"){$window.localStorage.setItem('returnstate','artistToolsDownloadGatewayList');}$state.go('login');}else {$window.localStorage.removeItem('returnstate');}var path=window.location.pathname;$scope.isAdminRoute = false;if(path.indexOf("admin/") != -1){$scope.isAdminRoute = true;}else {$scope.isAdminRoute = false;}$scope.linkedAccountData = {};$scope.thirdPartyInfo = $scope.user.thirdPartyInfo?$scope.user.thirdPartyInfo:null;$scope.hasThirdPartyFields = $scope.user.thirdPartyInfo?true:false; /* Init boolean variables for show/hide and other functionalities */$scope.processing = false;$scope.isTrackAvailable = false;$scope.message = {val:'',visible:false}; /* Apply page end */$scope.gotoSettings = function(){SessionService.addActionsfoAccount('Admin',$scope.user._id);$state.go("basicstep1");}; /* Init downloadGateway list */$scope.downloadGatewayList = []; /* Init modal instance variables and methods */$scope.modalInstance = {};$scope.modal = {};$scope.openModal = {downloadURL:function downloadURL(_downloadURL3){$scope.modal.downloadURL = _downloadURL3;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'downloadURL.html',controller:'ArtistToolsController',scope:$scope});}}; //overlay autofill track start//
$scope.linkedAccounts = [];$scope.autoFillTracks = [];$scope.trackList = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.tracksQueue = [];$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.processing = true;$scope.changeQueueSong();};$scope.showThridPartyBox = function(){$scope.hasThirdPartyFields = true;};$scope.permanentLinks = [];$scope.choseArtist = function(artist){var permanentLink={};$scope.profile.data.permanentLinks.push({url:artist.permalink_url,avatar:artist.avatar_url?artist.avatar_url:'',username:artist.username,id:artist.id,permanentLink:true});$scope.saveProfileInfo();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;if($scope.tracksQueue.length > 0){for(var i=0;i < $scope.tracksQueue.length;i++) {if($scope.user.queue.indexOf($scope.tracksQueue[i]) == -1){$scope.user.queue.push($scope.tracksQueue[i]);}}}else {if($scope.newQueueID != null){$scope.user.queue.push($scope.newQueueID);}}$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.tracksQueue = [];};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;if(track.kind == "playlist"){var tracksArr=track.tracks;angular.forEach(tracksArr,function(t){$scope.newQueueID = t.id;$scope.tracksQueue.push($scope.newQueueID);});}else {$scope.newQueue = track;$scope.newQueueID = track.id;}$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;$scope.loadQueueSongs(); // $window.location.reload();
}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});$('#autoFillTrack').modal('hide');};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;$scope.$apply();})['catch'](function(response){$scope.processing = false;$scope.$apply();});}};$scope.removeQueueSong = function(index){$scope.user.queue.splice(index,1);$scope.saveUser(); //$scope.loadQueueSongs();
};$scope.loadQueueSongs = function(queue){$scope.autoFillTracks = [];$scope.user.queue.forEach(function(songID){SC.get('/tracks/' + songID).then(function(track){$scope.autoFillTracks.push(track);$scope.$digest();},console.log);});};if($scope.user && $scope.user.queue){$scope.loadQueueSongs();} //overlay autofill track end//
$scope.closeModal = function(){$scope.modalInstance.close();};$scope.editProfileModalInstance = {};$scope.editProfilemodal = {};$scope.openEditProfileModal = {editProfile:function editProfile(field){$scope.profile.field = field;$timeout(function(){$scope.editProfileModalInstance = $uibModal.open({animation:true,templateUrl:'editProfile.html',controller:'ArtistToolsController',scope:$scope});},0);}};$scope.closeEditProfileModal = function(){$scope.showProfileInfo();if($scope.editProfileModalInstance.close){$scope.editProfileModalInstance.close();}};$scope.thankYouModalInstance = {};$scope.thankYouModal = {};$scope.openThankYouModal = {thankYou:function thankYou(submissionID){$scope.thankYouModal.submissionID = submissionID;$scope.modalInstance = $uibModal.open({animation:true,templateUrl:'thankYou.html',controller:'OpenThankYouModalController',scope:$scope});}};$scope.closeThankYouModal = function(){$scope.thankYouModalInstance.close();}; /* Init profile */$scope.profile = {};if($stateParams.submission){$scope.openThankYouModal.thankYou($stateParams.submission._id);}$scope.showProfileInfo = function(){$scope.profile.data = SessionService.getUser();if($scope.profile.data.permanentLinks && $scope.profile.data.permanentLinks.length === 0 || !$scope.profile.data.permanentLinks){$scope.profile.data.permanentLinks = [{url:'',avatar:'',username:'',id:-1,permanentLink:true}];};$scope.profile.isAvailable = {};$scope.profile.isAvailable.email = $scope.profile.data.email?true:false;$scope.profile.isAvailable.password = $scope.profile.data.password?true:false;$scope.profile.isAvailable.soundcloud = $scope.profile.data.soundcloud?true:false;$scope.profile.data.password = '';};$scope.saveProfileInfo = function(){$scope.message = {value:'',visible:false};var permanentLinks=$scope.profile.data.permanentLinks.filter(function(item){return item.id !== -1;}).map(function(item){delete item['$$hashKey'];return item;});var sendObj={name:'',password:'',email:'',permanentLinks:JSON.stringify(permanentLinks)};if($scope.profile.field === 'name'){sendObj.name = $scope.profile.data.name;}else if($scope.profile.field === 'password'){sendObj.password = $scope.profile.data.password;}else if($scope.profile.field === 'email'){sendObj.email = $scope.profile.data.email;}$scope.processing = true;ArtistToolsService.saveProfileInfo(sendObj).then(function(res){$scope.processing = false;if(res.data === 'Email Error'){$scope.message = {value:'Email already exists!',visible:true};return;}if(permanentLinks != ""){$scope.linkUrl = "";}SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.closeEditProfileModal();})['catch'](function(res){$scope.processing = false;$.Zebra_Dialog('error saving');});}; // Add third party credentials
// $scope.addThirdPartyDetails = function(userdata) {
//   $scope.processing = true;
//   $http.put("/api/database/thirdPartyDetails", {
//       userid: $scope.user._id,
//       data: userdata
//     })
//   .then(function(res) {
//     if(res.data){
//       SessionService.create(res.data);
//       $scope.user = SessionService.getUser();
//       $scope.processing = false;
//       $.Zebra_Dialog("Changes saved succesfully");  
//       } else {
//       $.Zebra_Dialog("Error in processing the request. Please try again.");
//       $scope.processing = false;
//     }   
//   })
//   .then(null, function(err) {
//     $.Zebra_Dialog("Error in processing the request. Please try again.");
//     $scope.processing = false;
//   });
// }
// Remove third party access from user
// $scope.removeThirdPartyAccess = function() {
//   $scope.processing = true;
//   $http.put("/api/database/deleteThirdPartyAccess", {
//       userid: $scope.user._id
//     })
//   .then(function(res) {
//     SessionService.create(res.data);
//     $scope.user = SessionService.getUser();
//     $scope.thirdPartyInfo = ($scope.user.thirdPartyInfo ? $scope.user.thirdPartyInfo : null);
//     $scope.hasThirdPartyFields = ($scope.user.thirdPartyInfo ? true : false);
//     $scope.processing = false;
//     $.Zebra_Dialog("Account removed succesfully");        
//   })
//   .then(null, function(err) {
//     $.Zebra_Dialog("Error in processing the request. Please try again.");
//     $scope.processing = false;
//   });
// }
// Save linked accounts
// $scope.saveLinkedAccount = function(data) {
//   if ($scope.hasThirdPartyFields) {
//   $scope.processing = true;
//     $http.put("/api/database/saveLinkedAccount", {
//         userid: $scope.user._id,
//         data: data
//       })
//   .then(function(res) {
//     if(res.data){
//       SessionService.create(res.data);
//       $scope.user = SessionService.getUser();
//       $rootScope.userlinkedAccounts = ($scope.user.linkedAccounts ? $scope.user.linkedAccounts : []);
//       $scope.processing = false;
//       $scope.linkedAccountData = {};
//       $.Zebra_Dialog("Account linked succesfully");   
//         } else {
//       $scope.processing = false;
//       $.Zebra_Dialog("No account found with given username and password.");   
//     }   
//   })
//   .then(null, function(err) {
//     $.Zebra_Dialog("Error in processing the request. Please try again.");
//     $scope.processing = false;
//   });
//   } else {
//     $.Zebra_Dialog("You must add third party access to this account to link another account.")
//   }
// }
// remove linked accounts
$scope.removeLinkedAccount = function(account){$rootScope.userlinkedAccounts.splice($rootScope.userlinkedAccounts.indexOf(account),1);$http.put('/api/database/networkaccount',$rootScope.userlinkedAccounts).then(function(res){$rootScope.userlinkedAccounts = res.data.channels;$rootScope.userlinkedAccounts = res.data.channels;});};$scope.removePermanentLink = function(index){$scope.profile.data.permanentLinks.splice(index,1);$scope.saveProfileInfo();};$scope.hidebutton = false;$scope.addPermanentLink = function(){if($scope.profile.data.permanentLinks.length >= 2 && !$scope.user.admin){$scope.hidebutton = true;}if($scope.profile.data.permanentLinks.length > 2 && !$scope.user.admin){return false;}$scope.profile.data.permanentLinks.push({url:'',avatar:'',username:'',id:-1,permanentLink:true});};$scope.permanentLinkURLChange = function(){var permanentLink={};$scope.processing = true;ArtistToolsService.resolveData({url:$scope.linkUrl}).then(function(res){$scope.profile.data.permanentLinks.push({url:res.data.permalink_url,avatar:res.data.avatar_url?res.data.avatar_url:'',username:res.data.username,id:res.data.id,permanentLink:true});$scope.processing = false;})['catch'](function(err){$.Zebra_Dialog('Artists not found');$scope.processing = false;});};$scope.saveSoundCloudAccountInfo = function(){SC.connect().then(saveInfo).then(handleResponse)['catch'](handleError);function saveInfo(res){return ArtistToolsService.saveSoundCloudAccountInfo({token:res.oauth_token});}function handleResponse(res){$scope.processing = false;if(res.status === 200 && res.data.success === true){SessionService.create(res.data.data);$scope.profile.data = res.data.data;$scope.profile.isAvailable.soundcloud = true;}else {$scope.message = {value:'You already have an account with this soundcloud username',visible:true};}$scope.$apply();}function handleError(err){$scope.processing = false;}};$scope.getDownloadList = function(){ArtistToolsService.getDownloadList().then(handleResponse)['catch'](handleError);function handleResponse(res){$scope.downloadGatewayList = res.data;}function handleError(err){console.log(err);}};$scope.deleteDownloadGateway = function(index){if(confirm("Do you really want to delete this track?")){var handleResponse=function handleResponse(res){$scope.processing = false;$scope.downloadGatewayList.splice(index,1);};var handleError=function handleError(res){$scope.processing = false;};var downloadGateWayID=$scope.downloadGatewayList[index]._id;$scope.processing = true;ArtistToolsService.deleteDownloadGateway({id:downloadGateWayID}).then(handleResponse)['catch'](handleError);}};$scope.soundcloudLogin = function(){SC.connect().then(function(res){if(res.oauth_token == SessionService.getUser().soundcloud.token){throw new Error('already added');}else {$scope.processing = true;$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudAuthentication',{token:res.oauth_token,password:'test'});}}).then(function(res){var linkedAccountID=res.data.user._id;$http.post("/api/database/networkaccount",{userID:$scope.user._id,linkedAccountID:linkedAccountID}).then(function(res){$.Zebra_Dialog(res.data.message);$rootScope.userlinkedAccounts = res.data.data.channels;setTimeout(function(){window.location.reload();},1000);});}).then(null,function(err){console.log(err);$scope.processing = false;$.Zebra_Dialog('Please retry in 1 second.');setTimeout(function(){window.location.reload();},1000);});};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.getUserNetwork();$scope.verifyBrowser();}};});app.directive('dlpreview',function($http){return {templateUrl:'js/common/directives/downloadGateway/preview.html',restrict:'E',scope:false,controller:function previewController($rootScope,$state,$stateParams,$scope,$http,$location,$window,$uibModal,$timeout,SessionService,ArtistToolsService,DownloadTrackService){$scope.user = SessionService.getUser();$scope.recentTracks = [];var track=JSON.parse(window.localStorage.getItem('trackPreviewData'));if(!track.trackTitle){$.Zebra_Dialog('Track Not Found');$state.go("artistToolsDownloadGatewayList");return false;}$scope.track = track;$scope.player = {};SC.stream('/tracks/' + $scope.track.trackID).then(function(p){$scope.player = p;});$scope.toggle = true;$scope.togglePlay = function(){$scope.toggle = !$scope.toggle;if($scope.toggle){$scope.player.pause();}else {$scope.player.play();}};$scope.nodl = function(){$.Zebra_Dialog('No download in preview mode.');};$scope.getRecentTracks = function(){if($scope.track && $scope.track.showDownloadTracks === 'user'){DownloadTrackService.getRecentTracks({userID:$scope.track.userid,trackID:$scope.track._id}).then(function(res){if(typeof res === 'object' && res.data){$scope.recentTracks = res.data;}});}};$scope.getRecentTracks();}};});app.directive('reforrelists',function($http){return {templateUrl:'js/common/directives/reForReLists/reForReLists.html',restrict:'E',scope:false,controller:function rfrListsController($scope,$rootScope,$http,SessionService,$state,$timeout,$window){$scope.state = 'reForReInteraction';$scope.activeTab = $window.localStorage.getItem('activetab')?$window.localStorage.getItem('activetab'):'1';$scope.user = SessionService.getUser();$rootScope.userlinkedAccounts = $scope.user.linkedAccounts?$scope.user.linkedAccounts:[];$scope.otherUsers = [];$scope.type = 'remind';$scope.listDayIncr = 0;$scope.now = new Date();var path=window.location.pathname;$scope.isAdminRoute = false;if(path.indexOf("admin/") != -1){$scope.isAdminRoute = true;}else {$scope.isAdminRoute = false;}$scope.itemview = "calendar";$scope.manageView = "calendar";if($scope.activeTab == "3"){$window.localStorage.setItem('activetab','1');}if(window.location.href.indexOf('artistTools/reForReLists#organizeschedule') != -1){$scope.activeTab = "2";}else if(window.location.href.indexOf('artistTools/reForReLists#managetrades') != -1){$scope.activeTab = "3";}$scope.currentTab = "SearchTrade";$scope.searchURL = "";$scope.sliderSearchMin = Math.log($scope.user.soundcloud.followers?parseInt($scope.user.soundcloud.followers / 2):0) / Math.log(1.1);$scope.sliderSearchMax = Math.log($scope.user.soundcloud.followers?parseInt($scope.user.soundcloud.followers * 1.2):200000000) / Math.log(1.1);$scope.minSearchTradefollowers = Math.pow(1.1,$scope.sliderSearchMin);$scope.maxSearchTradefollowers = Math.pow(1.1,$scope.sliderSearchMax);$scope.sliderManageMin = 0;$scope.sliderManageMax = 200000000;$scope.minManageTradefollowers = Math.pow(1.1,$scope.sliderManageMin);$scope.maxManageTradefollowers = Math.pow(1.1,$scope.sliderManageMax);$scope.$watch(function(){return $scope.sliderSearchMin;},function(newVal,oldVal){$scope.minSearchTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderSearchMax;},function(newVal,oldVal){$scope.maxSearchTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderManageMin;},function(newVal,oldVal){$scope.minManageTradefollowers = Math.pow(1.1,newVal);});$scope.$watch(function(){return $scope.sliderManageMax;},function(newVal,oldVal){$scope.maxManageTradefollowers = Math.pow(1.1,newVal);});$scope.sortby = "Recent Alert";$scope.sort_order = "ascending";var searchTradeRange={skip:0,limit:12};$scope.dayIncr = 0;$scope.incrDay = function(){if($scope.dayIncr < 21)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.currentDate = new Date();var daysArray=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];$scope.searchByFollowers = function(){$scope.searchURL = "";$scope.sendSearch();};$scope.viewSoundcloud = function(user){window.location.href = user.soundcloud.permalinkURL;};$scope.sendSearch = function(){$scope.processing = true;$scope.searchUser = [];$http.post('/api/users/bySCURL/',{url:$scope.searchURL,minFollower:$scope.minSearchTradefollowers,maxFollower:$scope.maxSearchTradefollowers,recordRange:{skip:0,limit:12}}).then(function(res){$scope.processing = false;$scope.searchUser = res.data;}).then(undefined,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Please enter Artist url.");}).then(null,function(err){$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Did not find user.");});};$scope.hello = function(obj){$state.go('reForReInteraction',obj);};$scope.editRepostEvent = function(item){$scope.afcount = 0;$scope.makeEvent = {};$scope.deleteEventData = item;$scope.manageView = "newsong";$scope.editChannelArr = [];var newObj=angular.copy(item);$scope.makeEventURL = newObj.trackInfo.trackURL;$scope.selectedSlot = newObj.trackInfo.day;$scope.makeEvent.unrepostHours = newObj.trackInfo.unrepostHours;$scope.unrepostEnable = newObj.trackInfo.unrepostHours?true:false;var channels=newObj.trackInfo.otherChannels;if(channels.length > 0){for(var i=0;i < channels.length;i++) {for(var j=0;j < $scope.linkedAccounts.length;j++) {if(channels[i] == $scope.linkedAccounts[j].soundcloud.id){$scope.editChannelArr.push($scope.linkedAccounts[j].name);}}}$scope.channelArr = $scope.editChannelArr;}SC.Widget('scPlayer').load($scope.makeEventURL,{auto_play:false,show_artwork:true});if(item.trackInfo.type == 'traded' && item.trackInfo.trackURL){document.getElementById('scPlayer').style.visibility = "visible";$scope.showPlayer = true;}$scope.newEvent = false;$scope.makeEvent.day = $scope.selectedSlot;$scope.makeEvent.userID = newObj.trackInfo.userID;$scope.makeEvent.owner = newObj.trackInfo.owner;$scope.makeEvent._id = newObj.trackInfo._id;$scope.makeEvent.trackURL = $scope.makeEventURL;$scope.makeEvent.title = newObj.trackInfo.title;$scope.makeEvent.trackID = newObj.trackInfo.trackID;$scope.makeEvent.artistName = newObj.trackInfo.artistName;};$scope.searchCurrentTrade = function(){var cTrades=[];$scope.currentTrades = [];angular.forEach($scope.currentTradesCopy,function(trade){if($scope.searchURL != ""){var url=$scope.searchURL;url = url.toString().replace('http://','').replace('https://','');if(trade.other.user.soundcloud.permalinkURL.indexOf(url) != -1){cTrades.push(trade);}}else if(parseInt($scope.maxManageTradefollowers) > 0){if(trade.other.user.soundcloud.followers >= $scope.minManageTradefollowers && trade.other.user.soundcloud.followers <= $scope.maxManageTradefollowers){cTrades.push(trade);}}});$scope.currentTrades = cTrades;console.log($scope.currentTrades);if(!$scope.$$phase)$scope.$apply();};$scope.tradeType = {Requests:true,Requested:true,TradePartners:true};$scope.filterByTradeType = function(){$scope.processing = true;var tradeType=$scope.tradeType;tradeType = JSON.stringify(tradeType);$http.get('/api/trades/withUser/' + $scope.user._id + '?tradeType=' + tradeType).then(function(res){var trades=res.data;console.log(trades);$scope.currentTrades = [];trades.forEach(function(trade){trade.other = trade.p1.user._id == $scope.user._id?trade.p2:trade.p1;trade.user = trade.p1.user._id == $scope.user._id?trade.p1:trade.p2;});$scope.currentTrades = trades;console.log($scope.currentTrades);$scope.processing = false;});};$scope.sortResult = function(sortby){$scope.sortby = sortby;var sort_order=$scope.sort_order;if(sortby == "Followers"){if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return b.other.user.soundcloud.followers - a.other.user.soundcloud.followers;});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.other.user.soundcloud.followers - b.other.user.soundcloud.followers;});$scope.sort_order = "ascending";}}else if(sortby == "Unfilled Slots"){if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return b.unfilledTrackCount - a.unfilledTrackCount;});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.unfilledTrackCount - b.unfilledTrackCount;});$scope.sort_order = "ascending";}}else {if(sort_order == "ascending"){$scope.currentTrades.sort(function(a,b){return a.other.alert.toLowerCase() < b.other.alert.toLowerCase();});$scope.sort_order = "descending";}else {$scope.currentTrades.sort(function(a,b){return a.other.alert.toLowerCase() > b.other.alert.toLowerCase();});$scope.sort_order = "ascending";}}};$scope.setView = function(type){$scope.itemView = type;$scope.shownTrades = $scope.currentTrades.filter(function(trade){if(type == 'inbox')return trade.other.accepted;else return trade.user.accepted;}).sort(function(trade){if(['change','message'].includes(trade.user.alert))return -1;else return 1;});};$scope.setManageView = function(type){$scope.manageView = type;};$scope.loadMoreUsers = function(){$scope.loadingMoreUsers = true;searchTradeRange.skip += 12;searchTradeRange.limit = 12;$http.post('/api/users/bySCURL/',{url:$scope.searchURL,minFollower:$scope.minSearchTradefollowers,maxFollower:$scope.maxSearchTradefollowers,recordRange:searchTradeRange}).then(function(res){$scope.loadingMoreUsers = false;$scope.processing = false;if(res.data.length > 0){angular.forEach(res.data,function(d){$scope.searchUser.push(d);});}}).then(null,function(err){$scope.loadingMoreUsers = false;$scope.success = false;$scope.processing = false;$scope.searchUser = [];$.Zebra_Dialog("Please enter Artist url.");});};$scope.$on('loadTrades',function(e){if(window.location.href.includes('reForReLists') && !window.location.href.includes('#organizeschedule') && !window.location.href.includes('#managetrades'))$scope.loadMoreUsers();});$scope.openTrade = function(user){var found=$scope.currentTrades.find(function(trade){return trade.other.user._id == user._id;});if(found){$scope.goToTrade(found);}else {var trade={messages:[{date:new Date(),senderId:SessionService.getUser()._id,text:SessionService.getUser().soundcloud.username + ' opened a trade.',type:'alert'}],repeatFor:0,p1:{user:SessionService.getUser()._id,alert:"none",slots:[],accepted:true},p2:{user:user._id,alert:"change",slots:[],accepted:false}};$scope.processing = true;$http.post('/api/trades/new',trade).then(function(res){$scope.processing = false;console.log(res.data);$scope.goToTrade(res.data);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("Error in creating trade");});}};$scope.goToTrade = function(trade){if($scope.isAdminRoute){window.location.href = '/admin/trade/' + trade.p1.user.soundcloud.pseudoname + '/' + trade.p2.user.soundcloud.pseudoname;}else {window.location.href = '/artistTools/trade/' + trade.p1.user.soundcloud.pseudoname + '/' + trade.p2.user.soundcloud.pseudoname;}};$scope.manage = function(trade){console.log(trade);$scope.goToTrade(trade);};$scope.remindTrade = function(trade,index){$('#pop').modal('show');$scope.theTrade = trade;$scope.tradeID = trade._id;if(!$scope.$$phase)$scope.$apply();};if(window.localStorage.getItem("showPopup")){var trade=JSON.parse(window.localStorage.getItem("showPopup"));window.localStorage.removeItem("showPopup");setTimeout(function(){$scope.remindTrade(trade,0);},500);}$scope.sendMail = function(sharelink){$scope.fbMessageLink = sharelink;$window.open("mailto:example@demo.com?body=" + sharelink,"_self");};$scope.deleteTrade = function(tradeID,index){$.Zebra_Dialog('Are you sure you want to delete this trade?',{'type':'confirmation','buttons':[{caption:'No',callback:function callback(){console.log('No was clicked');}},{caption:'Yes',callback:function callback(){$scope.processing = true;$http.post('/api/trades/delete',{id:tradeID}).then(function(res){$scope.processing = false;$scope.shownTrades.splice(index,1);}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog('Error accepting');});}}]});};$scope.checkNotification = function(){$scope.$parent.shownotification = false;$scope.currentTrades.forEach(function(trade){if(trade.other.accepted){$scope.$parent.shownotification = true;}});};$scope.hideNotification = function(){$http.put('/api/trades/hideNotification',$scope.shownTrades).then(function(res){}).then(null,function(err){$scope.checkNotification();});};$scope.setCurrentTab = function(currentTab){$scope.currentTab = currentTab;};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.dayIncr = 7;$scope.incrDay = function(){if($scope.dayIncr < 21)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();if(screen.width > '744'){return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];}return ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][dayIndex];};$scope.getStyle = function(){return {'border-radius':'4px','border-width':'1px'};};$scope.getEventStyle = function(repostEvent){if(repostEvent.type == 'empty'){return {};}else if(repostEvent.type == 'traded' && repostEvent.trackInfo.trackID){return {'background-color':'#B22222','height':'20px', // 'margin': '2px',
'border-radius':'4px'};}else if(repostEvent.type == 'traded' && !repostEvent.trackInfo.trackID){return {'background-color':'#2b9fda','height':'20px', // 'margin': '2px',
'border-radius':'4px'};}else if(repostEvent.type == 'multiple'){var unfilled=false;repostEvent.events.forEach(function(event){if(!event.trackInfo.trackID)unfilled = true;});if(unfilled){return {'background-color':'#7A549B','height':'20px','border-radius':'4px'};}else {return {'background-color':'#B22222','height':'20px','border-radius':'4px'};}}};$scope.getEventText = function(repostEvent){if(repostEvent.type == 'traded')return repostEvent.userInfo.username;else if(repostEvent.type == 'multiple')return 'Multiple Slots';};$scope.fillDateArrays = function(repostEvent){var calendar=[];var today=new Date();today.setDate(today.getDate() - 7);for(var i=0;i < 29;i++) {var calDay={};calDay.day = new Date(today);calDay.day.setDate(today.getDate() + i);var dayEvents=repostEvent.filter(function(ev){return new Date(ev.trackInfo.day).toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'empty'){ev.type = 'traded';eventArray[new Date(ev.trackInfo.day).getHours()] = ev;}else if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'traded'){var event={type:'multiple',events:[]};event.events.push(eventArray[new Date(ev.trackInfo.day).getHours()]);event.events.push(ev);eventArray[new Date(ev.trackInfo.day).getHours()] = event;}else if(eventArray[new Date(ev.trackInfo.day).getHours()].type == 'multiple'){eventArray[new Date(ev.trackInfo.day).getHours()].events.push(ev);}});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.calendar = $scope.fillDateArrays($scope.events);$scope.isView = false;$scope.clickedSlot = function(day,hour,data){if(data.type == 'multiple'){var buttons=[];data.events.forEach(function(ev){var button={caption:ev.userInfo.username,callback:function callback(){$scope.openPopup(day,hour,ev);if(!$scope.$$phase)$scope.$apply();}};buttons.push(button);});$.Zebra_Dialog('Which slot do you want to edit?',{'type':'question','buttons':buttons});}else {$scope.openPopup(day,hour,data);}};$scope.openPopup = function(day,hour,data){$scope.afcount = 0;$scope.deleteEventData = data;document.getElementById('scPopupPlayer').style.visibility = "hidden";document.getElementById('scPopupPlayer').innerHTML = "";$scope.makeEvent = {};var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent = JSON.parse(JSON.stringify(data.trackInfo));$scope.makeEvent._id = data.trackInfo._id;$scope.makeEvent.day = new Date(data.trackInfo.day);$scope.makeEvent.url = data.trackInfo.trackURL;$scope.makeEvent.comment = data.trackInfo.comment;$scope.makeEvent.timeGap = data.trackInfo.timeGap;$scope.makeEvent.artist = data.userInfo;var repostDate=new Date(data.trackInfo.day);var unrepostDate=new Date(data.trackInfo.unrepostDate);var diff=Math.abs(new Date(unrepostDate).getTime() - new Date(repostDate).getTime()) / 3600000;$scope.makeEvent.unrepostHours = diff;var d=new Date(day).getDay();var channels=data.trackInfo.otherChannels;$scope.displayChannels = [];for(var i=0;i < $scope.events.length;i++) {if(channels.indexOf($scope.events[i].userInfo.id) > -1){$scope.displayChannels.push($scope.events[i].userInfo.username);}}$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});if(data.trackInfo.trackURL){$scope.isView = true;SC.Widget('scPopupPlayer').load($scope.makeEvent.url,{auto_play:false,show_artwork:false});document.getElementById('scPopupPlayer').style.visibility = "visible";$scope.showPlayer = true;}else {$scope.isView = false;document.getElementById('scPopupPlayer').style.visibility = "hidden";$scope.showPlayer = false;}};$scope.closeModal = function(){$scope.showOverlay = false;};$scope.deleteEvent = function(){var eventId=$scope.deleteEventData.trackInfo._id;$.Zebra_Dialog('Are you sure you want to delete this trade?',{'type':'question','buttons':[{caption:'Cancel',callback:function callback(){}},{caption:'Yes',callback:function callback(){$http['delete']('/api/events/repostEvents/' + eventId).then(function(res){$scope.showOverlay = false;$state.reload();$scope.activeTab = "3";}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not delete.");});}}]});};$scope.saveEvent = function(){$scope.processing = true;var req=$http.put('/api/events/repostEvents',$scope.makeEvent).then(function(res){$scope.makeEventURL = "";$scope.makeEvent = null;$scope.eventComment = "";document.getElementById('scPlayer').style.visibility = "hidden";document.getElementById('scPopupPlayer').style.visibility = "hidden";$scope.unrepostHours = 1;$scope.tabSelected = true;$scope.trackType = "";$scope.trackArtistID = 0;if($scope.manageView == "newsong"){$scope.manageView = "list";}$http.get("/api/events/getRepostEvents/" + $scope.user._id).then(function(res){$scope.processing = false;$scope.calendar = $scope.fillDateArrays(res.data);$scope.listevents = res.data;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});$scope.showOverlay = false;}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog(err.data);});};$scope.choseArtist = function(user){$scope.searchURL = user.permalink_url;$scope.sendSearch();};$scope.choseTrack1 = function(track){$scope.showPlayer = true;$scope.fillMakeEvent(track);var popupPlayerWidget=SC.Widget('scPopupPlayer');popupPlayerWidget.load(track.permalink_url,{auto_play:false,show_artwork:false,callback:function callback(){console.log($scope.showPlayer);console.log($scope.makeEvent);document.getElementById('scPopupPlayer').style.visibility = "visible";console.log(document.getElementById('scPopupPlayer'));if(!$scope.$$phase)$scope.$apply();}});};$scope.fillMakeEvent = function(track){$scope.makeEvent.trackID = track.id;$scope.makeEvent.title = track.title;$scope.makeEvent.trackURL = track.permalink_url;$scope.makeEvent.trackArtUrl = track.artwork_url;$scope.makeEvent.trackArtUrl = track.artwork_url;$scope.makeEvent.artistName = track.user.username;};$scope.choseTrack = function(track){$scope.showPlayer = true;$scope.fillMakeEvent(track);var playerWidget=SC.Widget('scPlayer');playerWidget.load(track.permalink_url,{auto_play:false,show_artwork:true,callback:function callback(){document.getElementById('scPlayer').style.visibility = "visible";if(!$scope.$$phase)$scope.$apply();}});};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.scheduleRepostEvent = function(data){if(data.trackInfo){$scope.deleteEventData = data;$scope.manageView = "newsong";document.getElementById('scPlayer').style.visibility = "hidden";document.getElementById('scPlayer').innerHTML = "";var day=new Date(data.trackInfo.day);$scope.makeEvent = {};$scope.makeEvent._id = data.trackInfo._id;$scope.makeEvent.day = new Date(data.trackInfo.day);$scope.makeEvent.url = data.trackInfo.trackURL;$scope.makeEvent.comment = data.trackInfo.comment;$scope.makeEvent.timeGap = data.trackInfo.timeGap;$scope.makeEvent.artist = data.userInfo;var repostDate=new Date(data.trackInfo.day);var unrepostDate=new Date(data.trackInfo.unrepostDate);var diff=Math.abs(new Date(unrepostDate).getTime() - new Date(repostDate).getTime()) / 3600000;$scope.makeEvent.unrepostHours = diff;$scope.makeEvent.unrepostDate = unrepostDate;var d=new Date(day).getDay();var channels=data.trackInfo.otherChannels;$scope.displayChannels = [];for(var i=0;i < $scope.events.length;i++) {if(channels.indexOf($scope.events[i].userInfo.id) > -1){$scope.displayChannels.push($scope.events[i].userInfo.username);}}var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.showPlayer = false;}};$scope.addNewSongCancel = function(){$scope.manageView = "list";};$scope.allowSave = function(){if(!$scope.makeEvent)return false;return new Date($scope.makeEvent.day) > new Date();};$scope.autofillAll = function(){$.Zebra_Dialog('Are you sure you want to fill all your slots with your autofill tracks?',{'type':'question','buttons':[{caption:'Cancel',callback:function callback(){}},{caption:'Yes',callback:function callback(){$scope.processing = true;$http.put("/api/events/repostEvents/autofillAll").then(function(res){return $http.get('/api/events/getRepostEvents/' + $scope.user._id);}).then(function(res){console.log(res.data);$scope.calendar = $scope.fillDateArrays(res.data);$scope.listevents = res.data;$scope.processing = false;}).then(null,console.log);}}]});};$scope.offer = function(trade){if($scope.itemView == 'sent'){return "You are offering " + trade.user.slots.length * (trade.repeatFor > 0?trade.repeatFor:1) + " slots (" + (trade.user.slots.length * trade.user.user.soundcloud.followers * (trade.repeatFor > 0?trade.repeatFor:1)).toLocaleString() + " follower exposure)<br>and asking for " + trade.other.slots.length * (trade.repeatFor > 0?trade.repeatFor:1) + " slots (" + (trade.other.slots.length * trade.other.user.soundcloud.followers * (trade.repeatFor > 0?trade.repeatFor:1)).toLocaleString() + " follower exposure).";}else {return trade.other.user.soundcloud.username + " is offering " + trade.other.slots.length * (trade.repeatFor > 0?trade.repeatFor:1) + " slots (" + (trade.other.slots.length * trade.other.user.soundcloud.followers * (trade.repeatFor > 0?trade.repeatFor:1)).toLocaleString() + " follower exposure)<br>and asking for " + trade.user.slots.length * (trade.repeatFor > 0?trade.repeatFor:1) + " slots (" + (trade.user.slots.length * trade.user.user.soundcloud.followers * (trade.repeatFor > 0?trade.repeatFor:1)).toLocaleString() + " follower exposure).";}}; /*Manage Trades end*/$scope.getUserNetwork();$scope.verifyBrowser();$scope.checkNotification();$scope.sortResult($scope.sortby);$scope.loadMoreUsers();$scope.setView("inbox");if($window.localStorage.getItem('inboxState')){$scope.setView($window.localStorage.getItem('inboxState'));$window.localStorage.removeItem('inboxState');}}};});app.directive('rfrinteraction',function($http){return {templateUrl:'js/common/directives/rfrInteraction/rfrInteraction.html',restrict:'E',scope:false,controller:function rfrInteractionController($rootScope,$state,$scope,$http,AuthService,$window,SessionService,socket,moment){var path=window.location.pathname;$window.localStorage.setItem('activetab','1');$scope.isAdminRoute = false;if(path.indexOf("admin/") != -1){$scope.isAdminRoute = true;}else {$scope.isAdminRoute = false;}$scope.shownotification = false;$scope.chatOpen = false;$scope.type = 'remind';$scope.change = false;$scope.showUndo = false;$scope.showEmailModal = false;$scope.processing = false;socket.connect();$scope.makeEventURL = "";$scope.showOverlay = false;$scope.processong = false;$scope.hideall = false;$scope.trackArtistID = 0;$scope.trackType = "";$scope.listDayIncr = 0; // $scope.selectTrade = $scope.currentTrades.find(function(el) {
//   return el._id == $scope.trade._id;
// });
var person=$scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1:$scope.trade.p2;$scope.user.accepted = person.accepted;$scope.p1dayIncr = 0;$scope.p2dayIncr = 0;$scope.repeatOn = $scope.trade.repeatFor > 0;$scope.currentDate = new Date();$scope.daysArray = ['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];$scope.itemview = "calender";$scope.setView = function(view){$scope.itemview = view;var personNum=$scope.activeUser._id == $scope.trade.p1.user._id?'p1':'p2';$scope.getListEvents(personNum);};$scope.trackList = [];$scope.activeUser = $scope.user;$scope.changeActiveUser = function(user){$scope.activeUser = user;if(!$scope.$$phase)$scope.$apply();};$scope.changeRepeatOn = function(){$scope.showUndo = true;$scope.repeatOn = !$scope.repeatOn;if($scope.reapeatOn){$scope.trade.repeatFor = 4;}else {$scope.trade.repeatFor = 0;}};$scope.changeRepeatFor = function(){$scope.showUndo = true;$scope.trade.repeatFor = parseInt($scope.trade.repeatFor);if($scope.trade.repeatFor > 52){$scope.trade.repeatFor = 52;}else if($scope.trade.repeatFor < 0 || $scope.trade.repeatFor == NaN){$scope.trade.repeatFor = 0;}$scope.repeatOn = $scope.trade.repeatFor > 0;};$scope.trackListChangeEvent = function(index){$scope.makeEvent.URL = $scope.makeEvent.trackListObj.permalink_url;$scope.changeURL();};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();})['catch'](function(response){$scope.processing = false;if(!$scope.$$phase)$scope.$apply();});}};$scope.getSchedulerID = function(uid){return uid == $scope.user._id?"scheduler-left":"scheduler-right";};$scope.user.accepted = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1.accepted:$scope.trade.p2.accepted; // $scope.curTrade = JSON.stringify($.grep($scope.currentTrades, function(e) {
//   return e._id == $scope.trade._id;
// }));
$scope.refreshCalendar = function(){$scope.fillCalendar();$scope.checkNotification();};$scope.backToLists = function(){console.log('hi');$state.go('reForReLists');};$scope.incrp1 = function(inc){if($scope.p1dayIncr < 42)$scope.p1dayIncr++;console.log($scope.p1dayIncr);};$scope.decrp1 = function(inc){if($scope.p1dayIncr > 0)$scope.p1dayIncr--;};$scope.incrp2 = function(inc){if($scope.p2dayIncr < 42)$scope.p2dayIncr++;};$scope.decrp2 = function(inc){if($scope.p2dayIncr > 0)$scope.p2dayIncr--;};$scope.changeURL = function(){if($scope.makeEvent.URL != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.makeEvent.URL}).then(function(res){$scope.trackArtistID = res.data.user.id;$scope.trackType = res.data.kind;if(res.data.kind != "playlist"){$scope.makeEvent.trackID = res.data.id;$scope.makeEvent.title = res.data.title;$scope.makeEvent.trackURL = res.data.trackURL;if(res.data.user)$scope.makeEvent.artistName = res.data.user.username;SC.oEmbed($scope.makeEvent.URL,{element:document.getElementById('scPlayer'),auto_play:false,maxheight:150});document.getElementById('scPlayer').style.visibility = "visible";$scope.notFound = false;$scope.processing = false;}else {$scope.notFound = false;$scope.processing = false;$.Zebra_Dialog("Sorry! We do not currently allow playlist reposting. Please enter a track url instead.");}}).then(null,function(err){$.Zebra_Dialog("We are not allowed to access this track from Soundcloud. We apologize for the inconvenience, and we are working with Soundcloud to resolve the issue.");document.getElementById('scPlayer').style.visibility = "hidden";$scope.notFound = true;$scope.processing = false;});}};$scope.unrepostOverlap = function(){if(!$scope.makeEvent.trackID)return false;var events=$scope.makeEvent.person.user._id == $scope.trade.p1.user._id?$scope.p1Events:$scope.p2Events;var slots=$scope.makeEvent.person.slots;var blockEvents=events.filter(function(event){event.day = new Date(event.day);event.unrepostDate = new Date(event.unrepostDate);if(moment($scope.makeEvent.day).format('LLL') == moment(event.day).format('LLL') && $scope.makeEvent.trackID == event.trackID)return false;return $scope.makeEvent.trackID == event.trackID && event.unrepostDate.getTime() > $scope.makeEvent.day.getTime() - 24 * 3600000 && event.day.getTime() < $scope.makeEvent.unrepostDate.getTime() + 24 * 3600000;});var blockEvents2=slots.filter(function(slot){slot.day = new Date(slot.day);slot.unrepostDate = new Date(slot.unrepostDate);if(moment($scope.makeEvent.day).format('LLL') == moment(slot.day).format('LLL') && $scope.makeEvent.trackID == slot.trackID)return false;return $scope.makeEvent.trackID == slot.trackID && slot.unrepostDate.getTime() > $scope.makeEvent.day.getTime() - 24 * 3600000 && slot.day.getTime() < $scope.makeEvent.unrepostDate.getTime() + 24 * 3600000;});return blockEvents.length > 0 || blockEvents2.length > 0;};$scope.changeTrade = function(trade){$state.go('reForReInteraction',{tradeID:trade._id});};$scope.backEvent = function(){$scope.makeEvent = undefined;$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;};$scope.deleteEvent = function(calEvent,person){person.slots = person.slots.filter(function(slot,index){return !(moment(slot.day).format('LLL') == moment(calEvent.day).format('LLL'));});$scope.showUndo = true;$scope.fillCalendar();};$scope.checkNotification = function(){var user=SessionService.getUser();if(user){return $http.get('/api/trades/withUser/' + user._id).then(function(res){var trades=res.data;var trade=trades.find(function(t){return t._id.toString() == $scope.trade._id.toString();});console.log('trade',trade);if(trade){if(trade.p1.user._id == user._id){if(trade.p1.alert == "change" && $scope.chatOpen == false){$scope.shownotification = true;}}if(trade.p2.user._id == user._id){if(trade.p2.alert == "change" && $scope.chatOpen == false){$scope.shownotification = true;}}}});}else {return 'ok';}};$scope.saveTrade = function(){if($scope.trade.p1.user._id == $scope.user._id){$scope.trade.p1.accepted = true;$scope.trade.p2.accepted = false;}else {$scope.trade.p2.accepted = true;$scope.trade.p1.accepted = false;}if($scope.trade.p1.slots.length == 0 || $scope.trade.p2.slots.length == 0){$.Zebra_Dialog("Issue! At least one slot on each account must be selected.");}else {$.Zebra_Dialog("Request trade? Giving " + $scope.stringSlots($scope.trade.user) + " (" + $scope.stringReach($scope.trade.user) + ") for " + $scope.stringSlots($scope.trade.other) + " (" + $scope.stringReach($scope.trade.other) + ").",{'type':'confirmation','buttons':[{caption:'Cancel',callback:function callback(){console.log('No was clicked');}},{caption:'Request',callback:function callback(){$scope.processing = true;$scope.trade.changed = true;$http.put('/api/trades',$scope.trade).then(function(res){res.data.other = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p2:$scope.trade.p1;res.data.user = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1:$scope.trade.p2;$scope.trade = res.data;$scope.emitMessage($scope.user.soundcloud.username + " requested/updated this trade.",'alert');$scope.processing = false;$scope.showUndo = false;$window.localStorage.setItem('activetab','2');$window.localStorage.setItem('inboxState','sent');window.localStorage.setItem("showPopup",JSON.stringify($scope.trade));if($scope.isAdminRoute){$state.go('adminRepostTraders');}else {$state.go('reForReLists');}}).then(null,function(err){$scope.showOverlay = false;$scope.processing = false;$.Zebra_Dialog('Error requesting');});}}]});}};$scope.openChat = function(){$scope.chatOpen = true;$scope.msgCount = 0;$scope.shownotification = false;};$scope.undo = function(){$scope.processing = true;$http.get('/api/trades/byID/' + $scope.trade._id).then(function(res){$scope.processing = false;$scope.trade = res.data;$scope.trade.other = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p2:$scope.trade.p1;$scope.trade.user = $scope.trade.p1.user._id == $scope.user._id?$scope.trade.p1:$scope.trade.p2;$scope.trade.user.user.pseudoAvailableSlots = createPseudoAvailableSlots($scope.trade.user.user);$scope.trade.other.user.pseudoAvailableSlots = createPseudoAvailableSlots($scope.trade.other.user);$scope.fillCalendar();var personNum=$scope.activeUser._id == $scope.trade.p1.user._id?'p1':'p2';$scope.getListEvents(personNum);$scope.showUndo = false;}).then(null,console.log);};$scope.saveEvent = function(event,person){person.slots = person.slots.filter(function(slot,index){return !(moment(slot.day).format('LLL') === moment(event.day).format('LLL'));});person.slots.push(event);$scope.showUndo = true;$scope.fillCalendar();};$scope.totalReach = function(person){return "Total Reach: " + (person.slots.length * person.user.soundcloud.followers * ($scope.trade.repeatFor > 0?$scope.trade.repeatFor:1)).toLocaleString();};$scope.stringReach = function(person){return (person.slots.length * person.user.soundcloud.followers * ($scope.trade.repeatFor > 0?$scope.trade.repeatFor:1)).toLocaleString() + " follower exposure";};$scope.totalSlots = function(person){return person.slots.length * ($scope.trade.repeatFor > 0?$scope.trade.repeatFor:1) + " Slots";};$scope.stringSlots = function(person){return person.slots.length * ($scope.trade.repeatFor > 0?$scope.trade.repeatFor:1) + " slots";};$scope.emailSlot = function(){var mailto_link="mailto:?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.makeEventAccount.username + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.changeUnrepost = function(){if($scope.makeEvent.unrepost){$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + 48 * 60 * 60 * 1000);}else {$scope.makeEvent.unrepostDate = new Date(0);}};$scope.clickedSlot = function(day,dayOffset,hour,calendar,person,event){var style={};var currentDay=new Date(day).getDay();var date=new Date(day).setHours(hour);if(!($scope.activeUser.pseudoAvailableSlots[$scope.daysArray[currentDay]] && $scope.activeUser.pseudoAvailableSlots[$scope.daysArray[currentDay]].indexOf(hour) > -1 && date > new Date().getTime() + 24 * 3600000) || $scope.activeUser.blockRelease && new Date($scope.activeUser.blockRelease) > date){if(event.type != 'trade')return false;}var makeDay=new Date(day);makeDay.setHours(hour,30,0,0);switch(event.type){case 'queue':case 'track':case 'paid':case 'traded':return false;break;case 'empty':var calEvent={type:"trade",day:makeDay,userID:person.user.soundcloud.id,unrepostDate:new Date(makeDay.getTime() + 48 * 60 * 60 * 1000)};$scope.saveEvent(calEvent,person);break;case 'trade':$scope.deleteEvent(event,person);break;}};$scope.email = function(){var otherUser=$scope.trade.p1.user._id == $scope.user._id?$scope.trade.p2.user:$scope.trade.p1.user;var mailto_link="mailto:" + otherUser.email + "?subject=Repost for repost with " + $scope.user.soundcloud.username + '&body=Hey ' + otherUser.soundcloud.username + ',\n\n Repost for repost? I scheduled a trade here! -> ArtistsUnlimited.co/login\n\nBest,\n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.acceptTrade = function(){$.Zebra_Dialog("Accept trade? Giving " + $scope.stringSlots($scope.trade.user) + " (" + $scope.stringReach($scope.trade.user) + ") for " + $scope.stringSlots($scope.trade.other) + " (" + $scope.stringReach($scope.trade.other) + ").",{'type':'confirmation','buttons':[{caption:'Cancel',callback:function callback(){console.log('No was clicked');}},{caption:'Accept',callback:function callback(){$scope.completeTrade();}}]});};$scope.autoFillTracks = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.trackListChange = function(index){$scope.newQueueSong = $scope.trackListObj.permalink_url;$scope.processing = true;$scope.changeQueueSong();};$scope.addSong = function(){if($scope.user.queue.indexOf($scope.newQueueID) != -1)return;$scope.user.queue.push($scope.newQueueID);$scope.saveUser();$scope.newQueueSong = undefined;$scope.trackListObj = "";$scope.newQueue = undefined;$scope.accept();};$scope.changeQueueSong = function(){if($scope.newQueueSong != ""){$scope.processing = true;$http.post('/api/soundcloud/resolve',{url:$scope.newQueueSong}).then(function(res){$scope.processing = false;var track=res.data;$scope.newQueue = track;$scope.newQueueID = track.id;}).then(null,function(err){$scope.newQueueSong = "";$('#autoFillTrack').modal('hide');$.Zebra_Dialog("We are not allowed to access tracks by this artist with the Soundcloud API. We apologize for the inconvenience, and we are working with Soundcloud to resolve this issue.");$scope.processing = false;});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});$('#autoFillTrack').modal('hide');}; //overlay autofill track end//
socket.on('init',function(data){$scope.name = data.name;$scope.users = data.users;});socket.on('send:message',function(message){console.log('send');console.log(message);if(message.tradeID == $scope.trade._id){$scope.msgHistory.push(message);$scope.message = message.message;$scope.checkNotification();$scope.trade.messages.push(message);if(message.type == "alert"){$scope.refreshCalendar();}}});socket.on('get:message',function(data){console.log('get');console.log(data);$scope.msgCount = 0;if(data != '' && data._id == $scope.trade._id){$scope.msgHistory = data?data.messages:[];$scope.msgCount++;$scope.checkNotification();if($scope.msgHistory[$scope.msgHistory.length - 1].type == "alert"){$scope.undo();}}});$scope.msgCount = 0;$scope.emitMessage = function(message,type){socket.emit('send:message',{message:message,type:type,id:$scope.user._id,tradeID:$scope.trade._id});$scope.message = '';};$scope.getMessage = function(){socket.emit('get:message',$scope.trade._id);};$scope.fillDateArrays = function(events,slots){var calendar=[];var today=new Date();for(var i=0;i < 50;i++) {var calDay={};calDay.day = new Date(today);calDay.day.setDate(today.getDate() + i);var dayEvents=events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});slots.forEach(function(slot){if(slot.day.toLocaleDateString() == calDay.day.toLocaleDateString())dayEvents.push(slot);});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.fillCalendar = function(){$scope.repeatOn = $scope.trade.repeatFor > 0;function setEventDays(arr){arr.forEach(function(ev){ev.day = new Date(ev.day);});}setEventDays($scope.p1Events);setEventDays($scope.p2Events);setEventDays($scope.trade.p1.slots);setEventDays($scope.trade.p2.slots);var now=new Date();now.setHours(now.getHours(),30,0,0);var change=false;$scope.trade.p1.slots = $scope.trade.p1.slots.filter(function(slot){if(slot.day < now){change = true;return false;}else return true;});$scope.p1Events.forEach(function(event){$scope.trade.p1.slots = $scope.trade.p1.slots.filter(function(slot){if(slot.day.toLocaleDateString() == event.day.toLocaleDateString() && slot.day.getHours() == event.day.getHours()){change = true;return false;}else return true;});});$scope.trade.p2.slots = $scope.trade.p2.slots.filter(function(slot){if(slot.day < now){change = true;return false;}else return true;});$scope.p2Events.forEach(function(event){$scope.trade.p2.slots = $scope.trade.p2.slots.filter(function(slot){if(slot.day.toLocaleDateString() == event.day.toLocaleDateString() && slot.day.getHours() == event.day.getHours()){change = true;return false;}else return true;});});$scope.calendarp1 = $scope.fillDateArrays($scope.p1Events,$scope.trade.p1.slots);$scope.calendarp2 = $scope.fillDateArrays($scope.p2Events,$scope.trade.p2.slots);};$scope.fillCalendar(); // $scope.updateAlerts = function() {
//   if ($scope.trade.p1.user._id == $scope.user._id) {
//     $scope.trade.p1.alert = "none";
//   }
//   if ($scope.trade.p2.user._id == $scope.user._id) {
//     $scope.trade.p2.alert = "none";
//   }
//   $http.put('/api/trades', $scope.trade);
//   $scope.shownotification = false;
// }
$scope.completeTrade = function(){$scope.processing = true;if($scope.trade.repeatFor > 0){var now=new Date();now.setHours(0);now.setMinutes(0);var endDate=new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);var p1WeekSlots=$scope.trade.p1.slots.filter(function(slot){return slot.day < endDate;});var p2WeekSlots=$scope.trade.p2.slots.filter(function(slot){return slot.day < endDate;});for(var i=0;i < $scope.trade.repeatFor;i++) {p1WeekSlots.forEach(function(slot){var event=JSON.parse(JSON.stringify(slot));event.type = 'traded';event.owner = $scope.trade.p2.user._id;event.day = new Date(new Date(slot.day).getTime() + i * 7 * 24 * 60 * 60 * 1000);event.unrepostDate = new Date(event.day.getTime() + 48 * 60 * 60 * 1000);$scope.createEventWithUserTradeSettings(event,$scope.trade.p1.user);});p2WeekSlots.forEach(function(slot){var event=JSON.parse(JSON.stringify(slot));event.type = 'traded';event.owner = $scope.trade.p1.user._id;event.day = new Date(new Date(slot.day).getTime() + i * 7 * 24 * 60 * 60 * 1000);event.unrepostDate = new Date(event.day.getTime() + 48 * 60 * 60 * 1000);$scope.createEventWithUserTradeSettings(event,$scope.trade.p2.user);});}}else {$scope.trade.p1.slots.forEach(function(slot){var event=slot;event.type = 'traded';event.owner = $scope.trade.p2.user._id;$scope.createEventWithUserTradeSettings(event,$scope.trade.p1.user);});$scope.trade.p2.slots.forEach(function(slot){var event=slot;event.type = 'traded';event.owner = $scope.trade.p1.user._id;$scope.createEventWithUserTradeSettings(event,$scope.trade.p2.user);});}$scope.trade.p1.accepted = $scope.trade.p2.accepted = true;$scope.trade.p1.slots = $scope.trade.p2.slots = [];$scope.trade.changed = true;$http.put('/api/trades',$scope.trade).then(function(res){$window.localStorage.setItem('activetab','3');if($scope.isAdminRoute){$state.go('adminRepostTraders');}else {$rootScope.newManageSlots = true;$state.go('reForReLists');}}).then(null,console.log);};$scope.createEventWithUserTradeSettings = function(event,user){if(user && user.repostSettings){event.like = user.repostSettings.trade && user.repostSettings.trade.like?user.repostSettings.trade.like:false;var userTradeComments=user.repostSettings.trade && user.repostSettings.trade.comments?user.repostSettings.trade.comments:[];if(userTradeComments.length > 0){event.comment = userTradeComments[Math.floor(Math.random() * userTradeComments.length)];}$http.post('/api/events/repostEvents',event);}else {$http.post('/api/events/repostEvents',event);}};function getshortdate(d){var YYYY=d.getFullYear();var M=d.getMonth() + 1;var D=d.getDate();var MM=M < 10?'0' + M:M;var DD=D < 10?'0' + D:D;var result=MM + "/" + DD + "/" + YYYY;return result;}$scope.getPreviousEvents = function(){$scope.listDayIncr--;var personNum=$scope.activeUser._id == $scope.trade.p1.user._id?'p1':'p2';$scope.getListEvents(personNum);};$scope.getNextEvents = function(){$scope.listDayIncr++;var personNum=$scope.activeUser._id == $scope.trade.p1.user._id?'p1':'p2';$scope.getListEvents(personNum);};$scope.toggleSlot = function(item){var personNum=$scope.activeUser._id == $scope.trade.p1.user._id?'p1':'p2';$scope.clickedSlot(item.date,{},item.date.getHours(),{},$scope.trade[personNum],item.event);$scope.getListEvents(personNum);};$scope.getListEvents = function(userNum){$scope.listEvents = [];var currentDate=new Date();currentDate.setDate(currentDate.getDate() + $scope.listDayIncr);for(var i=0;i < 7;i++) {var d=new Date(currentDate);d.setDate(d.getDate() + i);var currentDay=d.getDay();var strDdate=getshortdate(d);var slots=$scope.trade[userNum].user.pseudoAvailableSlots[$scope.daysArray[currentDay]];slots = slots.sort(function(a,b){return a - b;});angular.forEach(slots,function(hour){var item=new Object();var calendarDay=$scope['calendar' + userNum].find(function(calD){return calD.day.toLocaleDateString() == d.toLocaleDateString();});var event=calendarDay.events.find(function(ev){return new Date(ev.day).getHours() == hour;});item.event = event?event:{type:'empty'};var dt=new Date(d);dt.setHours(hour);item.date = new Date(dt);if(item.date > new Date().getTime() + 24 * 3600000)$scope.listEvents.push(item);});}if(!$scope.$$phase)$scope.$apply();};$scope.getUnrepostDate = function(item){return new Date(item.date.getTime() + 48 * 60 * 60 * 1000);};$scope.getStyle = function(event,date,day,hour){var style={'border-radius':'4px','border-width':'1px'};var currentDay=new Date(date).getDay();var date=new Date(date).setHours(hour);if($scope.activeUser.pseudoAvailableSlots[$scope.daysArray[currentDay]] && $scope.activeUser.pseudoAvailableSlots[$scope.daysArray[currentDay]].indexOf(hour) > -1 && date > new Date().getTime() + 24 * 3600000 && (event.type == 'empty' || event.type == 'trade') && !($scope.activeUser.blockRelease && new Date($scope.activeUser.blockRelease).getTime() > date)){style = {'background-color':'#fff','border-color':"#999",'border-width':'1px','border-radius':'4px'};}return style;};$scope.getEventStyle = function(event){if(event && event.type == 'trade'){return {'background-color':'#FFD450','height':'18px','margin':'2px','border-radius':'4px'};}else {return {};}};$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];};$scope.unrepostSymbol = function(event){if(!event.unrepostDate)return;event.unrepostDate = new Date(event.unrepostDate);return event.unrepostDate > new Date();};$scope.showBoxInfo = function(event){return event.type == 'trade' || event.type == 'traded';};$scope.followerShow = function(){return screen.width > '436';};$scope.updateEmail = function(email){var answer=email;var myArray=answer.match(/[a-z\._\-!#$%&'+/=?^_`{}|~]+@[a-z0-9\-]+\.\S{2,3}/igm);if(myArray){$scope.user.email = answer;return $http.put('/api/database/profile',$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.hideall = false;$('#emailModal').modal('hide');$scope.showEmailModal = false;}).then(null,function(err){setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);});}else {setTimeout(function(){$scope.showEmailModal = false;$scope.promptForEmail();},600);}};$scope.promptForEmail = function(){if(!$scope.user.email){$scope.showEmailModal = true;$('#emailModal').modal('show');}};$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}else {$scope.promptForEmail();}}else {$scope.promptForEmail();}};$scope.remindTrade = function(){$('#pop').modal('show');};$scope.verifyBrowser();$scope.checkNotification();}};});'use strict';app.directive('oauthButton',function(){return {scope:{providerName:'@'},restrict:'E',templateUrl:'js/common/directives/oauth-button/oauth-button.html'};});app.directive('scsearch',function($http){return {templateUrl:'js/common/directives/scsearch/scsearch.html',restrict:'E',scope:{kind:'@',returnitem:'&',customstyle:'@'},controller:['$scope',function scSearchController($scope){$scope.searchSelection = [];$scope.searchString = "";$scope.sendSearch = function(){$scope.searchSelection = [];$scope.searchError = undefined;$scope.searching = true;if($scope.searchString != ""){$http.post('/api/search',{q:$scope.searchString,kind:$scope.kind}).then(function(res){$scope.searching = false;var item=res.data.item;if(item){if(item.title == '--unknown--'){$scope.showSearchPlayer = true;var searchWidget=SC.Widget('searchPlayer');searchWidget.load($scope.searchString,{auto_play:false,show_artwork:false,callback:function callback(){searchWidget.getCurrentSound(function(item){$scope.showSearchPlayer = false;if(!item || item.kind != $scope.kind){$scope.searchError = "Please enter a " + $scope.kind + " Url.";}else {$scope.setItemText(item);$scope.selectedItem(item);}$scope.$digest();});}});}else {if(item.kind != $scope.kind){$scope.searchError = "Please enter a " + $scope.kind + " Url.";}else {$scope.setItemText(item);$scope.selectedItem(item);}}}else {if(res.data.collection.length > 0){$scope.searchSelection = res.data.collection;$scope.searchSelection.forEach(function(item){$scope.setItemText(item);});}else {$scope.searchError = "We could not find a " + $scope.kind + ".";}}if($scope.searching || $scope.searchError != "" || $scope.searchSelection.length > 0){window.onclick = function(event){$scope.searching = false;$scope.searchError = "";$scope.searchSelection = [];$scope.$apply();};}}).then(null,function(err){console.log(err);$scope.searching = false;console.log('We could not find a ' + $scope.kind);$scope.searchError = "We could not find a " + $scope.kind + ".";if($scope.searching || $scope.searchError != "" || $scope.searchSelection.length > 0){window.onclick = function(event){$scope.searching = false;$scope.searchError = "";$scope.searchSelection = [];$scope.$apply();};}});}};$scope.directSearch = function(){if($scope.searchString.indexOf('soundcloud.com') > -1){$scope.sendSearch();}};$scope.setItemText = function(item){switch(item.kind){case 'track':item.displayName = item.title + ' - ' + item.user.username;item.header = item.title;item.subheader = item.user.username;break;case 'playlist':item.displayName = item.title + ' - ' + item.user.username;item.header = item.title;item.subheader = item.user.username;break;case 'user':item.displayName = item.username + ' - ' + item.followers_count + " followers";item.header = item.username;item.subheader = item.followers_count + " followers";break;}};$scope.selectedItem = function(item){$scope.searchSelection = [];$scope.searchError = undefined;$scope.searchString = item.displayName;$scope.searching = false;$scope.returnitem({item:item});};$scope.keypress = function(keyEvent){if(keyEvent.which === 13){$scope.sendSearch();keyEvent.stopPropagation();keyEvent.preventDefault();}};}]};}).filter('capitalize',function(){return function(input){return !!input?input.charAt(0).toUpperCase() + input.substr(1).toLowerCase():'';};});app.directive('scheduler',function($http){return {templateUrl:'js/common/directives/scheduler/scheduler.html',restrict:'E',scope:false,controller:function schedulerController($rootScope,$state,$scope,$http,AuthService,$window,SessionService){$scope.months = ['January','February','March','April','May','June','July','August','September','October','November','December'];var daysArray=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];$scope.currentDate = new Date();$scope.type = 'share';$scope.dateCompare = getshortdate($scope.currentDate);$scope.time = formatAMPM($scope.currentDate);$scope.user = SessionService.getUser();$scope.showEmailModal = false;$scope.makeEventURL = "";$scope.showPlayer = false;$scope.showOverlay = false;$scope.processiong = false;$scope.hideall = false;$scope.itemview = "calender";$scope.dayIncr = 7;$scope.listDayIncr = 0;$scope.eventDate = new Date();$scope.trackList = [];$scope.trackListObj = null;$scope.trackListSlotObj = null;$scope.newQueueSong = "";$scope.trackArtistID = 0;$scope.trackType = "";$scope.timeGap = '1';$scope.otherChannels = {};$scope.listevents = [];$scope.tabSelected = true;$scope.listAvailableSlots = [];$scope.openSlots = [];$scope.displayType = 'channel';$scope.paidCommentsArr = [];$scope.tradeCommentsArr = [];$scope.popup = false;$scope.selectedSlot = {};$scope.now = new Date();$scope.alreadyLoaded = false;$scope.unrepostHours = 48;var commentIndex=0;$scope.isView = false;$scope.isTraded = false;$scope.origin = window.location.origin;$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.schedule && $scope.user.repostSettings.schedule.comments && $scope.user.repostSettings.schedule.comments.length > 0?$scope.user.repostSettings.schedule.comments[Math.random() * $scope.user.repostSettings.schedule.comments.length >> 0]:'';var defaultAvailableSlots={sunday:[],monday:[],tuesday:[],wednesday:[],thursday:[],friday:[],saturday:[]};$scope.channelArr = [];$scope.groupArr = [];$scope.selectedGroups = {};$scope.selectedChannel = {};$scope.uniqueGroup = [];for(var i=0;i < $scope.user.paidRepost.length;i++) {$scope.user.paidRepost[i].groups.forEach(function(acc){if(acc != "" && $scope.uniqueGroup.indexOf(acc) === -1){$scope.uniqueGroup.push(acc);}});}if(window.location.href.indexOf('scheduler#myschedule') != -1){$('.nav-tabs a[href="#myschedule"]').tab('show');}else if(window.location.href.indexOf('scheduler#organizeschedule') != -1){$('.nav-tabs a[href="#organizeschedule"]').tab('show');}else if(window.location.href.indexOf('scheduler#managereposts') != -1){$('.nav-tabs a[href="#managereposts"]').tab('show');}$scope.setRepostHours = function(){if($scope.unrepostEnable){$scope.unrepostHours = "48";}else {$scope.unrepostHours = "";}};$scope.choseTrack1 = function(track){$scope.searchString = track.title;$scope.makeEventURL = track.permalink_url;$scope.makeEvent.trackID = track.id;$scope.makeEvent.title = track.title;$scope.makeEvent.trackArtUrl = track.artwork_url;$scope.makeEvent.artistName = track.user.username;$scope.makeEvent.trackURL = track.permalink_url;$scope.showPlayer = true;var playerWidget=SC.Widget('scPopupPlayer');playerWidget.load($scope.makeEventURL,{auto_play:false,show_artwork:false,callback:function callback(){document.getElementById('scPopupPlayer').style.visibility = "visible";if(!$scope.$$phase)$scope.$apply();}});$scope.warnAboutPrevRepost();};$scope.choseTrack = function(track){$scope.makeEventURL = track.permalink_url;$scope.searchString = track.title;$scope.makeEvent.trackID = track.id;$scope.makeEvent.title = track.title;$scope.makeEvent.trackArtUrl = track.artwork_url;$scope.makeEvent.artistName = track.user.username;$scope.makeEvent.trackURL = track.permalink_url;$scope.showPlayer = true;var popupPlayerWidget=SC.Widget('scPlayer');popupPlayerWidget.load($scope.makeEventURL,{auto_play:false,show_artwork:true,callback:function callback(){document.getElementById('scPlayer').style.visibility = "visible";if(!$scope.$$phase)$scope.$apply();}});$scope.warnAboutPrevRepost();};$scope.warnAboutPrevRepost = function(){var filtered=$scope.events.filter(function(event){return event.trackID == $scope.makeEvent.trackID && event.day < $scope.makeEvent.day;});filtered.sort(function(a,b){return b.day - a.day;});if(filtered[0] && filtered[0].unrepostDate < filtered[0].day){$.Zebra_Dialog('FYI: This song will not be reposted unless you unrepost the previous repost of this track, which is scheduled for ' + filtered[0].day.toLocaleString() + '.');}};$scope.linkedAccounts = []; /*Get Linked Accounts*/$scope.getLinkedAccounts = function(){var linked=$rootScope.userlinkedAccounts;for(var i=0;i < linked.length;i++) {if(linked[i]._id != $scope.user._id){$scope.linkedAccounts.push(linked[i]);}}if(!$scope.$$phase)$scope.$apply();};$scope.checkCommentEnable = function(){if($scope.user.repostSettings && $scope.user.repostSettings.schedule){if($scope.user.repostSettings.schedule.comment == false){$scope.disable = true;$scope.commentEvent = false;$scope.eventComment = "";$scope.commentSrc = 'assets/images/noComment.svg';}else {$scope.disable = false;$scope.commentEvent = true;if($scope.slotType == 'track'){$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.schedule && $scope.user.repostSettings.schedule.comments && $scope.user.repostSettings.schedule.comments.length > 0?$scope.user.repostSettings.schedule.comments[Math.random() * $scope.user.repostSettings.schedule.comments.length]:'';}$scope.commentSrc = 'assets/images/comment.svg';}}if($scope.user.repostSettings && $scope.user.repostSettings.trade){if($scope.user.repostSettings.trade.comment == false){$scope.disable = true;$scope.commentEvent = false;$scope.eventComment = "";$scope.commentSrc = 'assets/images/noComment.svg';}else {$scope.disable = false;$scope.commentEvent = true;if($scope.slotType == 'traded'){$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.trade && $scope.user.repostSettings.trade.comments && $scope.user.repostSettings.trade.comments.length > 0?$scope.user.repostSettings.trade.comments[Math.random() * $scope.user.repostSettings.trade.comments.length]:'';}$scope.commentSrc = 'assets/images/comment.svg';}}};$scope.checkLikeEnable = function(){if($scope.user.repostSettings && $scope.user.repostSettings.schedule){if($scope.user.repostSettings.schedule.like == false){$scope.likeSrc = 'assets/images/like.svg';$scope.likeEvent = false;}else {$scope.likeSrc = 'assets/images/likeTrue.svg';$scope.likeEvent = true;}}};$scope.changeLikeCommentIcons = function(type){console.log(type);if(type == 'like'){console.log($scope.likeSrc);if($scope.likeSrc == 'assets/images/like.svg'){$scope.likeSrc = 'assets/images/likeTrue.svg';$scope.likeEvent = true;}else {$scope.likeSrc = 'assets/images/like.svg';$scope.likeEvent = false;}console.log($scope.likeSrc);}else {console.log($scope.commentSrc);if($scope.commentSrc == 'assets/images/comment.svg'){$scope.commentSrc = 'assets/images/noComment.svg';$scope.makeEvent.isComment = false;$scope.commentEvent = false;$scope.disable = true;$scope.eventComment = "";}else {$scope.commentSrc = 'assets/images/comment.svg';$scope.commentEvent = true;$scope.makeEvent.isComment = true;$scope.disable = false;commentIndex = 0;if($scope.slotType == 'track'){$scope.eventComment = $scope.isComment?$scope.isComment:$scope.user.repostSettings.schedule.comments.length > 1?$scope.user.repostSettings.schedule.comments[Math.random() * $scope.user.repostSettings.schedule.comments.length >> 0]:$scope.user.repostSettings.schedule.comments[0];}else {$scope.eventComment = $scope.isComment?$scope.isComment:$scope.user.repostSettings.trade.comments.length > 1?$scope.user.repostSettings.trade.comments[Math.random() * $scope.user.repostSettings.trade.comments.length >> 0]:$scope.user.repostSettings.trade.comments[0];}}}};$scope.getPrevNextComment = function(type){if(type == 'next'){if($scope.slotType == 'track' && commentIndex < $scope.user.repostSettings.schedule.comments.length - 1){commentIndex = commentIndex + 1;$scope.eventComment = $scope.user.repostSettings.schedule.comments[commentIndex];}else if($scope.slotType == 'traded' && commentIndex < $scope.user.repostSettings.trade.comments.length - 1){commentIndex = commentIndex + 1;$scope.eventComment = $scope.user.repostSettings.trade.comments[commentIndex];}}else {if($scope.slotType == 'track' && commentIndex >= 1){commentIndex = commentIndex - 1;$scope.eventComment = $scope.user.repostSettings.schedule.comments[commentIndex];}else if($scope.slotType == 'traded' && commentIndex >= 1){commentIndex = commentIndex - 1;$scope.eventComment = $scope.user.repostSettings.trade.comments[commentIndex];}}};$scope.saveRepostSettings = function(){$http.put('/api/database/updateRepostSettings',{repostSettings:$scope.user.repostSettings,id:$scope.user._id}).then(function(res){console.log(res.data);SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.checkCommentEnable();$scope.checkLikeEnable();});};$scope.deleteComment = function(commentIndex,type){if(type == 'schedule'){$scope.user.repostSettings.schedule.comments.splice(commentIndex,1);}else if(type == 'trade'){$scope.user.repostSettings.trade.comments.splice(commentIndex,1);}$scope.saveRepostSettings();};$scope.saveComments = function(value,type,index){var comments=[];if(type == 'schedule' && value){comments = $scope.user.repostSettings.schedule.comments?$scope.user.repostSettings.schedule.comments:[];if(index == undefined)comments.push(value);else comments[index] = value;$scope.user.repostSettings.schedule.comments = comments;$scope.saveRepostSettings();$scope.scheduleComment = "";}else if(type == 'trade' && value){comments = $scope.user.repostSettings.trade.comments?$scope.user.repostSettings.trade.comments:[];if(index == undefined)comments.push(value);else comments[index] = value;$scope.user.repostSettings.trade.comments = comments;$scope.saveRepostSettings();$scope.tradeComment = "";}else {$.Zebra_Dialog("Please enter comment");return;}};$scope.editComments = function(comment,type,index){console.log(index);$scope.scheduleCommentIndex = index;if(type == 'schedule'){$('#scheduleCommentModal').modal('show');$scope.scheduleComment = comment;}else if(type == 'trade'){$('#tradeCommentModal').modal('show');$scope.tradeComment = comment;}};$scope.setActive = function(type){$scope.displayType = type;};$scope.setChannel = function(value){if($scope.displayType == 'channel'){var index=$scope.channelArr.indexOf(value);if(index == -1){$scope.channelArr.push(value);}else {$scope.channelArr.splice(index,1);}}$scope.otherChannelsAndGroups();$scope.followersCount();};$scope.setGroup = function(value){if($scope.displayType == 'group'){var index=$scope.groupArr.indexOf(value);if(index == -1){$scope.groupArr.push(value);}else {$scope.groupArr.splice(index,1);}}$scope.otherChannelsAndGroups();$scope.followersCount();};function formatAMPM(date){var hours=date.getHours();var minutes=date.getMinutes();var ampm=hours >= 12?'PM':'AM';hours = hours % 12;hours = hours?hours:12; // the hour '0' should be '12'
minutes = minutes < 10?'0' + minutes:minutes;var strTime=(hours < 10?hours:hours) + ':' + minutes + ampm;return strTime;}$scope.pseudoAvailableSlots = $scope.user.pseudoAvailableSlots != undefined?$scope.user.pseudoAvailableSlots:defaultAvailableSlots;$scope.setView = function(view){$scope.itemview = view;$scope.getListEvents();};$scope.trackChange = function(index){$scope.makeEventURL = $scope.trackListSlotObj.permalink_url;$scope.changeURL();};$scope.showTab = function(){$scope.tabSelected = true;};$scope.addNewSong = function(){$scope.isEdit = false;$scope.tabSelected = false;$scope.makeEventURL = "";$scope.makeEvent = {type:'track'};$scope.unrepostHours = "48";$scope.unrepostEnable = true;$scope.eventComment = "";$scope.channelArr = [];$scope.selectedSlot = "";$scope.followersCount();$scope.setScheduleLikeComment();$scope.showPlayer = false;$scope.getListEvents();if($scope.listAvailableSlots[0])$scope.selectedSlot = $scope.firstSlot = JSON.stringify($scope.listAvailableSlots[0]);$scope.clickAvailableSlots($scope.firstSlot);};$scope.isSchedule = false;$scope.scheduleSong = function(date){$scope.isTraded = false;$scope.afcount = 0;$scope.isEdit = false;$scope.isSchedule = true;$scope.tabSelected = false;$scope.isView = false;$scope.unrepostEnable = true;$scope.unrepostHours = "48";$scope.newEvent = true;$scope.showPlayer = false;$scope.isComment = "";$scope.setScheduleLikeComment();document.getElementById('scPlayer').style.visibility = "hidden";$scope.makeEvent = {userID:$scope.user.soundcloud.id,type:"track"};$scope.selectedSlot = date;var selectedSlot=new Date($scope.selectedSlot);var day=new Date(selectedSlot.getTime() - selectedSlot.getTimezoneOffset() * 60000).toISOString();var hour=ConvertStringTimeToUTC(selectedSlot.getHours());var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent.day = makeDay;$scope.selectedSlot = new Date(date);$scope.editChannelArr = [];$scope.channelArr = [];$scope.slotType = 'track';};$scope.isEdit = false;$scope.EditNewSong = function(item,editable){$scope.afcount = 0;$scope.editChannelArr = [];$scope.tabSelected = false;$scope.isEdit = true;$scope.isTraded = false;$scope.isSchedule = false;$scope.deleteEventData = item;var newObj=angular.copy(item);$scope.makeEventURL = newObj.event.trackURL;$scope.selectedSlot = newObj.event.day;$scope.likeSrc = newObj.event.like == true?'assets/images/likeTrue.svg':'assets/images/like.svg';$scope.likeEvent = newObj.event.like;$scope.commentSrc = newObj.event.comment != ""?'assets/images/comment.svg':'assets/images/noComment.svg';$scope.commentEvent = newObj.event.comment != ""?true:false;$scope.disable = !$scope.commentEvent;$scope.eventComment = "";if($scope.commentEvent){$scope.eventComment = newObj.event.comment;$scope.isComment = newObj.event.comment;}$scope.timeGap = newObj.event.timeGap;$scope.unrepostHours = newObj.event.unrepostHours;$scope.unrepostEnable = new Date(newObj.event.unrepostDate) > new Date(1000);var channels=newObj.event.otherChannels;if(channels.length > 0){for(var i=0;i < channels.length;i++) {for(var j=0;j < $scope.linkedAccounts.length;j++) {if(channels[i] == $scope.linkedAccounts[j].soundcloud.id){$scope.editChannelArr.push($scope.linkedAccounts[j].name);}}}$scope.channelArr = $scope.editChannelArr;}SC.Widget('scPlayer').load($scope.makeEventURL,{auto_play:false,show_artwork:true});$scope.slotType = item.event.type;if($scope.slotType == "traded" || $scope.slotType == 'paid')$scope.isTraded = true;$scope.showPlayer = true;document.getElementById('scPlayer').style.visibility = "visible";if(item.event.type == 'traded' && item.event.trackURL){$scope.isView = true;}else if(item.event.type == 'traded' && !item.event.trackURL){$scope.setTradedLikeComment();}else if(item.event.type == 'traded' && !item.event.trackURL){$scope.setTradedLikeComment();}$scope.followersCount();$scope.makeEvent = {};$scope.newEvent = false;var selectedSlot=$scope.selectedSlot;var day=new Date(selectedSlot.getTime() - selectedSlot.getTimezoneOffset() * 60000).toISOString();var hour=ConvertStringTimeToUTC(selectedSlot.getHours());var makeDay=new Date(day);makeDay.setHours(hour);$scope.makeEvent.trackID = newObj.event.trackID;$scope.makeEvent.day = makeDay;$scope.makeEvent._id = newObj.event._id;$scope.makeEvent.trackURL = $scope.makeEventURL;$scope.makeEvent.title = newObj.event.title;$scope.makeEvent.type = item.event.type;$scope.makeEvent.owner = newObj.event.owner;};$scope.addNewSongCancel = function(){$scope.tabSelected = true;$scope.makeEventURL = "";$scope.makeEvent = null;$scope.showPlayer = false;};function getshortdate(d){var YYYY=d.getFullYear();var M=d.getMonth() + 1;var D=d.getDate();var MM=M < 10?'0' + M:M;var DD=D < 10?'0' + D:D;var result=MM + "/" + DD + "/" + YYYY;return result;}$scope.getPreviousEvents = function(){$scope.listDayIncr--;$scope.getListEvents();};$scope.getListEvents = function(){$scope.listevents = [];var currentDate=new Date();currentDate.setDate(currentDate.getDate() + $scope.listDayIncr);for(var i=0;i < 7;i++) {var d=new Date(currentDate);d.setDate(d.getDate() + i);var currentDay=parseInt(d.getDay());var strDdate=getshortdate(d);var slots=$scope.pseudoAvailableSlots[daysArray[currentDay]];slots = slots.sort(function(a,b){return a - b;});angular.forEach(slots,function(s){var item=new Object();var h=s;var time='';if(h >= 12){h = h - 12;time = h + " PM";}else {time = h + " AM";}var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == d.toLocaleDateString();});var event=calendarDay.events.find(function(ev){return new Date(ev.day).getHours() == s;});item.event = event;var dt=new Date(strDdate);dt.setHours(s);item.date = new Date(dt);if(!item.event){if(new Date(item.date).getTime() > new Date().getTime()){$scope.listevents.push(item);}}else if(item.event){$scope.listevents.push(item);}if(event == undefined && new Date(item.date) > new Date()){item.slotdate = d;item.slottime = time;$scope.listAvailableSlots.push(item);}});}};$scope.getNextEvents = function(){$scope.listDayIncr++;$scope.getListEvents();};$scope.getNextDayOfWeek = function(){var thisDay=new Date();for(var i=0;i < 7;i++) {thisDay.setDate(thisDay.getDate() + 1);}};$scope.toggleAvailableSlot = function(day,hour){var pushhour=parseInt(hour);if($scope.pseudoAvailableSlots[daysArray[day]].indexOf(pushhour) > -1){$scope.pseudoAvailableSlots[daysArray[day]].splice($scope.pseudoAvailableSlots[daysArray[day]].indexOf(pushhour),1);}else if($scope.tooManyReposts(day,hour)){$.Zebra_Dialog("Cannot schedule slot. We only allow 12 reposts within 24 hours to prevent you from being repost blocked.");return;}else {$scope.pseudoAvailableSlots[daysArray[day]].push(pushhour);}$scope.user.availableSlots = createAvailableSlots($scope.user,$scope.pseudoAvailableSlots);$http.post('/api/events/saveAvailableSlots',{availableslots:$scope.user.availableSlots,id:$scope.user._id}).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();}).then(null,console.log);};$scope.tooManyReposts = function(day,hour){var startDayInt=(day + 6) % 7;var allSlots=[];var wouldBeSlots=JSON.parse(JSON.stringify($scope.pseudoAvailableSlots));wouldBeSlots[daysArray[day]].push(hour);for(var i=0;i < 3;i++) {wouldBeSlots[daysArray[(startDayInt + i) % 7]].forEach(function(slot){allSlots.push(slot + i * 24);});}allSlots = allSlots.sort(function(a,b){return a - b;});var checkingSlots=[];var status=false;allSlots.forEach(function(slot){var i=0;while(i < checkingSlots.length) {if(Math.abs(checkingSlots[i] - slot) >= 24)checkingSlots.splice(i,1);else i++;}checkingSlots.push(slot);if(checkingSlots.length > 12){status = true;}});return status;};$scope.setSlotStyle = function(day,hour){var style={'border-radius':'4px'};if($scope.pseudoAvailableSlots && $scope.pseudoAvailableSlots[daysArray[day]].indexOf(hour) > -1){style = {'background-color':"#fff",'border-color':"#999",'border-radius':'4px'};}return style;};$scope.getChannels = function(){$scope.channels = ["Emil","Tobias","Linus"];};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();})['catch'](function(response){$scope.processing = false;if(!$scope.$$phase)$scope.$apply();});}};$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",$scope.user).then(function(res){SessionService.create(res.data);$scope.user = SessionService.getUser();$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});};$scope.incrDay = function(){if($scope.dayIncr < 42)$scope.dayIncr++;};$scope.decrDay = function(){if($scope.dayIncr > 0)$scope.dayIncr--;};function ConvertStringTimeToUTC(strTime){var time=String(strTime);var hours=Number(time.split(':')[0]);var AMPM=time.split(' ')[1];if(AMPM === "PM" && hours < 12){hours = hours + 12;}if(AMPM === "AM" && hours === 12){hours = hours - 12;}var sHours=hours.toString();if(hours < 10){sHours = "0" + sHours;}return sHours;}$scope.clickAvailableSlots = function(selectedSlot){selectedSlot = JSON.parse(selectedSlot);var day=new Date(selectedSlot.slotdate);var hour=ConvertStringTimeToUTC(selectedSlot.slottime);var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});if(!$scope.makeEvent){$scope.makeEvent = {userID:$scope.user.soundcloud.id,type:"track"};}$scope.newEvent = true;var makeDay=new Date(selectedSlot.slotdate);makeDay.setHours(hour);$scope.makeEvent.day = makeDay;$scope.makeEventURL = $scope.makeEvent.trackURL;};$scope.populateOpenSlots = function(){$scope.openSlots = [];var currentDate=new Date();currentDate.setDate(currentDate.getDate() + $scope.listDayIncr);for(var i=0;i < 7;i++) {var d=new Date(currentDate);d.setDate(d.getDate() + i);var currentDay=parseInt(d.getDay());var strDdate=getshortdate(d);var slots=$scope.pseudoAvailableSlots[daysArray[currentDay]];slots = slots.sort(function(a,b){return a - b;});angular.forEach(slots,function(s){var item=new Object();var h=s;var time='';if(h >= 12){h = h - 12;time = h + " PM";}else {time = h + " AM";}var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == d.toLocaleDateString();});var event=calendarDay.events.find(function(ev){return new Date(ev.day).getHours() == s;});item.event = event;var dt=new Date(strDdate);dt.setHours(s);item.date = new Date(dt);if(!item.event){if(new Date(item.date).getTime() > new Date().getTime()){$scope.listevents.push(item);}}else if(item.event){$scope.listevents.push(item);}if(event == undefined && new Date(item.date) > new Date()){item.slotdate = d;item.slottime = time;var newDate=new Date(item.date);newDate.setMinutes(30);$scope.openSlots.push(newDate);}});}};$scope.makeEventDayChange = function(){$scope.makeEvent.day = new Date(parseInt($scope.makeEventDay));};$scope.clickedSlot = function(day,hour,data){$scope.afcount = 0;$scope.isView = false;$scope.popup = true;$scope.slotType = 'track';var d=new Date(day).getDay();if($scope.pseudoAvailableSlots[daysArray[d]].indexOf(hour) == -1 && data.type == 'empty')return;var makeDay=new Date(day);makeDay.setHours(hour);if($scope.user.blockRelease && new Date($scope.user.blockRelease).getTime() > new Date(makeDay).getTime()){$.Zebra_Dialog("Sorry! You are blocked till date " + moment($scope.user.blockRelease).format('LLL'));return;}$scope.showOverlay = true;var calDay={};var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == day.toLocaleDateString();});$scope.makeEventURL = "";$scope.trackListSlotObj = undefined;$scope.makeEvent = JSON.parse(JSON.stringify(calendarDay.events[hour]));$scope.unrepostEnable = new Date($scope.makeEvent.unrepostDate) > new Date(1000);$scope.unrepostHours = "";$scope.updateReach();$scope.setScheduleLikeComment();if($scope.makeEvent.type == "empty"){makeDay = new Date(day);makeDay.setHours(hour);$scope.makeEvent = {userID:$scope.user.soundcloud.id,day:makeDay,type:"track"};$scope.channelArr = [];$scope.isEdit = false;$scope.isTraded = false;if($scope.commentEvent == true)$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.schedule && $scope.user.repostSettings.schedule.comments && $scope.user.repostSettings.schedule.comments.length > 0?$scope.user.repostSettings.schedule.comments[Math.random() * $scope.user.repostSettings.schedule.comments.length >> 0]:'';$scope.isComment = "";document.getElementById('scPopupPlayer').style.visibility = "hidden";$scope.showPlayer = false;$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEventDay = JSON.stringify($scope.makeEvent.day.getTime());$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + 24 * 60 * 60 * 1000);$scope.unrepostEnable = true;$scope.unrepostHours = "48";$scope.makeEvent.unrepost = true;$scope.newEvent = true;$scope.editChannelArr = [];$scope.channelArr = [];$scope.makeEvent.hoursBetween = 1;}else {if(data.type == 'traded' || data.type == 'paid')$scope.isTraded = true;$scope.isEdit = true;$scope.likeSrc = data.like == true?'assets/images/likeTrue.svg':'assets/images/like.svg';$scope.likeEvent = data.like;$scope.commentSrc = data.comment != ""?'assets/images/comment.svg':'assets/images/noComment.svg';$scope.commentEvent = data.comment != ""?true:false;if($scope.commentEvent == false){$scope.eventComment = "";}$scope.disable = $scope.commentEvent == true?false:true;$scope.editChannelArr = [];$scope.channelArr = [];var channels=data.otherChannels;if(channels.length > 0){for(var i=0;i < channels.length;i++) {for(var j=0;j < $scope.linkedAccounts.length;j++) {if(channels[i] == $scope.linkedAccounts[j].soundcloud.id){$scope.editChannelArr.push($scope.linkedAccounts[j].name);}}}$scope.channelArr = $scope.editChannelArr;}$scope.timeGap = data.timeGap;$scope.followersCount();var repostDate=new Date($scope.makeEvent.day);var unrepostDate=new Date($scope.makeEvent.unrepostDate);var diff=Math.abs(new Date(unrepostDate).getTime() - new Date(repostDate).getTime()) / 3600000;$scope.makeEvent.unrepostHours = diff;$scope.unrepostHours = data.unrepostHours;$scope.makeEvent.day = new Date($scope.makeEvent.day);$scope.makeEventDay = JSON.stringify($scope.makeEvent.day.getTime());$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.unrepostDate);$scope.makeEvent.unrepost = $scope.makeEvent.unrepostDate > new Date();$scope.makeEventURL = $scope.makeEvent.trackURL;$scope.makeEvent.trackID = data.trackID;$scope.makeEvent.hoursBetween = 1;$scope.newEvent = false;SC.Widget('scPopupPlayer').load($scope.makeEventURL,{auto_play:false,show_artwork:false});$scope.showPlayer = true;document.getElementById('scPopupPlayer').style.visibility = "visible";if(data.type == 'traded' && data.trackURL){$scope.slotType = 'traded';$scope.isView = true;$scope.eventComment = "";$scope.isComment = "";if($scope.commentEvent){$scope.eventComment = $scope.makeEvent.comment;$scope.isComment = $scope.makeEvent.comment;}}else if(data.type != 'traded' && data.trackURL){$scope.slotType = 'track';$scope.showPlayer = true;if($scope.commentEvent)$scope.eventComment = $scope.makeEvent.comment;$scope.isComment = $scope.makeEvent.comment;}else if(data.type == 'traded' && !data.trackURL){$scope.setTradedLikeComment();$scope.slotType = 'traded';$scope.showPlayer = false;}}console.log($scope.makeEvent.day);$scope.populateOpenSlots();};$scope.setScheduleLikeComment = function(){if($scope.user.repostSettings && $scope.user.repostSettings.schedule){if($scope.user.repostSettings.schedule.like == false){$scope.likeSrc = 'assets/images/like.svg';$scope.likeEvent = false;}else {$scope.likeSrc = 'assets/images/likeTrue.svg';$scope.likeEvent = true;}}if($scope.user.repostSettings && $scope.user.repostSettings.schedule && $scope.user.repostSettings.schedule.comment == false){$scope.disable = true;$scope.commentEvent = false;$scope.eventComment = "";$scope.commentSrc = 'assets/images/noComment.svg';}else {$scope.disable = false;$scope.commentEvent = true;$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.schedule && $scope.user.repostSettings.schedule.comments && $scope.user.repostSettings.schedule.comments.length > 0?$scope.user.repostSettings.schedule.comments[Math.random() * $scope.user.repostSettings.schedule.comments.length >> 0]:'';$scope.commentSrc = 'assets/images/comment.svg';}};$scope.setTradedLikeComment = function(){if($scope.user.repostSettings && $scope.user.repostSettings.trade){if($scope.user.repostSettings.trade.like == false){$scope.likeSrc = 'assets/images/like.svg';$scope.likeEvent = false;}else {$scope.likeSrc = 'assets/images/likeTrue.svg';$scope.likeEvent = true;}}if($scope.user.repostSettings && $scope.user.repostSettings.trade && $scope.user.repostSettings.trade.comment == false){$scope.disable = true;$scope.commentEvent = false;$scope.eventComment = "";$scope.commentSrc = 'assets/images/noComment.svg';}else {$scope.disable = false;$scope.commentEvent = true;$scope.eventComment = $scope.user.repostSettings && $scope.user.repostSettings.trade && $scope.user.repostSettings.trade.comments && $scope.user.repostSettings.trade.comments.length > 0?$scope.user.repostSettings.trade.comments[Math.random() * $scope.user.repostSettings.trade.comments.length >> 0]:'';$scope.commentSrc = 'assets/images/comment.svg';}};$scope.changeQueueSlot = function(){$scope.makeEvent.title = null;$scope.makeEvent.trackURL = null;$scope.makeEvent.artistName = null;$scope.makeEvent.trackID = null;$scope.makeEventURL = null;};$scope.log = function(){console.log($scope.otherChannels);};$scope.deleteEvent = function(){if(!$scope.newEvent){$scope.processing = true;$http['delete']('/api/events/repostEvents/' + $scope.makeEvent._id).then(function(res){return $scope.refreshEvents();}).then(function(res){$scope.showOverlay = false;$scope.processing = false;$scope.showPlayer = false;$state.reload();}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not delete.");});}else {var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == $scope.makeEvent.day.toLocaleDateString();});calendarDay.events[$scope.makeEvent.day.getHours()] = {type:"empty"};$scope.showOverlay = false;}};$scope.setCalendarEvent = function(event){event.day = new Date(event.day);var calendarDay=$scope.calendar.find(function(calD){return calD.day.toLocaleDateString() == event.day.toLocaleDateString();});calendarDay.events[event.day.getHours()] = event;};$scope.findUnrepostOverlap = function(){if(!$scope.makeEvent.trackID)return false;var blockEvents=$scope.events.filter(function(event){if(event._id == $scope.makeEvent._id || $scope.makeEvent.trackID != event.trackID)return false;event.day = new Date(event.day);event.unrepostDate = new Date(event.unrepostDate);var eventLowerBound=$scope.makeEvent.day.getTime();var eventUpperBound=$scope.makeEvent.unrepostDate > $scope.makeEvent.day?$scope.makeEvent.unrepostDate.getTime() + 24 * 3600000:$scope.makeEvent.day.getTime() + 48 * 3600000;var makeEventLowerBound=event.day.getTime();var makeEventUpperBound=event.unrepostDate > event.day?event.unrepostDate.getTime() + 24 * 3600000:event.day.getTime() + 48 * 3600000;return event.day.getTime() > eventLowerBound && event.day.getTime() < eventUpperBound || $scope.makeEvent.day.getTime() > makeEventLowerBound && $scope.makeEvent.day.getTime() < makeEventUpperBound;});return blockEvents.length > 0;};$scope.otherChannelsAndGroups = function(){$scope.selectedGroupChannelIDS = [];if($scope.role == 'admin'){$scope.groupAndChannel = $scope.channelArr.concat($scope.groupArr);$scope.groupAndChannel.forEach(function(g){$scope.user.paidRepost.forEach(function(acc){if(acc.groups.indexOf(g) != -1){if($scope.selectedGroupChannelIDS.indexOf(acc.id) == -1){$scope.selectedGroupChannelIDS.push(acc.id);}}else {if(acc.username == g){if($scope.selectedGroupChannelIDS.indexOf(acc.id) == -1){$scope.selectedGroupChannelIDS.push(acc.id);}}}});});return $scope.selectedGroupChannelIDS;}else {$scope.channelArr.forEach(function(ch){$scope.linkedAccounts.forEach(function(acc){if(acc.soundcloud && acc.soundcloud.username == ch){if($scope.selectedGroupChannelIDS.indexOf(acc.soundcloud.id) == -1){$scope.selectedGroupChannelIDS.push(acc.soundcloud.id);}}});});return $scope.selectedGroupChannelIDS;}};$scope.saveEvent = function(){var otherChannels=$scope.otherChannelsAndGroups();if(otherChannels.length > 0){$scope.makeEvent.otherChannels = otherChannels;}else {$scope.makeEvent.otherChannels = [];}if($scope.unrepostEnable){$scope.makeEvent.unrepostDate = new Date($scope.makeEvent.day.getTime() + parseInt($scope.unrepostHours) * 60 * 60 * 1000);$scope.makeEvent.unrepost = true;}else {$scope.makeEvent.unrepostDate = new Date(0);$scope.makeEvent.unrepost = false;}$scope.makeEvent.userID = $scope.user.soundcloud.id;$scope.makeEvent.like = $scope.likeEvent;$scope.makeEvent.unrepostHours = $scope.unrepostHours;$scope.makeEvent.timeGap = $scope.timeGap;$scope.makeEvent.comment = $scope.commentEvent == true?$scope.eventComment:'';if($scope.trackType == "playlist"){$.Zebra_Dialog("Sorry! We don't currently allow playlist reposting. Please enter a track url instead.");return;}else if($scope.trackArtistID == $scope.user.soundcloud.id){$.Zebra_Dialog("Sorry! You cannot schedule your own track to be reposted.");return;}else if($scope.findUnrepostOverlap()){$.Zebra_Dialog('Issue! Please allow at least 24 hours between unreposting a track and re-reposting it and at least 48 hours between reposts of the same track.');return;}if(!$scope.makeEvent.trackID && $scope.makeEvent.type == "track"){$.Zebra_Dialog("Pleae add a track.");}else {$scope.processing = true;if($scope.newEvent){for(var key in $scope.otherChannels) {if($scope.otherChannels[key])$scope.makeEvent.otherChannels.push(key);}$scope.makeEvent.timeGap = parseInt($scope.timeGap);var req=$http.post('/api/events/repostEventsScheduler',$scope.makeEvent);$scope.otherChannels = [];$scope.timeGap = '1';}else {var req=$http.put('/api/events/repostEvents',$scope.makeEvent);}req.then(function(res){if(res){$scope.repostResponse = res.data;$scope.repostResponse.user = $scope.user;$('#pop').modal('show');}$scope.makeEventURL = "";$scope.makeEvent = null;$scope.eventComment = "";$scope.unrepostEnable = false;document.getElementById('scPlayer').style.visibility = "hidden";document.getElementById('scPopupPlayer').style.visibility = "hidden";$scope.unrepostHours = 1;$scope.tabSelected = true;$scope.trackType = "";$scope.trackArtistID = 0;return $scope.refreshEvents();}).then(function(res){if(res){$scope.repostResponse = res.data;$scope.repostResponse.user = $scope.user;$('#pop').modal('show');}$scope.makeEventURL = "";$scope.makeEvent = null;$scope.eventComment = "";$scope.unrepostEnable = false;document.getElementById('scPlayer').style.visibility = "hidden";document.getElementById('scPopupPlayer').style.visibility = "hidden";$scope.unrepostHours = 1;$scope.tabSelected = true;$scope.showOverlay = false;$scope.processing = false;$scope.trackType = "";$scope.trackArtistID = 0;$scope.refreshEvents();}).then(null,function(err){$scope.processing = false;$.Zebra_Dialog("ERROR: Did not save.");});}};$scope.emailSlot = function(){var mailto_link="mailto:?subject=Repost of " + $scope.makeEvent.title + '&body=Hey,\n\n I am reposting your song ' + $scope.makeEvent.title + ' on ' + $scope.user.soundcloud.username + ' on ' + $scope.makeEvent.day.toLocaleDateString() + '.\n\n Best, \n' + $scope.user.soundcloud.username;location.href = encodeURI(mailto_link);};$scope.backEvent = function(){$scope.makeEvent = null;$scope.trackType = "";$scope.trackArtistID = 0;$scope.showOverlay = false;$scope.unrepostEnable = false;$scope.unrepostHours = "";$scope.showPlayer = false;};$scope.dayOfWeekAsString = function(date){var dayIndex=date.getDay();if(screen.width > '744'){return ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][dayIndex];}return ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][dayIndex];};$scope.unrepostSymbol = function(event){if(!event.unrepostDate)return;event.unrepostDate = new Date(event.unrepostDate);return event.unrepostDate > new Date();};$scope.getStyle = function(event,date,day,hour){var style={'border-radius':'4px'};var currentDay=new Date(date).getDay();var date=new Date(date).setHours(hour);if($scope.pseudoAvailableSlots[daysArray[currentDay]] && $scope.pseudoAvailableSlots[daysArray[currentDay]].indexOf(hour) > -1 && date > new Date()){style = {'background-color':'#fff','border-color':"#999",'border-radius':'4px'};}return style;};$scope.getEventStyle = function(event){if(event.type == 'empty'){return {};}else if(event.type == 'track' || event.type == 'queue'){return {'background-color':'#FF7676','margin':'2px','height':'18px','border-radius':'4px'};}else if(event.type == 'traded'){return {'background-color':'#FFD450','margin':'2px','height':'18px','border-radius':'4px'};}else if(event.type == 'paid'){return {'background-color':'#FFBBDD','margin':'2px','height':'18px','border-radius':'4px'};}};$scope.refreshEvents = function(){return $http.get('/api/events/forUser/' + SessionService.getUser().soundcloud.id).then(function(res){var events=res.data;events.forEach(function(ev){ev.day = new Date(ev.day);ev.unrepostDate = ev.unrepostDate?new Date(ev.unrepostDate):new Date(0);});$scope.events = events;$scope.calendar = $scope.fillDateArrays(events);$scope.getListEvents();});};$scope.fillDateArrays = function(events){var calendar=[];var today=new Date();today.setDate(today.getDate() - 7);for(var i=0;i < 49;i++) {var calDay={};calDay.day = new Date(today);calDay.day.setDate(today.getDate() + i);var dayEvents=$scope.events.filter(function(ev){return ev.day.toLocaleDateString() == calDay.day.toLocaleDateString();});var eventArray=[];for(var j=0;j < 24;j++) {eventArray[j] = {type:"empty"};}dayEvents.forEach(function(ev){eventArray[ev.day.getHours()] = ev;});calDay.events = eventArray;calendar.push(calDay);}return calendar;};$scope.calendar = $scope.fillDateArrays($scope.events);$scope.verifyBrowser = function(){if(navigator.userAgent.search("Chrome") == -1 && navigator.userAgent.search("Safari") != -1){var position=navigator.userAgent.search("Version") + 8;var end=navigator.userAgent.search(" Safari");var version=navigator.userAgent.substring(position,end);if(parseInt(version) < 9){$.Zebra_Dialog('You have old version of safari. Click <a href="https://support.apple.com/downloads/safari">here</a> to download the latest version of safari for better site experience.',{'type':'confirmation','buttons':[{caption:'OK'}],'onClose':function onClose(){$window.location.href = "https://support.apple.com/downloads/safari";}});}}};$scope.updateReach = function(){$scope.repostReach = 0;$scope.repostReach = $scope.user.soundcloud.followers;for(var key in $scope.otherChannels) {if($scope.otherChannels[key]){var acct=$rootScope.userlinkedAccounts.find(function(acct){return acct.soundcloud.id == key;});$scope.repostReach += acct.soundcloud.followers;}}};$scope.followersCount = function(){var count=$scope.user.soundcloud.followers;var channels=$scope.otherChannelsAndGroups();if($scope.role == 'admin'){for(var i=0;i < $scope.user.paidRepost.length;i++) {if(channels.indexOf($scope.user.paidRepost[i].id) > -1){count = count + $scope.user.paidRepost[i].followers;}}}else {for(var i=0;i < $scope.linkedAccounts.length;i++) {if(channels.indexOf($scope.linkedAccounts[i].soundcloud.id) > -1){count = count + $scope.linkedAccounts[i].soundcloud.followers;}}}$scope.followCounts = count;};$scope.getTrackListFromSoundcloud = function(){var profile=$scope.user;if(profile.soundcloud){$scope.processing = true;SC.get('/users/' + profile.soundcloud.id + '/tracks',{filter:'public'}).then(function(tracks){$scope.trackList = tracks;$scope.processing = false;if(!$scope.$$phase)$scope.$apply();})['catch'](function(response){$scope.processing = false;if(!$scope.$$phase)$scope.$apply();});}};$scope.shareEvent = function(){$scope.repostResponse = $scope.makeEvent;$scope.repostResponse.user = $scope.user;$('#pop').modal('show');};$scope.getUserNetwork().then(function(){$scope.getLinkedAccounts();});$scope.followersCount();$scope.checkCommentEnable();$scope.checkLikeEnable();$scope.updateReach();$scope.verifyBrowser();}};});app.directive('adminsettings',function($http){return {templateUrl:'js/common/directives/settings/adminSettings.html',restrict:'E',scope:false,controller:function adminSettingsController($rootScope,$state,$scope,$http,$window,AccountSettingServices,SessionService){$scope.stepButton = [{"name":"SUBMITTER'S EMAIL","appendText":" {SUBMITTERS_EMAIL} "},{"name":"SUBMITTER'S NAME","appendText":" {SUBMITTERS_NAME} "},{"name":"TRACK TITLE","appendText":" {TRACK_TITLE} "},{"name":"TRACK TITLE WITH LINK","appendText":" {TRACK_TITLE_WITH_LINK} "},{"name":"TRACK ARTIST","appendText":" {TRACK_ARTIST} "},{"name":"TRACK ARTIST WITH LINK","appendText":" {TRACK_ARTIST_WITH_LINK} "},{"name":"TRACK ARTWORK","appendText":" {TRACK_ARTWORK} "},{"name":"SUBMITTED TO ACCOUNT NAME","appendText":" {SUBMITTED_TO_ACCOUNT_NAME} "},{"name":"SUBMITTED ACCOUNT NAME WITH LINK","appendText":" {SUBMITTED_ACCOUNT_NAME_WITH_LINK} "},{"name":"ACCEPTED CHANNELS LIST","appendText":" {ACCEPTED_CHANNEL_LIST} "},{"name":"ACCEPTED CHANNELS LIST WITH LINKS","appendText":" {ACCEPTED_CHANNEL_LIST_WITH_LINK} "},{"name":"TODAYS DATE","appendText":" {TODAYSDATE} "}];$scope.customBox = {"acceptance":{"title":"","subject":"","body":""},"decline":{"title":"","subject":"","body":""}};if($scope.AccountsStepData.paypal == undefined){$scope.AccountsStepData.paypal = {};$scope.AccountsStepData.paypal.varify = false;$scope.AccountsStepData.paypal.processchannel = false;}$scope.errorverification = false;$scope.verified = false;$scope.waitoneminute = false;if(window.location.href.indexOf('admin/basic/step1#generalInfo') != -1){$('.nav-tabs a[href="#generalInfo"]').tab('show');}else if(window.location.href.indexOf('admin/basic/step1#sce') != -1){$('.nav-tabs a[href="#sce"]').tab('show');}else if(window.location.href.indexOf('admin/basic/step1#psce') != -1){$('.nav-tabs a[href="#psce"]').tab('show');}else if(window.location.href.indexOf('admin/basic/step1#notifications') != -1){$('.nav-tabs a[href="#notifications"]').tab('show');}else if(window.location.href.indexOf('admin/basic/step1#paypalInfo') != -1){$('.nav-tabs a[href="#paypalInfo"]').tab('show');}$scope.showPasswordChange = false;$scope.addEventClass = function(index,type){$('.selectedBox').removeClass("selectedBox");$("." + type + index).addClass("selectedBox");console.log(type + index);};$scope.addCustomEmails = function(){if($scope.AccountsStepData.customizeemails.length > 0)$scope.AccountsStepData.customizeemails.push($scope.customBox);};$scope.sendTestMail = function(type){$scope.testEmailType = type;$scope.showTestEmailModal = true;$('#emailModal').modal('show');};$scope.sendMail = function(email){if(email != ""){var emailObj="";if($scope.testEmailType == "repostaccept"){emailObj = $scope.AccountsStepData.repostCustomizeEmails[0].acceptance;}if($scope.testEmailType == "repostdecline"){emailObj = $scope.AccountsStepData.repostCustomizeEmails[0].decline;}if($scope.testEmailType == "premieraccept"){emailObj = $scope.AccountsStepData.premierCustomizeEmails[0].acceptance;}if($scope.testEmailType == "premierdecline"){emailObj = $scope.AccountsStepData.premierCustomizeEmails[0].decline;}var mailObj={};mailObj.email = email;mailObj.emailObj = emailObj;$http.post('/api/accountsteps/sendTestEmail',mailObj).then(function(res){if(res.data.success){$scope.showTestEmailModal = false;$('#emailModal').modal('hide');}})['catch'](function(){$scope.showTestEmailModal = false;$('#emailModal').modal('hide');$.Zebra_Dialog('Error in sending mail.');});}};$scope.currentTab = window.location.href.split('#')[1];$scope.closeModal = function(){$scope.showTestEmailModal = false;$('#emailModal').modal('hide');};$scope.isFirstLogin = function(){if(!!$scope.AccountsStepData.paypal_email){$scope.activeTab = ['general','sce','psce','notifications','paypalInfo'];}else {window.location.href = '/admin/basic/step1#generalInfo';$scope.activeTab = ['general'];}};$scope.isFirstLogin();$scope.nextStep = function(step,currentData,type){if(type == "basic"){switch(step){case 1:$state.go("basicstep1");break;case 2:var next=true;var body={};if($scope.AccountsStepData.email == ""){next = false;$.Zebra_Dialog('Error: Enter email address');}else if($scope.AccountsStepData.email != ""){body.email = $scope.AccountsStepData.email;}if($scope.AccountsStepData.newpassword != "" && $scope.AccountsStepData.newconfirmpassword != $scope.AccountsStepData.newpassword){next = false;$.Zebra_Dialog('Error: Password doesn’t match');}else if($scope.AccountsStepData.newpassword != "" && $scope.AccountsStepData.newconfirmpassword == $scope.AccountsStepData.newpassword){body.password = $scope.AccountsStepData.newpassword;}if($scope.AccountsStepData.profilePicture == "https://i1.sndcdn.com/avatars-000223599301-0ns076-t500x500.jpg"){next = false;$.Zebra_Dialog('Error: Please upload your profile image');}if($scope.AccountsStepData.profilePicture != ""){body.pictureUrl = $scope.AccountsStepData.profilePicture;}if(next){AccountSettingServices.updateAdminProfile(body).then(function(res){if(res.data.message){$.Zebra_Dialog('Error: Email already register.');}else {$scope.AccountsStepData.newpassword = "";$scope.AccountsStepData.newconfirmpassword = "";$scope.processing = false;$scope.AccountsStepData.repostCustomizeEmails = $scope.AccountsStepData.repostCustomizeEmails.length > 0?$scope.AccountsStepData.repostCustomizeEmails:[{"acceptance":{"title":"ACCEPTANCE EMAIL","subject":"Congratulations on your Submission - {TRACK_TITLE}","body":"Hey {SUBMITTERS_NAME}!\n\nFirst and foremost thank you for submitting {TRACK_TITLE_WITH_LINK}! We’ve reviewed your submission and it has been approved for a repost on {SUBMITTED_ACCOUNT_NAME_WITH_LINK} and more. All you need to do is click the button below. You are open to repeat your promotion on any of these pages as many times as you would like, and the promotion page will remain active forever.\n\nWe thoroughly enjoyed listening to your production and we hope that in the future you submit your music to us. Keep working hard and put your heart into your productions, we will be here to help you with the rest.","buttonText":"Accept","buttonBgColor":"#592e2e"},"decline":{"title":"DECLINE EMAIL","subject":"Music Submission","body":"Hey {SUBMITTERS_NAME},\n\nThank you for submitting your track {TRACK_TITLE_WITH_LINK}! Sadly we have to inform you that we don’t think the track is ready to be shared by our channels. With that being said, do not get discouraged as many names that are now trending on SoundCloud have been turned down before. Keep in touch and we are always here to gladly review more tracks in the future.\n\nGood luck and stay true to yourself.","buttonText":"Decline","buttonBgColor":"#592e2e"}}];$scope.activeTab.push('sce');$('.nav-tabs a[href="#sce"]').tab('show');SessionService.createAdminUser($scope.AccountsStepData);}})['catch'](function(){$.Zebra_Dialog('Error: Error inprocessing the request.');});}else {return;}break;case 3:AccountSettingServices.updateAdminProfile({repostCustomizeEmails:$scope.AccountsStepData.repostCustomizeEmails}).then(function(res){$scope.processing = false;})['catch'](function(){}); // $scope.AccountsStepData.premierCustomizeEmails = (($scope.AccountsStepData.premierCustomizeEmails.length > 0) ? $scope.AccountsStepData.premierCustomizeEmails : [{
//  "acceptance": {
//    "title": "ACCEPTANCE EMAIL",
//    "subject": "Congratulations on your Submission -",
//    "body": "Hey {NAME}!\n\nFirst and foremost thank you for submitting {TRACK_TITLE_WITH_LINK} ! We’ve reviewed your submission and it has been approved for a repost on {nameofchannelsubmitted} and more. All you need to do is click the button below. You are open to repeat your promotion on any of these pages as many times as you would like, and the promotion page will remain active forever.\n\nWe thoroughly enjoyed listening to your production and we hope that in the future you submit your music to us. Keep working hard and put your heart into your productions, we will be here to help you with the rest.",
//    "buttonText": "Accept",
//    "buttonBgColor": "#592e2e"
//  },
//  "decline": {
//    "title": "DECLINE EMAIL",
//    "subject": "Music Submission",
//    "body": "Hey {NAME},\n\nThank you for submitting your track {TRACK_TITLE_WITH_LINK} ! Sadly we have to inform you that we don’t think the track is ready to be shared by our channels. With that being said, do not get discouraged as many names that are now trending on SoundCloud have been turned down before. Keep in touch and we are always here to gladly review more tracks in the future.\n\nGood luck and stay true to yourself.",
//    "buttonText": "Decline",
//    "buttonBgColor": "#592e2e"
//  }
// }]);
$scope.activeTab.push('notifications');$('.nav-tabs a[href="#notifications"]').tab('show');SessionService.createAdminUser($scope.AccountsStepData);break;case 4:AccountSettingServices.updateAdminProfile({premierCustomizeEmails:$scope.AccountsStepData.premierCustomizeEmails}).then(function(res){$scope.activeTab.push('notifications');$('.nav-tabs a[href="#notifications"]').tab('show');$scope.processing = false;})['catch'](function(){});SessionService.createAdminUser($scope.AccountsStepData);break;case 5:AccountSettingServices.updateAdminProfile({notificationSettings:$scope.AccountsStepData.notificationSettings,email:$scope.AccountsStepData.email}).then(function(res){$scope.processing = false;})['catch'](function(){});$scope.errorverification = false;$scope.verified = false;$scope.waitoneminute = false;SessionService.createAdminUser($scope.AccountsStepData);if($scope.AccountsStepData.paypal == undefined){$scope.AccountsStepData.paypal = {};$scope.AccountsStepData.paypal.varify = false;$scope.AccountsStepData.paypal.processchannel = false;}$scope.activeTab.push('paypalInfo');$('.nav-tabs a[href="#paypalInfo"]').tab('show');SessionService.createAdminUser($scope.AccountsStepData);break;}}if(type == "channel"){switch(step){case 1:$http.get("/connect/logout?return_to=https://soundcloud.com/connect?client_id=8002f0f8326d869668523d8e45a53b90&display=popup&redirect_uri=https://" + window.location.host + "/callback.html&response_type=code_and_token&scope=non-expiring&state=SoundCloud_Dialog_5fead");$state.go("channelstep1");break;case 2:SessionService.createAdminUser($scope.AccountsStepData);break;case 3:var next=true;if($scope.AccountsStepData.price == 0 || $scope.AccountsStepData.price == undefined){next = false;$.Zebra_Dialog('Error: Enter Price');}if(next){AccountSettingServices.updatePaidRepost({userID:$scope.AccountsStepData.submissionData.userID,price:$scope.AccountsStepData.price,description:$scope.AccountsStepData.description,groups:$scope.AccountsStepData.submissionData.groups?$scope.AccountsStepData.submissionData.groups:[],submissionUrl:$scope.AccountsStepData.submissionData.submissionUrl,premierUrl:$scope.AccountsStepData.submissionData.premierUrl}).then(function(res){SessionService.createAdminUser($scope.AccountsStepData);})['catch'](function(){});}else {return;}break;case 4:AccountSettingServices.addCustomize({userID:$scope.AccountsStepData.submissionData.userID,type:$scope.AccountsStepData.postData.type,background:$scope.AccountsStepData.postData.background,logo:$scope.AccountsStepData.postData.logo,heading:$scope.AccountsStepData.postData.heading,subHeading:$scope.AccountsStepData.postData.subHeading,inputFields:$scope.AccountsStepData.postData.inputFields,button:$scope.AccountsStepData.postData.button}).then(function(res){SessionService.createAdminUser($scope.AccountsStepData);})['catch'](function(){});break;case 5:AccountSettingServices.addCustomize({userID:$scope.AccountsStepData.submissionData.userID,type:$scope.AccountsStepData.premier.type,background:$scope.AccountsStepData.premier.background,logo:$scope.AccountsStepData.premier.logo,heading:$scope.AccountsStepData.premier.heading,subHeading:$scope.AccountsStepData.premier.subHeading,inputFields:$scope.AccountsStepData.premier.inputFields,button:$scope.AccountsStepData.premier.button}).then(function(res){if($scope.AccountsStepData.availableSlots == undefined)$scope.AccountsStepData.availableSlots = defaultAvailableSlots;SessionService.createAdminUser($scope.AccountsStepData);})['catch'](function(){});break;case 6:AccountSettingServices.updateUserAvailableSlot({_id:$scope.AccountsStepData.submissionData.userID,availableSlots:$scope.AccountsStepData.availableSlots}).then(function(res){$scope.processing = false;})['catch'](function(){});break;case 7:SessionService.removeAccountusers($scope.AccountsStepData);$rootScope.enableNavigation = false;$state.go("accounts");break;}}};$scope.appendBody = function(btn,type){var ids="#sce";if(type == "premier")ids = "#psce";console.log($(ids).find('.selectedBox'));if($(ids).find('.selectedBox').length){console.log($(ids).find('.selectedBox'));var boxIndex=$(ids).find('.selectedBox').attr("index");var cursorPos=$(ids).find('.selectedBox').prop('selectionStart');var v=$(ids).find('.selectedBox').val();var textBefore=v.substring(0,cursorPos);var textAfter=v.substring(cursorPos,v.length);var newtext=textBefore + btn.appendText + textAfter;$(ids).find('.selectedBox').val(newtext);$(ids).find('.selectedBox').trigger('input'); // if (type == "repost") {
//  if ($(ids).find('.selectedBox').hasClass("declinebox")) {
//    $scope.AccountsStepData.repostCustomizeEmails[boxIndex].decline.body = newtext;
//  } else if ($(ids).find('.selectedBox').hasClass("acceptancebox")) {
//    $scope.AccountsStepData.repostCustomizeEmails[boxIndex].acceptance.body = newtext;
//  }
// } else {
//  if ($(ids).find('.selectedBox').hasClass("declinebox")) {
//    $scope.AccountsStepData.premierCustomizeEmails[boxIndex].decline.body = newtext;
//  } else if ($(ids).find('.selectedBox').hasClass("acceptancebox")) {
//    $scope.AccountsStepData.premierCustomizeEmails[boxIndex].acceptance.body = newtext;
//  }
// }
$(ids).find('.selectedBox').removeClass("selectedBox");SessionService.createAdminUser($scope.AccountsStepData);}};$scope.generateRandomNumber = function(){var min=0.01,max=0.09,numbers=(Math.random() * (max - min) + min).toFixed(2);return numbers;};var daysArray=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];var defaultAvailableSlots={'sunday':[1,4,8,11,14,17,20],'monday':[1,4,8,11,14,17,20],'tuesday':[1,4,8,11,14,17,20],'wednesday':[1,4,8,11,14,17,20],'thursday':[1,4,8,11,14,17,20],'friday':[1,4,8,11,14,17,20],'saturday':[1,4,8,11,14,17,20]};$scope.sendTrailAmount = function(){var amountEmail=$scope.AccountsStepData.paypal_email;$scope.processing = true;$scope.errorverification = false;if($scope.isValidEmailAddress(amountEmail)){var price1=$scope.generateRandomNumber();var price2=$scope.generateRandomNumber();$scope.AccountsStepData.paypal.price1 = price1;$scope.AccountsStepData.paypal.price2 = price2;var paymentDetails={};paymentDetails.email = amountEmail;paymentDetails.price = price1;$http.post('/api/accountsteps/sendVarificationAccount',paymentDetails).then(function(res){if(res){paymentDetails.price = price2;$http.post('/api/accountsteps/sendVarificationAccount',paymentDetails).then(function(res){if(res){$scope.AccountsStepData.paypal.varify = true;$scope.verified = false;$scope.waitoneminute = true;$scope.processing = false;}});}else {$scope.errorverification = true;$scope.processing = false;}});}};$scope.isValidEmailAddress = function(emailAddress){var pattern=/^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;return pattern.test(emailAddress);};$scope.varifyaccount = function(){$scope.processing = true;$scope.errorverification = false;$scope.verified = false;$scope.waitoneminute = false;var paypaldata=$scope.AccountsStepData.paypal;if(paypaldata.price1 == parseFloat(paypaldata.pricea) && paypaldata.price2 == parseFloat(paypaldata.priceb) || paypaldata.price1 == parseFloat(paypaldata.priceb) && paypaldata.price2 == parseFloat(paypaldata.pricea)){$scope.AccountsStepData.paypal.processchannel = true;AccountSettingServices.updateAdminProfile({paypal_email:$scope.AccountsStepData.paypal_email}).then(function(res){$scope.processing = false;$scope.verified = true;$scope.waitoneminute = false;SessionService.createAdminUser($scope.AccountsStepData);$state.go('channelstep1');})['catch'](function(){});$scope.processing = false;}else {$scope.errorverification = true;$scope.processing = false;}};$scope.updateLOGOIMAGE = function(){$scope.processing = true;if($scope.AccountsStepData.profilePicture != ""){if(!(typeof $scope.AccountsStepData.profilePicture === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.profilePicture).then(function(res){if(res){$scope.AccountsStepData.profilePicture = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};}};});app.directive('channelsettings',function($http){return {templateUrl:'js/common/directives/settings/channelSettings.html',restrict:'E',scope:false,controller:function channelSettingsController($rootScope,$state,$scope,$http,$window,AccountSettingServices,SessionService){var commentIndex=0;$scope.saveRepostSettings = function(type){if(type == 'paid'){AccountSettingServices.updateAdminProfile({repostSettings:$scope.user.repostSettings}).then(function(res){$scope.processing = false;})['catch'](function(){});}else {$http.put('/api/database/updateRepostSettings',{repostSettings:$scope.AccountsStepData.repostSettings,id:$scope.AccountsStepData.submissionData.userID}).then(function(res){SessionService.createAdminUser($scope.AccountsStepData);});}};if(window.location.href.indexOf('admin/channel/step1#submissionUrl') != -1){$('.nav-tabs a[href="#submissionUrl"]').tab('show');}else if(window.location.href.indexOf('admin/channel/step1#setPrice') != -1){$('.nav-tabs a[href="#setPrice"]').tab('show');}else if(window.location.href.indexOf('admin/channel/step1#customSubmission') != -1){$('.nav-tabs a[href="#customSubmission"]').tab('show');}else if(window.location.href.indexOf('admin/channel/step1#customPremiereSubmission') != -1){$('.nav-tabs a[href="#customPremiereSubmission"]').tab('show');}else if(window.location.href.indexOf('admin/channel/step1#repostPreferences') != -1){$('.nav-tabs a[href="#repostPreferences"]').tab('show');}else if(window.location.href.indexOf('admin/channel/step1#manageReposts') != -1){$('.nav-tabs a[href="#manageReposts"]').tab('show');}$scope.finish = function(){$http.get('/api/users/byID/' + $scope.AccountsStepData.submissionData.userID).then(function(res){$window.localStorage.setItem('prevATUser',JSON.stringify(res.data));window.location.href = window.location.origin + "/admin/accounts";}).then(null,console.log);};$scope.defaultsRep = function(){var oldId=$scope.AccountsStepData.postData._id;$scope.AccountsStepData.postData = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.AccountsStepData.postData.heading.text = "Submission for Repost";$scope.AccountsStepData.postData.logo.images = $scope.AccountsStepData.postData.background.images = $scope.AccountsStepData.submissionData.avatarURL;$scope.AccountsStepData.postData.type = "submit";$scope.AccountsStepData.postData._id = oldId;};$scope.defaultsPrem = function(){var oldId=$scope.AccountsStepData.premier._id;$scope.AccountsStepData.premier = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.AccountsStepData.premier.heading.text = "Submission for Premiere";$scope.AccountsStepData.premier.logo.images = $scope.AccountsStepData.premier.background.images = $scope.AccountsStepData.submissionData.avatarURL;$scope.AccountsStepData.premier.type = "premiere";$scope.AccountsStepData.premier._id = oldId;};$scope.undoRep = function(){console.log($scope.AccountsStepData.postData._id);if(!$scope.AccountsStepData.postData._id){$scope.defaultsRep();}else {$http.get('/api/customSubmissions/getCustomSubmission/' + $scope.AccountsStepData.postData.userID + '/' + $scope.AccountsStepData.postData.type).then(function(res){console.log(res.data);$scope.AccountsStepData.postData = res.data;});}};$scope.undoPrem = function(){if(!$scope.AccountsStepData.premier._id){$scope.defaultsPrem();}else {$http.get('/api/customSubmissions/getCustomSubmission/' + $scope.AccountsStepData.premier.userID + '/' + $scope.AccountsStepData.premier.type).then(function(res){$scope.AccountsStepData.premier = res.data;});}};$scope.matchRep = function(){var oldId=$scope.AccountsStepData.premier._id;var saveHeading=$scope.AccountsStepData.premier.heading.text;var saveSubheading=$scope.AccountsStepData.premier.subHeading.text;$scope.AccountsStepData.premier = $scope.AccountsStepData.postData;$scope.AccountsStepData.premier.heading.text = saveHeading;$scope.AccountsStepData.premier.subHeading.text = saveSubheading;$scope.AccountsStepData.premier._id = oldId;$scope.AccountsStepData.premier.type = "premiere";};$scope.enableTemplate = function(template,type){if(type == 'submit'){var oldId=$scope.AccountsStepData.postData._id;var saveHeading=$scope.AccountsStepData.postData.heading.text;var saveSubheading=$scope.AccountsStepData.postData.subHeading.text;var saveBG=$scope.AccountsStepData.postData.background.images;var saveLogo=$scope.AccountsStepData.postData.logo.images;$scope.AccountsStepData.postData = JSON.parse(JSON.stringify(template));$scope.AccountsStepData.postData.logo.images = saveLogo;$scope.AccountsStepData.postData.background.images = saveBG;$scope.AccountsStepData.postData.heading.text = saveHeading;$scope.AccountsStepData.postData.subHeading.text = saveSubheading;$scope.AccountsStepData.postData.type = "submit";$scope.AccountsStepData.postData._id = oldId;}else {var oldId=$scope.AccountsStepData.premier._id;var saveHeading=$scope.AccountsStepData.premier.heading.text;var saveSubheading=$scope.AccountsStepData.premier.subHeading.text;var saveBG=$scope.AccountsStepData.premier.background.images;var saveLogo=$scope.AccountsStepData.premier.logo.images;$scope.AccountsStepData.premier = JSON.parse(JSON.stringify(template));$scope.AccountsStepData.premier.logo.images = saveLogo;$scope.AccountsStepData.premier.background.images = saveBG;$scope.AccountsStepData.premier.heading.text = saveHeading;$scope.AccountsStepData.premier.subHeading.text = saveSubheading;$scope.AccountsStepData.premier.type = "submit";$scope.AccountsStepData.premier._id = oldId;}};$scope.deleteTemplate = function(ind){$scope.processing = true;$scope.user.templates.splice(ind,1);$http.post('/api/users/saveTemplates',$scope.user.templates).then(function(res){$scope.user.templates = res.data;$scope.processing = false;}).then(null,alert);};$scope.saveTemplate = function(){$scope.processing = true;if(!$scope.user.templates)$scope.user.templates = [];$scope.user.templates.push($scope.AccountsStepData.postData);$http.post('/api/users/saveTemplates',$scope.user.templates).then(function(res){$scope.user.templates = res.data;$scope.processing = false;$.Zebra_Dialog('Template Saved');}).then(null,alert);};$scope.saveComments = function(value,type,index){var comments=[];if(type == 'paid' && value){comments = $scope.user.repostSettings.paid.comments?$scope.user.repostSettings.paid.comments:[];if(index == undefined)comments.push(value);else comments[index] = value;$scope.user.repostSettings.paid.comments = comments;$scope.saveRepostSettings('paid');$scope.paidComment = "";}else if(type == 'schedule' && value){comments = $scope.AccountsStepData.repostSettings.schedule.comments?$scope.AccountsStepData.repostSettings.schedule.comments:[];if(index == undefined)comments.push(value);else comments[index] = value;$scope.AccountsStepData.repostSettings.schedule.comments = comments;$scope.saveRepostSettings('schedule');$scope.scheduleComment = "";}else if(type == 'trade' && value){comments = $scope.AccountsStepData.repostSettings.trade.comments?$scope.AccountsStepData.repostSettings.trade.comments:[];if(index == undefined)comments.push(value);else comments[index] = value;$scope.AccountsStepData.repostSettings.trade.comments = comments;$scope.saveRepostSettings('trade');$scope.tradeComment = "";}else {$.Zebra_Dialog("Please enter comment");return;}};$scope.editComments = function(comment,type,index){$scope.scheduleCommentIndex = index;if(type == 'paid'){$('#paidCommentModal').modal('show');$scope.paidComment = comment;}if(type == 'schedule'){$('#scheduleCommentModal').modal('show');$scope.scheduleComment = comment;}else if(type == 'trade'){$('#tradeCommentModal').modal('show');$scope.tradeComment = comment;}}; // $scope.autoFillTracks = [];
// $scope.removeQueueSong = function(song) {
//  var index = $scope.AccountsStepData.queue.indexOf(song.id);
//  $scope.AccountsStepData.queue.splice(index, 1);
//  $scope.saveUser()
//  $scope.loadQueueSongs();
// }
// $scope.addSong = function() {
//  if ($scope.AccountsStepData.queue.indexOf($scope.newQueueID) != -1) return;
//  $scope.AccountsStepData.queue.push($scope.newQueueID);
//  $scope.saveUser();
//  $scope.loadQueueSongs();
// }
// /*sort start*/
// $scope.sortableOptions = {
//  stop: function(e, ui) {
//    var logEntry = $scope.autoFillTracks.map(function(i) {
//      return i.id;
//    });
//    $scope.AccountsStepData.queue = logEntry;
//    $scope.saveUser();
//  }
// };
// /*sort end*/
// $scope.loadQueueSongs = function(queue) {
//  if ($scope.disallowQueueLoad) return;
//  $scope.disallowQueueLoad = true;
//  setTimeout(function() {
//    $scope.disallowQueueLoad = false;
//  }, 1000);
//  var autofillWidget = SC.Widget('autofillPlayer');
//  $scope.autoFillTracks = [];
//  $scope.AccountsStepData.queue.forEach(function(trackID, index) {
//    SC.get('/tracks/' + trackID)
//      .then(function(data) {
//        $scope.autoFillTracks[index] = data;
//        if (!$scope.$$phase) $scope.$apply();
//      }).then(null, function(err) {
//        if (err.status == 403) {
//          function loadTrack(id, ind) {
//            if (!$scope.loadingAFWidget) {
//              $scope.loadingAFWidget = true;
//              $scope.showAutofillPlayer = true;
//              autofillWidget.load("http://api.soundcloud.com/tracks/" + id, {
//                auto_play: false,
//                show_artwork: false,
//                callback: function() {
//                  autofillWidget.getCurrentSound(function(track) {
//                    $scope.loadingAFWidget = false;
//                    $scope.showAutofillPlayer = false;
//                    $scope.autoFillTracks[ind] = track;
//                    if (!$scope.$$phase) $scope.$apply();
//                  });
//                }
//              });
//            } else {
//              setTimeout(function() {
//                loadTrack(id, ind);
//              }, 300)
//            }
//          }
//          loadTrack(trackID, index);
//        } else if (err.status == 404) {
//          $scope.AccountsStepData.queue.splice(index, 1);
//          $scope.saveUser()
//          $scope.loadQueueSongs();
//        }
//      }).then(null, console.log);
//  });
// }
// if ($scope.AccountsStepData && $scope.AccountsStepData.queue && !$scope.alreadyLoaded) {
//  $scope.loadQueueSongs();
//  $scope.alreadyLoaded == true;
// }
// $scope.choseAutoFillTrack = function(track) {
//  $scope.newQueueID = track.id;
//  $scope.addSong();
// }
// $scope.choseAutoFillPlaylist = function(playlist) {
//  playlist.tracks.forEach(function(track) {
//    if ($scope.AccountsStepData.queue.indexOf(track.id) == -1) $scope.AccountsStepData.queue.push(track.id);
//  })
//  $scope.saveUser();
//  $scope.loadQueueSongs();
// }
// $scope.afcount = 0;
// $scope.getAutoFillTracks = function() {
//  function waitForAutofill() {
//    $scope.processing = true;
//    setTimeout(function() {
//      if (!$scope.showAutofillPlayer) {
//        $scope.processing = false;
//        if (!$scope.$$phase) $scope.$apply();
//        $scope.getAutoFillTracks();
//      } else {
//        waitForAutofill();
//      }
//    }, 500);
//  }
//  if ($scope.AccountsStepData.queue.length > 0) {
//    if ($scope.autoFillTracks.includes(undefined) || $scope.autoFillTracks.length < $scope.user.AccountsStepData.length) {
//      waitForAutofill();
//      return;
//    }
//    var track = JSON.parse(JSON.stringify($scope.autoFillTracks[$scope.afcount]));
//    $scope.afcount = ($scope.afcount + 1) % $scope.autoFillTracks.length;
//    $scope.makeEvent.trackID = track.id;
//    if (window.location.href.includes('scheduler') && $scope.findUnrepostOverlap() && track.user.id != $scope.user.id) {
//      if ($scope.afcount == 0) {
//        $scope.showPlayer = false;
//        $scope.makeEvent.trackID = undefined;
//        $.Zebra_Dialog("No more autofill songs can be scheduled here. You are not allowed to repost a track within 24 hours of an unrepost of that track or within 48 hours of a repost of the same track.");
//      } else {
//        $scope.makeEvent.trackID = undefined;
//        $scope.getAutoFillTracks();
//      }
//      return;
//    } else {
//      if ($scope.showOverlay) $scope.choseTrack1(track);
//      else $scope.choseTrack(track);
//    }
//  } else {
//    $scope.showOverlay = false;
//    $.Zebra_Dialog('You do not have any tracks by other artists in your autofill list.', {
//      'type': 'question',
//      'buttons': [{
//        caption: 'Cancel',
//        callback: function() {}
//      }, {
//        caption: 'Autofill',
//        callback: function() {
//          $scope.tabSelected = true;
//          $('.nav-tabs a[href="#managereposts"]').tab('show');
//        }
//      }]
//    });
//  }
// }
// $scope.choseTrack = function(track) {
//  $scope.newQueue = track;
//  $scope.newQueueID = track.id;
// }
// $scope.trackListChange = function(item) {
//  $scope.newQueueSong = $scope.trackListObj.permalink_url;
//  $scope.choseTrack(item)
// };
// $scope.getTrackListFromSoundcloud = function() {
//  if ($scope.AccountsStepData.submissionData) {
//    var id = $scope.AccountsStepData.submissionData.id ? $scope.AccountsStepData.submissionData.id : $scope.AccountsStepData.submissionData.user.id;
//    $scope.processing = true;
//    SC.get('/users/' + id + '/tracks', {
//        filter: 'public'
//      })
//      .then(function(tracks) {
//        $scope.trackList = tracks;
//        $scope.processing = false;
//        $scope.$apply();
//      })
//      .catch(function(response) {
//        $scope.processing = false;
//        $scope.$apply();
//      });
//  }
// }
// $scope.removeQueueSong = function(index) {
//  $scope.AccountsStepData.queue.splice(index, 1);
//  $http.put('/api/database/updateRepostSettings', {
//    queue: $scope.AccountsStepData.queue,
//    id: $scope.AccountsStepData.submissionData.userID
//  }).then(function(res) {
//    SessionService.createAdminUser($scope.AccountsStepData);
//  });
//  $scope.loadQueueSongs();
// }
// $scope.addSong = function() {
//  if ($scope.AccountsStepData.queue == undefined) {
//    $scope.AccountsStepData.queue = []
//  }
//  if ($scope.AccountsStepData.queue.indexOf($scope.newQueueID) != -1) return;
//  $scope.AccountsStepData.queue.push($scope.newQueueID);
//  $http.put('/api/database/profile', {
//    queue: $scope.AccountsStepData.queue,
//    _id: $scope.AccountsStepData.submissionData.userID
//  }).then(function(res) {
//    SessionService.createAdminUser($scope.AccountsStepData);
//  });
//  $scope.newQueueSong = undefined;
//  $scope.trackListObj = "";
//  $scope.newQueue = undefined;
//  $scope.loadQueueSongs();
// }
$scope.saveUser = function(){$scope.processing = true;$http.put("/api/database/profile",{queue:$scope.AccountsStepData.queue,_id:$scope.AccountsStepData.submissionData.userID}).then(function(res){$scope.processing = false;}).then(null,function(err){$.Zebra_Dialog("Error: did not save");$scope.processing = false;});}; // /*sort start*/
// var tmpList = [];
// $scope.sortingLog = [];
// $scope.sortableOptions = {
//  update: function(e, ui) {
//    var logEntry = tmpList.map(function(i) {
//      return i.id;
//    });
//    $scope.AccountsStepData.queue = [];
//    $scope.sortingLog.push('Update: ' + logEntry);
//    $scope.AccountsStepData.queue = logEntry;
//    //$scope.saveUser();
//  },
//  stop: function(e, ui) {
//    // this callback has the changed model
//    var logEntry = tmpList.map(function(i) {
//      return i.id;
//    });
//    $scope.AccountsStepData.queue = [];
//    $scope.sortingLog.push('Stop: ' + logEntry);
//    $scope.AccountsStepData.queue = logEntry;
//    $scope.saveUser();
//  }
// };
// /*sort end*/
// $scope.loadQueueSongs = function(queue) {
//  setTimeout(function() {
//    if ($scope.AccountsStepData.queue == undefined) {
//      $scope.AccountsStepData.queue = [];
//    }
//    var i = 0;
//    $scope.autoFillTracks = [];
//    $scope.AccountsStepData.queue.forEach(function(songID) {
//      SC.get('/tracks/' + songID)
//        .then(function(track) {
//          $scope.autoFillTracks.push(track);
//          i++;
//          tmpList = $scope.autoFillTracks;
//          $scope.list = tmpList;
//          $scope.$digest();
//        }, console.log);
//    })
//  }, 3000);
// }
// $scope.loadQueueSongs();
// $scope.choseAutoFillTrack = function(track) {
//    $scope.searchString = track.title;
//    $scope.newQueueID = track.id;
//    $scope.addSong();
//  }
/*Repost settings end*/$scope.finishAdmin = function(){$state.go("accounts");};$scope.generateRandomNumber = function(){var min=0.01,max=0.09,numbers=(Math.random() * (max - min) + min).toFixed(2);return numbers;};var daysArray=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];var defaultAvailableSlots={'sunday':[1,4,8,11,14,17,20],'monday':[1,4,8,11,14,17,20],'tuesday':[1,4,8,11,14,17,20],'wednesday':[1,4,8,11,14,17,20],'thursday':[1,4,8,11,14,17,20],'friday':[1,4,8,11,14,17,20],'saturday':[1,4,8,11,14,17,20]};$scope.addGroup = function(val){$scope.group = "";$("#group").val('');if($scope.AccountsStepData.submissionData.groups == undefined){$scope.AccountsStepData.submissionData.groups = [];}if($scope.AccountsStepData.submissionData.groups != undefined && $scope.AccountsStepData.submissionData.groups.indexOf(val) == -1){$scope.AccountsStepData.submissionData.groups.push(val);}};$scope.removeGroup = function(index){if($scope.AccountsStepData.submissionData.groups.length > 0){$scope.AccountsStepData.submissionData.groups.splice(index,1);}};$scope.isValidEmailAddress = function(emailAddress){var pattern=/^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;return pattern.test(emailAddress);};$scope.updateLOGOIMAGE = function(step){$scope.processing = true;if($scope.AccountsStepData.profilePicture != "" && step == 1){if(!(typeof $scope.AccountsStepData.profilePicture === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.profilePicture).then(function(res){if(res){$scope.AccountsStepData.profilePicture = res.data.Location;$scope.processing = false;}});}}else if($scope.AccountsStepData.postData != undefined && $scope.AccountsStepData.postData.logo.images != "" && step == 3){if(!(typeof $scope.AccountsStepData.postData.logo.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.postData.logo.images).then(function(res){if(res){$scope.AccountsStepData.postData.logo.images = res.data.Location;$scope.processing = false;}});}}else if($scope.AccountsStepData.premier != undefined && $scope.AccountsStepData.premier.logo.images != "" && step == 4){if(!(typeof $scope.AccountsStepData.premier.logo.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.premier.logo.images).then(function(res){if(res){$scope.AccountsStepData.premier.logo.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};$scope.updateBackgroundIMAGE = function(step){$scope.processing = true;if($scope.AccountsStepData.postData != undefined && $scope.AccountsStepData.postData.logo.images != "" && step == 3){if(!(typeof $scope.AccountsStepData.postData.background.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.postData.background.images).then(function(res){if(res){$scope.AccountsStepData.postData.background.images = res.data.Location;$scope.processing = false;}});}}else if($scope.AccountsStepData.premier != undefined && $scope.AccountsStepData.premier.background.images != "" && step == 4){if(!(typeof $scope.AccountsStepData.premier.background.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.premier.background.images).then(function(res){if(res){$scope.AccountsStepData.premier.background.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};$scope.soundcloudLogin = function(){if($scope.AccountsStepData.submissionData == undefined){$scope.AccountsStepData.submissionData = {};}$scope.processing = true;SC.connect().then(function(res){$rootScope.accessToken = res.oauth_token;return $http.post('/api/login/soundCloudAuthentication',{token:res.oauth_token,password:'test'});}).then(function(res){var scInfo={};scInfo.userID = res.data.user._id;$scope.paidRepostId = res.data.user._id;$scope.defaultSubmitPage.userID = scInfo.userID;$scope.AccountsStepData.postData = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.AccountsStepData.premier = JSON.parse(JSON.stringify($scope.defaultSubmitPage));$scope.AccountsStepData.postData.type = "submit";$scope.AccountsStepData.premier.type = "premiere";$scope.AccountsStepData.premier.heading.test = "Submission for Premiere";console.log($scope.AccountsStepData.postData);console.log($scope.AccountsStepData.premier);$scope.AccountsStepData.postData.logo.images = $scope.AccountsStepData.postData.background.images = $scope.AccountsStepData.premier.logo.images = $scope.AccountsStepData.premier.background.images = res.data.user.soundcloud.avatarURL;$scope.AccountsStepData.pseudoAvailableSlots = createPseudoAvailableSlots(res.data.user);$scope.AccountsStepData.astzOffset = res.data.user.astzOffset;$scope.AccountsStepData.repostSettings = res.data.user.repostSettings;console.log(res.data.user);AccountSettingServices.checkUsercount({"userID":scInfo.userID,'action':"id"}).then(function(result){if(!result.data){scInfo.groups = [];scInfo.description = "";scInfo.price = 1;$scope.AccountsStepData.submissionData = res.data.user.soundcloud;$scope.AccountsStepData.submissionData.userID = res.data.user._id;var username=res.data.user.soundcloud.permalinkURL.substring(res.data.user.soundcloud.permalinkURL.indexOf('.com/') + 5);var url=window.location.origin + '/' + username + '/submit';var premierurl=window.location.origin + '/' + username + '/premiere';AccountSettingServices.checkUsercount({"url":url,'action':"url"}).then(function(result){if(result.data){url = window.location.origin + '/' + username + result.data + '/submit';premierurl = window.location.origin + '/' + username + result.data + '/premiere';$scope.AccountsStepData.submissionData.submissionUrl = url;$scope.AccountsStepData.submissionData.premierUrl = premierurl;}else {$scope.AccountsStepData.submissionData.submissionUrl = url;$scope.AccountsStepData.submissionData.premierUrl = premierurl;}scInfo.submissionUrl = url;scInfo.premierUrl = premierurl;$http.post('/api/database/updateUserAccount',{soundcloudInfo:scInfo}).then(function(user){user.data.paidRepost.reverse();});$http.post('/api/database/profile/edit',{userID:scInfo.userID,admin:true}).then(function(user){});SessionService.createAdminUser($scope.AccountsStepData);$scope.processing = false;$scope.nextStep(2,$scope.AccountsStepData,'channel');}).then(null,function(){console.log(err);$.Zebra_Dialog("Error logging in");});}else {$.Zebra_Dialog('Error: This user already exists');$scope.processing = false;location.reload();}}).then(null,function(){console.log(err);$.Zebra_Dialog("Error logging in");});}).then(null,function(err){console.log(err);$.Zebra_Dialog('Error: Could not log in');$scope.processing = false;});};$scope.isPaidRepost = function(){if($scope.AccountsStepData.formActions == 'Edit'){$scope.activeTab = ['submissionUrl','setPrice','customSubmission','customPremiereSubmission','repostPreferences','manageReposts'];}else {$scope.activeTab = ['submissionUrl'];}};$scope.isPaidRepost();$scope.nextStep = function(step,currentData,type){if(type == "channel"){switch(step){case 1:$http.get("/connect/logout?return_to=https://soundcloud.com/connect?client_id=8002f0f8326d869668523d8e45a53b90&display=popup&redirect_uri=https://" + window.location.host + "/callback.html&response_type=code_and_token&scope=non-expiring&state=SoundCloud_Dialog_5fead");break;case 2:if(!$scope.AccountsStepData.price)$scope.AccountsStepData.price = Math.max(Math.floor($scope.AccountsStepData.submissionData.followers / 3000),7);SessionService.createAdminUser($scope.AccountsStepData);$scope.activeTab.push('setPrice');$('.nav-tabs a[href="#setPrice"]').tab('show');break;case 3:var next=true;if($scope.AccountsStepData.price < 6 || $scope.AccountsStepData.price == undefined){next = false;$.Zebra_Dialog('Please enter a price (minimum $6).');return;}if(next){AccountSettingServices.updatePaidRepost({userID:$scope.AccountsStepData.submissionData.userID,price:$scope.AccountsStepData.price,description:$scope.AccountsStepData.description,groups:$scope.AccountsStepData.submissionData.groups?$scope.AccountsStepData.submissionData.groups:[],submissionUrl:$scope.AccountsStepData.submissionData.submissionUrl,premierUrl:$scope.AccountsStepData.submissionData.premierUrl}).then(function(res){$scope.activeTab.push('customSubmission');$('.nav-tabs a[href="#customSubmission"]').tab('show');SessionService.createAdminUser($scope.AccountsStepData);})['catch'](function(){});}else {return;}break;case 4:AccountSettingServices.addCustomize({userID:$scope.AccountsStepData.submissionData.userID,type:'submit',background:$scope.AccountsStepData.postData.background,logo:$scope.AccountsStepData.postData.logo,heading:$scope.AccountsStepData.postData.heading,subHeading:$scope.AccountsStepData.postData.subHeading,inputFields:$scope.AccountsStepData.postData.inputFields,button:$scope.AccountsStepData.postData.button,layout:$scope.AccountsStepData.postData.layout}).then(function(res){$scope.activeTab.push('customPremiereSubmission');$('.nav-tabs a[href="#customPremiereSubmission"]').tab('show');SessionService.createAdminUser($scope.AccountsStepData);})['catch'](function(){});break;case 5:AccountSettingServices.addCustomize({userID:$scope.AccountsStepData.submissionData.userID,type:'premiere',background:$scope.AccountsStepData.premier.background,logo:$scope.AccountsStepData.premier.logo,heading:$scope.AccountsStepData.premier.heading,subHeading:$scope.AccountsStepData.premier.subHeading,inputFields:$scope.AccountsStepData.premier.inputFields,button:$scope.AccountsStepData.premier.button,layout:$scope.AccountsStepData.premier.layout}).then(function(res){$scope.finish(); // if ($scope.AccountsStepData.pseudoAvailableSlots == undefined) $scope.AccountsStepData.pseudoAvailableSlots = defaultAvailableSlots;
// if (!$scope.AccountsStepData.astzOffset) $scope.AccountsStepData.astzOffset = -300;
// SessionService.createAdminUser($scope.AccountsStepData);
// $scope.activeTab.push('repostPreferences');
// $('.nav-tabs a[href="#repostPreferences"]').tab('show');
}).then(null,alert);break;case 6: //update from pseudo
$scope.AccountsStepData.availableSlots = createAvailableSlots($scope.AccountsStepData,$scope.AccountsStepData.pseudoAvailableSlots);AccountSettingServices.updateUserAvailableSlot({_id:$scope.AccountsStepData.submissionData.userID,availableSlots:$scope.AccountsStepData.availableSlots}).then(function(res){$scope.processing = false;$scope.AccountsStepData.queue = res.data.queue;$scope.loadQueueSongs();$scope.activeTab.push('manageReposts');$('.nav-tabs a[href="#manageReposts"]').tab('show');})['catch'](function(){});break;case 7:SessionService.removeAccountusers($scope.AccountsStepData); // $state.go("accounts");
break;}}};$scope.openModal = function(type){if(type === 'paid'){$('#paidCommentModal').modal('show');}};$scope.setSlotStyle = function(day,hour){var style={};if($scope.AccountsStepData.pseudoAvailableSlots != undefined){if($scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]] != undefined && $scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]].indexOf(hour) > -1){style = {'background-color':"#fff",'border-color':"#999"};}}return style;};$scope.tooManyReposts = function(day,hour){var startDayInt=(day + 6) % 7;var allSlots=[];var wouldBeSlots=JSON.parse(JSON.stringify($scope.AccountsStepData.pseudoAvailableSlots));wouldBeSlots[daysArray[day]].push(hour);for(var i=0;i < 3;i++) {wouldBeSlots[daysArray[(startDayInt + i) % 7]].forEach(function(slot){allSlots.push(slot + i * 24);});}allSlots = allSlots.sort(function(a,b){return a - b;});var checkingSlots=[];var status=false;allSlots.forEach(function(slot){var i=0;while(i < checkingSlots.length) {if(Math.abs(checkingSlots[i] - slot) > 24)checkingSlots.splice(i,1);else i++;}checkingSlots.push(slot);if(checkingSlots.length > 10){status = true;}});return status;};$scope.clickedSlotsave = function(day,hour){var pushhour=parseInt(hour);if($scope.AccountsStepData.pseudoAvailableSlots != undefined && $scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]].indexOf(pushhour) > -1){$scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]].splice($scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]].indexOf(pushhour),1);}else if($scope.tooManyReposts(day,hour)){$.Zebra_Dialog("Cannot enable slot. We only allow 10 reposts within 24 hours to prevent you from being repost blocked.");return;}else if($scope.AccountsStepData.pseudoAvailableSlots != undefined){$scope.AccountsStepData.pseudoAvailableSlots[daysArray[day]].push(pushhour);}};$scope.updateCustomLogoImage = function(){$scope.processing = true;if($scope.AccountsStepData.postData != undefined && $scope.AccountsStepData.postData.logo.images != ""){if(!(typeof $scope.AccountsStepData.postData.logo.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.postData.logo.images).then(function(res){if(res){$scope.AccountsStepData.postData.logo.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};$scope.updatePremierLogoImage = function(){$scope.processing = true;if($scope.AccountsStepData.premier != undefined && $scope.AccountsStepData.premier.logo.images != ""){if(!(typeof $scope.AccountsStepData.premier.logo.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.premier.logo.images).then(function(res){if(res){$scope.AccountsStepData.premier.logo.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};$scope.uploadCustomBackground = function(){$scope.processing = true;if($scope.AccountsStepData.postData != undefined && $scope.AccountsStepData.postData.background.images != ""){if(!(typeof $scope.AccountsStepData.postData.background.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.postData.background.images).then(function(res){if(res){$scope.AccountsStepData.postData.background.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}}; // $scope.fontFam = "'Aref Ruqaa', cursive";
$scope.uploadPremierBackground = function(){$scope.processing = true;if($scope.AccountsStepData.premier != undefined && $scope.AccountsStepData.premier.background.images != ""){if(!(typeof $scope.AccountsStepData.premier.background.images === 'undefined')){AccountSettingServices.uploadFile($scope.AccountsStepData.premier.background.images).then(function(res){if(res){$scope.AccountsStepData.premier.background.images = res.data.Location;$scope.processing = false;}});}}else {$scope.processing = false;}};$scope.changeFont = function(fnt,title){$scope[fnt] = title;};$scope.fontFamilies = [{title:"Aref Ruqaa",css:"'Aref Ruqaa', serif"},{title:"Open Sans",css:"'Open Sans', sans-serif"},{title:"Space Mono",css:"'Space Mono', monospace"},{title:"Roboto Slab",css:"'Roboto Slab', serif"},{title:"Merriweather",css:"'Merriweather', serif"},{title:"Molle",css:"'Molle', cursive"},{title:"Playfair Display",css:"'Playfair Display', serif"},{title:"Indie Flower",css:"'Indie Flower', cursive"},{title:"Nova Script",css:"'Nova Script', cursive"},{title:"Inconsolata",css:"'Inconsolata', monospace"},{title:"Lobster",css:"'Lobster', cursive"},{title:"Arvo",css:"'Arvo', serif"},{title:"Yanone Kaffeesatz",css:"'Yanone Kaffeesatz', sans-serif"},{title:"Abel",css:"'Abel', sans-serif"},{title:"Gloria Hallelujah",css:"'Gloria Hallelujah', cursive"},{title:"Pacifico",css:"'Pacifico', cursive"},{title:"Bungee",css:"'Bungee', cursive"},{title:"Exo",css:"'Exo', sans-serif"},{title:"Shadows Into Light",css:"'Shadows Into Light', cursive"},{title:"Dancing Script",css:"'Dancing Script', cursive"},{title:"Play",css:"'Play', sans-serif"},{title:"Amatic SC",css:"'Amatic SC', cursive"},{title:"Poiret One",css:"'Poiret One', cursive"},{title:"Orbitron",css:"'Orbitron', sans-serif"},{title:"Sahitya",css:"'Sahitya', serif"},{title:"Architects Daughter",css:"'Architects Daughter', cursive"},{title:"Acme",css:"'Acme', sans-serif"},{title:"Cinzel",css:"'Cinzel', serif"},{title:"Josefin Slab",css:"'Josefin Slab', serif"},{title:"Lobster Two",css:"'Lobster Two', cursive"},{title:"Permanent Marker",css:"'Permanent Marker', cursive"},{title:"Chewy",css:"'Chewy', cursive"},{title:"Special Elite",css:"'Special Elite', cursive"},{title:"Calligraffitti",css:"'Calligraffitti', cursive"},{title:"Ceviche One",css:"'Ceviche One', cursive"},{title:"Press Start 2P",css:"'Press Start 2P', cursive"},{title:"Cinzel Decorative",css:"'Cinzel Decorative', cursive"}];}};});app.directive('slmodal',function($http){return {templateUrl:'js/common/directives/shareLink/shareLink.html',restrict:'EA',scope:{title:'=modalTitle',header:'=modalHeader',body:'=modalBody',footer:'=modalFooter',callbackbuttonleft:'&ngClickLeftButton',callbackbuttonright:'&ngClickRightButton',handler:'=lolo',eventId:'=eventId',event:'=event',trade:'=trade',eventType:'=eventType'},transclude:true,controller:function controller($scope,$rootScope){$scope.handler = 'pop';$scope.origin = window.location.origin;$scope.makeChange = function(){};$scope.$watch('eventId',function(){$scope.makeChange();if(!!$scope.event || !!$scope.trade){if($scope.eventType == 'share'){$scope.shareLink = 'artistsunlimited.com/repostevents/' + $scope.event.user.soundcloud.pseudoname + "/" + $scope.event.pseudoname;if($scope.event)$scope.messengerLink = 'https://' + $scope.shareLink;$scope.scurl = "https://soundcloud.com";}else {if($scope.trade){$scope.shareLink = 'artistsunlimited.com/artistTools/trade/' + $scope.trade.p1.user.soundcloud.pseudoname + '/' + $scope.trade.p2.user.soundcloud.pseudoname;$scope.messengerLink = 'https://' + $scope.shareLink;$scope.scurl = $scope.trade.other.user.soundcloud.permalinkURL;}}}$rootScope.reloadFB();});$scope.sendMail = function(id){window.open("mailto:example@demo.com?body=" + $scope.shareLink,"_self");};}};});app.directive('youtubeModal',function($http){return {templateUrl:'js/common/directives/youtubeLinks/youtubeLink.html',restrict:'EA',scope:{title:'=modalTitle',header:'=modalHeader',body:'=modalBody',footer:'=modalFooter',handler:'=youTube'},transclude:true,controller:function controller($scope){$scope.handler = 'ytube';$scope.origin = window.location.origin;if(window.location.pathname.indexOf('scheduler') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/vUCM_0evdQY";}else if(window.location.pathname.indexOf('reposttraders') > -1 || window.location.pathname.indexOf('reForReLists') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/LA_HEUM_xqc";}else if(window.location.pathname.indexOf('admin/submission') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/vUCM_0evdQY";}else if(window.location.pathname.indexOf('downloadGateway') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/vUCM_0evdQY";}else if(window.location.pathname.indexOf('reForReInteraction') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/vUCM_0evdQY";}else if(window.location.pathname.indexOf('admin/premiersubmissions') > -1){$scope.youtubeUrl = "https://www.youtube.com/embed/vUCM_0evdQY";}}};});app.filter('trusted',['$sce',function($sce){return function(url){return $sce.trustAsResourceUrl(url);};}]);app.factory('AccountSettingServices',['$http',function($http){function updateAdminProfile(data){return $http.post('/api/users/updateAdminProfile',data);}function updateUserAvailableSlot(data){return $http.put('/api/users/updateuserRecord',data);}function updatePaidRepost(data){return $http.post('/api/users/updatePaidRepost',data);}function getSaltPassword(data){return $http.get('/api/users/getSaltPassword/pswd=' + data.password);}function addCustomize(data){return $http.post('/api/customsubmissions/addCustomSubmissions',data);}function checkUsercount(data){return $http.post('/api/users/checkUsercount',data);}function uploadFile(data){var fd=new FormData();fd.append('file',data);return $http({method:'POST',url:'/api/users/profilePicUpdate',headers:{'Content-Type':undefined},tranformRequest:angular.identify,data:fd}).then(function(response){return response.data;});}return {getSaltPassword:getSaltPassword,updateAdminProfile:updateAdminProfile,uploadFile:uploadFile,checkUsercount:checkUsercount,addCustomize:addCustomize,updateUserAvailableSlot:updateUserAvailableSlot,updatePaidRepost:updatePaidRepost};}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
